<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator><link href="http://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="http://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2016-04-18T06:12:19+00:00</updated><id>http://www.yegor256.com/</id><title>Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor@teamed.io</email></author><entry><title>Java Annotations Are a Big Mistake</title><link href="http://www.yegor256.com/2016/04/12/java-annotations-are-evil.html" rel="alternate" type="text/html" title="Java Annotations Are a Big Mistake" /><published>2016-04-12T00:00:00+00:00</published><updated>2016-04-12T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/12/java-annotations-are-evil</id><content type="html" xml:base="http://www.yegor256.com/2016/04/12/java-annotations-are-evil.html">&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_annotation&quot;&gt;Annotations&lt;/a&gt;
were introduced in Java 5, and we all got excited. Such a great
instrument to make code shorter! No more Hibernate/Spring XML configuration
files! Just annotations, right there in the code where we need them. No more
&lt;a href=&quot;https://en.wikipedia.org/wiki/Marker_interface_pattern&quot;&gt;marker interfaces&lt;/a&gt;,
just a &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Retention.html&quot;&gt;runtime-retained&lt;/a&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/4296910/&quot;&gt;reflection-discoverable&lt;/a&gt; annotation!
I was excited too. Moreover, I&amp;#39;ve made a few open source libraries which
use annotations heavily. Take &lt;a href=&quot;https://github.com/jcabi/jcabi-aspects&quot;&gt;jcabi-aspects&lt;/a&gt;,
for example. However, I&amp;#39;m not excited any more. Moreover, I believe that
annotations are a big mistake in Java design.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Long story short, there is one big problem with annotations &amp;mdash;
they encourage us to implement
&lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;object&lt;/a&gt;
functionality &lt;strong&gt;outside&lt;/strong&gt; of an object,
which is against the very principle of
&lt;a href=&quot;https://en.wikipedia.org/wiki/Encapsulation_%28computer_programming%29&quot;&gt;encapsulation&lt;/a&gt;.
The object is not solid any more, since its behavior is not defined entirely by its own
methods &amp;mdash; some of its functionality stays elsewhere. Why is it bad? Let&amp;#39;s
see in a few examples.&lt;/p&gt;

&lt;h2 id=&quot;inject&quot;&gt;&lt;code&gt;@Inject&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Say we annotate a property with &lt;code&gt;@Inject&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.inject.Inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Inject&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// some methods here, which use this.db&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we have an injector that knows what to inject:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Injector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;injector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Guice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createInjector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AbstractModule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;jdbc:postgresql:5740/main&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we&amp;#39;re making an instance of class &lt;code&gt;Books&lt;/code&gt; via the container:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;injector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The class &lt;code&gt;Books&lt;/code&gt; has no idea how and who will inject an instance
of class &lt;code&gt;DB&lt;/code&gt; into it. This will happen behind the scenes and outside
of its control. The injection will do it. It may look convenient,
but this attitude causes a lot of damage to the entire code base. The
control is lost (not inverted, but lost!). The object is not in charge
any more. It can&amp;#39;t be responsible for what&amp;#39;s happening to it.&lt;/p&gt;

&lt;p&gt;Instead, here is how this should be done:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// some methods here, which use this.db&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This article explains why Dependency Injection containers are
a wrong idea in the first place:
&lt;a href=&quot;/2014/10/03/di-containers-are-evil.html&quot;&gt;Dependency Injection Containers are Code Polluters&lt;/a&gt;.
Annotations basically provoke us to make the containers and use them.
We move functionality outside of our objects and put it into
containers, or somewhere else. That&amp;#39;s because we don&amp;#39;t want to duplicate the
same code over and over again, right? That&amp;#39;s correct, duplication is
bad, but tearing an object apart is even worse. Way worse. The same is
true about ORM (JPA/Hibernate), where annotations are being actively used.
Check this post, it explains what is wrong about ORM:
&lt;a href=&quot;/2014/12/01/orm-offensive-anti-pattern.html&quot;&gt;ORM Is an Offensive Anti-Pattern&lt;/a&gt;.
Annotations by themselves are not the key motivator, but they help us
and encourage us by tearing objects apart and keeping parts in different
places. They are containers, sessions, managers, controllers, etc.&lt;/p&gt;

&lt;h2 id=&quot;xmlelement&quot;&gt;&lt;code&gt;@XmlElement&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;This is how JAXB
&lt;a href=&quot;/2015/03/26/jaxb-vs-xembly.html&quot;&gt;works&lt;/a&gt;, when you want to convert your
&lt;a href=&quot;https://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt; to XML. First,
you attach the &lt;code&gt;@XmlElement&lt;/code&gt; annotation to the getter:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlRootElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@XmlRootElement&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@XmlElement&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, you create a marshaller and ask it to convert an instance of class
&lt;code&gt;Book&lt;/code&gt; into XML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0132350882&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Clean Code&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JAXBContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JAXBContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Marshaller&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marshaller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jaxbContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createMarshaller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;marshaller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;marshal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Who is creating the XML? Not the &lt;code&gt;book&lt;/code&gt;. Someone else, outside of the
class &lt;code&gt;Book&lt;/code&gt;. This is very wrong. Instead, this is how this should have
been done. First, the class that has no idea about XML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DefaultBook&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;DefaultBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, the
&lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;decorator&lt;/a&gt;
that prints it to the XML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XmlBook&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;XmlBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;book&amp;gt;&amp;lt;title&amp;gt;%s&amp;lt;/title&amp;gt;&amp;lt;/book&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, in order to &lt;a href=&quot;/2016/04/05/printers-instead-of-getters.html&quot;&gt;print&lt;/a&gt;
the book in XML we do the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;XmlBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DefaultBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Elegant Objects&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The XML printing functionality is inside &lt;code&gt;XmlBook&lt;/code&gt;. If you don&amp;#39;t like the
decorator idea, you can move the &lt;code&gt;toXML()&lt;/code&gt; method to the &lt;code&gt;DefaultBook&lt;/code&gt; class. It&amp;#39;s
not important. What is important is that the functionality always stays
where it belongs &amp;mdash; inside the object. Only the object knows how
to
&lt;a href=&quot;/2016/04/05/printers-instead-of-getters.html&quot;&gt;print itself&lt;/a&gt;
to the XML. Nobody else!&lt;/p&gt;

&lt;h2 id=&quot;retryonfailure&quot;&gt;&lt;code&gt;@RetryOnFailure&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Here is an example
(from &lt;a href=&quot;/2014/08/15/retry-java-method-on-exception.html&quot;&gt;my own library&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.jcabi.aspects.RetryOnFailure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@RetryOnFailure&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After compilation, we run a so called
&lt;a href=&quot;/2014/06/01/aop-aspectj-java-method-logging.html&quot;&gt;AOP weaver&lt;/a&gt;
that technically turns our code into something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ignore it&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;_Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I simplified the actual algorithm of retrying a method call on failure, but I&amp;#39;m
sure you get the idea. &lt;a href=&quot;http://www.aspectj.org&quot;&gt;AspectJ&lt;/a&gt;,
the &lt;a href=&quot;http://en.wikipedia.org/wiki/Aspect-oriented_programming&quot;&gt;AOP&lt;/a&gt;
engine, uses
&lt;a href=&quot;http://aspects.jcabi.com/annotation-retryonfailure.html&quot;&gt;&lt;code&gt;@RetryOnFailure&lt;/code&gt;&lt;/a&gt;
annotation as a signal, informing us that the class
has to be wrapped into another one. This is happening behind the scenes. We don&amp;#39;t
see that supplementary class, which implements the retrying algorithm.
But the bytecode produced by the AspectJ weaver contains a modified
version of class &lt;code&gt;Foo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That is exactly what is wrong with this approach &amp;mdash; we don&amp;#39;t see
and don&amp;#39;t control the instantiation of that supplementary object. Object
composition, which is the most important process in object design, is
hidden somewhere behind the scenes. You may say that we don&amp;#39;t need
to see it since it&amp;#39;s supplementary. I disagree. We must see how
our objects are composed. We may not care about how they work, but we
must see the entire composition process.&lt;/p&gt;

&lt;p&gt;A much better design would look like this (instead of annotations):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FooThatRetries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then, the implementation of &lt;code&gt;FooThatRetries&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooThatRetries&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FooThatRetries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Algorithm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooThatRetries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And now, the implementation of &lt;code&gt;Retry&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Retry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Algorithm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ignore it&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Algorithm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Is the code longer? Yes. Is it cleaner? A lot more. I regret that I
didn&amp;#39;t understand it two years ago, when I started to work with
&lt;a href=&quot;https://github.com/jcabi/jcabi-aspects&quot;&gt;jcabi-aspects&lt;/a&gt;.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;The bottom line is that annotations are bad. Don&amp;#39;t use them. What should be used
instead? Object &lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;composition&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What could be worse than annotations? Configurations.
For example, XML configurations. Spring XML configuration mechanisms is a perfect
example of terrible design. I&amp;#39;ve said it many times before. Let
me repeat it again &amp;mdash; Spring Framework is one of the worst
software products in the Java world. If you can stay away from it, you will
do yourself a big favor.&lt;/p&gt;

&lt;p&gt;There should not be any &amp;quot;configurations&amp;quot; in OOP. We can&amp;#39;t configure our
objects if they are real objects. We can only instantiate them. And the
best method of instantiation is operator &lt;code&gt;new&lt;/code&gt;. This operator is the key
instrument for an OOP developer. Taking it away from us and giving us
&amp;quot;configuration mechanisms&amp;quot; is an unforgivable
&lt;a href=&quot;/2015/11/24/imprisonment-for-irresponsible-coding.html&quot;&gt;crime&lt;/a&gt;.&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>Annotations
were introduced in Java 5, and we all got excited. Such a great
instrument to make code shorter! No more Hibernate/Spring XML configuration
files! Just annotations, right there in the code where we need them. No more
marker interfaces,
just a runtime-retained
reflection-discoverable annotation!
I was excited too. Moreover, I&amp;#39;ve made a few open source libraries which
use annotations heavily. Take jcabi-aspects,
for example. However, I&amp;#39;m not excited any more. Moreover, I believe that
annotations are a big mistake in Java design.</summary></entry><entry><title>Growing Revenue May Kill Your Startup</title><link href="http://www.yegor256.com/2016/04/08/revenue-may-kill-startup.html" rel="alternate" type="text/html" title="Growing Revenue May Kill Your Startup" /><published>2016-04-08T00:00:00+00:00</published><updated>2016-04-08T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/08/revenue-may-kill-startup</id><content type="html" xml:base="http://www.yegor256.com/2016/04/08/revenue-may-kill-startup.html">&lt;p&gt;Revenue means &lt;strong&gt;cash&lt;/strong&gt; that is coming into your bank account every month
from your customers. Not investors. Customers, those who are buying
your products or services. You are doing everything you can
to make sure this number grows, mostly because you use this money
to pay your rent, buy food, and settle that graphic designer&amp;#39;s invoices.
Without revenue, your startup will die, right? Yes, maybe. But in my experience,
growing revenue may kill it even faster.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F04%2Fblow.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Blow (2001) by Ted Demme&#39;/&gt;&lt;figcaption&gt;Blow (2001) by Ted Demme&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I see this rather typical pattern in many startups we interview
at &lt;a href=&quot;http://www.seedramp.com&quot;&gt;SeedRamp&lt;/a&gt;. The idea is great, the prototype
works, the first customers are on board, and the first payments are coming in.
The founders are excited. They spend all their energy to make sure those
first paying customers are happy by creating new features, fixing bugs, and employing
new CRMs. They also try to acquire new
buyers and pay for marketing, promotion, and Google AdWords. The numbers
grow every month and ... they don&amp;#39;t realize they are
actually &lt;strong&gt;killing&lt;/strong&gt; their own startup.&lt;/p&gt;

&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.seedramp.com&#39;&gt;&lt;img src=&#39;http://www.seedramp.com/images/logo.svg&#39; style=&#39;width:128px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;If you&amp;#39;re building a cafe, a bakery, a web development studio,
or a bicycle repair shop, a growing customer base with stable revenue
must be your main objective. Because your main source of income is the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Profit_%28accounting%29&quot;&gt;profit&lt;/a&gt;
you will get from the business, in the form of
&lt;a href=&quot;https://en.wikipedia.org/wiki/Dividend&quot;&gt;dividends&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How rich you will become depends on many factors, but usually such a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Lifestyle_business&quot;&gt;lifestyle business&lt;/a&gt;
takes years to really take off and start making millions of dollars, which
you&amp;#39;re obviously looking for.&lt;/p&gt;

&lt;p&gt;In that type of business, almost everything depends on your energy,
your management skills, and your ability to work non-stop and motivate others
to do the same. If you have all that in place, you most certainly will
get what you deserve sooner or later. In most cases, later.
But you will get it.&lt;/p&gt;

&lt;p&gt;The concept of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Startup_company&quot;&gt;startup company&lt;/a&gt;
is completely different. A startup is a &lt;strong&gt;wild bet&lt;/strong&gt; you&amp;#39;re making on some
crazy idea that makes &amp;quot;the world a better place&amp;quot;. You&amp;#39;re building
a new Facebook, a Google killer, or a Snapchat replacement. Your goal
is huge, while the investment is very small. Just a few years of work
and you&amp;#39;ll score hundreds of millions. This money will come not from
happy customers and steadily growing revenue. Not at all. You will
become filthy rich only when someone buys your startup.&lt;/p&gt;

&lt;p&gt;These two strategies contradict each other:
a traditional business vs. a startup.&lt;/p&gt;

&lt;p&gt;Customers and revenue are not the goal of a startup, but rather
an &lt;strong&gt;instrument&lt;/strong&gt; that helps you achieve the real goal:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Business_valuation&quot;&gt;valuation&lt;/a&gt;. You are
supposed to use your revenue to convince investors
that the prototype works and your valuation is already high enough.
Your steadily growing cash flow right now must be used as a demonstration of a future
&lt;a href=&quot;https://en.wikipedia.org/wiki/Customer_acquisition_management&quot;&gt;customer acquisition&lt;/a&gt;
model. But it is not the result by itself. It is just a tool in your hands.&lt;/p&gt;

&lt;p&gt;Your valuation is what makes you rich, &lt;strong&gt;not&lt;/strong&gt; your revenue or your happy
customers. Of course, the revenue is important, but only as long as
it serves the main goal &amp;mdash; increase valuation at an extremely
fast pace. The revenue is not the goal; it&amp;#39;s the way to achieve it. The valuation
is the goal.&lt;/p&gt;

&lt;p&gt;Startup valuation must grow fast, ideally doubling itself every few months.
If that&amp;#39;s not happening, close the business and start something else. The
valuation must &lt;strong&gt;skyrocket&lt;/strong&gt; or you have to abandon the startup and try your
hand on another one as soon as possible.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;The revenue is good for you but not really good for investors&lt;/aside&gt;

&lt;p&gt;One of the biggest mistakes a startup founder can make is to forget
about this &amp;quot;skyrocketing valuation&amp;quot; principle and focus on making
customers happy and grow revenue. You will most likely kill your
startup and maybe turn it into a lifestyle business.&lt;/p&gt;

&lt;p&gt;Savvy investors will avoid you, mostly because they
understand that growing revenue is just one of many other
&lt;strong&gt;elements&lt;/strong&gt; of a growing valuation. If you&amp;#39;re focused on just one element,
you most likely won&amp;#39;t multiply your valuation a hundred times over the
next year. Maybe you will multiply revenue a few times, but who cares?
The revenue is good for you but not really good for investors.&lt;/p&gt;

&lt;p&gt;What is good for investors? What do they want to see you doing
to convince them that you&amp;#39;re working hard on making the valuation
grow? I&amp;#39;ll try to cover that in one of the next articles.&lt;/p&gt;</content><category term="startup" /><summary>Revenue means cash that is coming into your bank account every month
from your customers. Not investors. Customers, those who are buying
your products or services. You are doing everything you can
to make sure this number grows, mostly because you use this money
to pay your rent, buy food, and settle that graphic designer&amp;#39;s invoices.
Without revenue, your startup will die, right? Yes, maybe. But in my experience,
growing revenue may kill it even faster.</summary></entry><entry><title>Printers Instead of Getters</title><link href="http://www.yegor256.com/2016/04/05/printers-instead-of-getters.html" rel="alternate" type="text/html" title="Printers Instead of Getters" /><published>2016-04-05T00:00:00+00:00</published><updated>2016-04-05T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/05/printers-instead-of-getters</id><content type="html" xml:base="http://www.yegor256.com/2016/04/05/printers-instead-of-getters.html">&lt;p&gt;Getters and setters &lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;are evil&lt;/a&gt;.
No need to argue about this, it&amp;#39;s settled. You disagree?
Let&amp;#39;s discuss that later. For now, let&amp;#39;s say, we want to get rid of getters.
The key question is how is it possible at all? We do need to get
the data out of an object, right? Nope. Wrong.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F04%2Famelie.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Le fabuleux destin d&amp;amp;apos;Amélie Poulain (2001) by Jean-Pierre Jeunet&#39;/&gt;&lt;figcaption&gt;Le fabuleux destin d&amp;#39;Amélie Poulain (2001) by Jean-Pierre Jeunet&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I&amp;#39;m suggesting to use &amp;quot;printers&amp;quot; instead. Instead of exposing
data via getters, an object will have a functionality of &lt;strong&gt;printing&lt;/strong&gt;
itself to some media.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say this is our class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We need it to be transferred into XML format. A more
or less traditional way to do it is via getters and
&lt;a href=&quot;/2015/03/26/jaxb-vs-xembly.html&quot;&gt;JAXB&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlRootElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@XmlRootElement&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@XmlElement&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getIsbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@XmlElement&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is a very &lt;a href=&quot;/2014/12/01/orm-offensive-anti-pattern.html&quot;&gt;offensive&lt;/a&gt;
way of treating the
&lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;object&lt;/a&gt;. We&amp;#39;re basically
exposing everything that&amp;#39;s inside to the public. It was a nice
little self-sufficient solid object and we turned it into a bag of data,
which anyone can access in many possible ways. We can access it for reading, of course.&lt;/p&gt;

&lt;p&gt;It is convenient to have these getters, you may say. We are all used to them.
If we want to convert it into
&lt;a href=&quot;/2015/11/16/json-vs-xml.html&quot;&gt;JSON&lt;/a&gt;,
they will be very helpful. If we want
to use this poor object as a data object in JSP, getters will help us. There
are many examples in Java, where getters are being actively used.&lt;/p&gt;

&lt;p&gt;This is &lt;strong&gt;not&lt;/strong&gt; because they are so effective. This is because we&amp;#39;re so
&lt;a href=&quot;/2015/02/20/utility-classes-vs-functional-programming.html&quot;&gt;&lt;strong&gt;procedural&lt;/strong&gt;&lt;/a&gt;
in our way of thinking. We &lt;strong&gt;don&amp;#39;t trust&lt;/strong&gt; our objects. We only trust
the data they store. We don&amp;#39;t want this &lt;code&gt;Book&lt;/code&gt; object to generate the XML. We
want it to give us the data. We will build the XML. The &lt;code&gt;Book&lt;/code&gt; is too stupid
to do that job. We&amp;#39;re way smarter!&lt;/p&gt;

&lt;p&gt;I&amp;#39;m suggesting to stop thinking this way. Instead, let&amp;#39;s try to give
this poor &lt;code&gt;Book&lt;/code&gt; a chance, and equip it with a &amp;quot;printer&amp;quot;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;book&amp;gt;&amp;lt;isbn&amp;gt;%s&amp;lt;/isbn&amp;gt;&amp;lt;title&amp;gt;%s&amp;lt;/title&amp;gt;&amp;lt;/book&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This isn&amp;#39;t the &lt;a href=&quot;/2015/03/26/jaxb-vs-xembly.html&quot;&gt;best&lt;/a&gt;
implementation, but you got the idea. The object is not
exposing its internals any more. We can&amp;#39;t get its ISBN and its title. We
can only ask it to print itself in XML format.&lt;/p&gt;

&lt;p&gt;We can add an additional printer, if another format is required:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;{\&amp;quot;isbn\&amp;quot;:\&amp;quot;%s\&amp;quot;, \&amp;quot;title\&amp;quot;:\&amp;quot;%s\&amp;quot;}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, not the best implementation, but you see what I&amp;#39;m trying to show.
Each time we need a new format, we create a new printer.&lt;/p&gt;

&lt;p&gt;You may say that the object will be rather big if there will be many formats.
That&amp;#39;s true, but a big object is a bad design in the first place. I would
say that if there is more than one printer &amp;mdash; it&amp;#39;s a problem.&lt;/p&gt;

&lt;p&gt;So, what to do if we need multiple formats? Use &amp;quot;media&amp;quot;, where that printers
will be able to print to. Say, we have an object that represents a
record in MySQL. We want it to be printable to XML, HTML, JSON, some binary
format and God knows what else. We can add that many printers to it, but
the object will be big and ugly. To avoid that, introduce a new object,
that represents the media where the data will be printed to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;isbn&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, it&amp;#39;s a very primitive design of that
&lt;a href=&quot;/2014/06/09/objects-should-be-immutable.html&quot;&gt;immutable&lt;/a&gt;
&lt;code&gt;Media&lt;/code&gt; class, but you got
the idea &amp;mdash; the &lt;code&gt;media&lt;/code&gt; accepts the data.
Now, we want to print our object to JSON
(this design is not really perfect, since &lt;code&gt;JsonObjectBuilder&lt;/code&gt; is not immutable,
even though it looks like one...):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JsonMedia&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonObjectBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createObjectBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonObjectBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we make an instance of &lt;code&gt;JsonMedia&lt;/code&gt; and ask our book to print
itself there:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;JsonMedia&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;book&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Voilà! The JSON object is ready and the book has no idea about what
exactly what printed just now. We need to print the book to XML? We
create &lt;code&gt;XmlMedia&lt;/code&gt;, which will print the book to XML. The &lt;code&gt;Book&lt;/code&gt; class
stays small, while the complexity of &amp;quot;media&amp;quot; objects is unlimited.&lt;/p&gt;

&lt;p&gt;My point here is simple &amp;mdash; no
&lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;getters&lt;/a&gt;,
just printers!&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>Getters and setters are evil.
No need to argue about this, it&amp;#39;s settled. You disagree?
Let&amp;#39;s discuss that later. For now, let&amp;#39;s say, we want to get rid of getters.
The key question is how is it possible at all? We do need to get
the data out of an object, right? Nope. Wrong.</summary></entry><entry><title>Jare.io, an Instant and Free CDN</title><link href="http://www.yegor256.com/2016/03/30/jare-instant-free-cdn.html" rel="alternate" type="text/html" title="Jare.io, an Instant and Free CDN" /><published>2016-03-30T00:00:00+00:00</published><updated>2016-03-30T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/03/30/jare-instant-free-cdn</id><content type="html" xml:base="http://www.yegor256.com/2016/03/30/jare-instant-free-cdn.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.jare.io&#39;&gt;&lt;img src=&#39;http://www.jare.io/images/logo.svg&#39; style=&#39;width:92px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;CDN stands for a Content Delivery Network. Technically, it is a bunch
of servers located in different countries and continents. You give them
your &lt;code&gt;logo.gif&lt;/code&gt; and they give you a URL, which resolves to a different
server depending on who is trying to resolve it. As a result, the
file is always close to the end-user and your website loads much faster
than without a CDN. Sounds good, but all CDN providers want money
for their service and usually a rather complex setup and registration
procedure. My pet project &lt;a href=&quot;http://www.jare.io&quot;&gt;jare.io&lt;/a&gt; is a free
CDN that is simple to configure. It utilizes AWS CloudFront resources.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;First, let me show how it works and then, if you&amp;#39;re interested in
the details, I will explain how it&amp;#39;s done internally. Say you have
this HTML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.teamed.io/image/logo.svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I want this &lt;code&gt;logo.svg&lt;/code&gt; to be delivered via a CDN. There are two steps.
First, I register my domain at &lt;a href=&quot;http://www.jare.io&quot;&gt;jare.io&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&#39;unprintable&#39;&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Fjare-1.png&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;figure&#39;/&gt;&lt;/figure&gt;

&lt;p&gt;Second, I change my HTML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://cf.jare.io/?u=http://www.teamed.io/images/logo.svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;Try it with your own resources and you will see how
much faster they will be loaded.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s absolutely free, but I ask you to be reasonable. If your traffic
is huge, you need your own account in CloudFront or somewhere else. My
service is for small projects.&lt;/p&gt;

&lt;p&gt;Now for more technical details, if you want to know how technically
this solution works. First, let&amp;#39;s discuss what CDN is and how it works.&lt;/p&gt;

&lt;h2 id=&quot;url-dns-tcp-http&quot;&gt;URL, DNS, TCP, HTTP&lt;/h2&gt;

&lt;p&gt;When your browser wants to load an image, it has a &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator&quot;&gt;URL&lt;/a&gt;
for that, like in the example above. This is the URL: &lt;code&gt;http://www.teamed.io/image/logo.svg&lt;/code&gt;.
There are three important parts in this address. First is &lt;code&gt;http&lt;/code&gt;, the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Communications_protocol&quot;&gt;protocol&lt;/a&gt;.
Second is &lt;code&gt;www.teamed.io&lt;/code&gt;, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Host_%28network%29&quot;&gt;host&lt;/a&gt; name,
and the tail &lt;code&gt;/images/logo.svg&lt;/code&gt;, which is the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Syntax&quot;&gt;path&lt;/a&gt;.
To load the image, the browser has to open a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Network_socket&quot;&gt;socket&lt;/a&gt;,
connecting your computer and the server, which has the image. To open a
socket, the browser needs to know the
&lt;a href=&quot;https://en.wikipedia.org/wiki/IP_address&quot;&gt;IP address&lt;/a&gt; of the server.&lt;/p&gt;

&lt;p&gt;There is no such address in that URL. In order to find the IP address,
the browser is doing what is called a lookup. It connects to the
nearest &lt;a href=&quot;https://en.wikipedia.org/wiki/Name_server&quot;&gt;name server&lt;/a&gt;
and asks &amp;quot;what is the IP address of &lt;a href=&quot;http://www.teamed.io?&quot;&gt;www.teamed.io?&lt;/a&gt;&amp;quot;
The answer usually contains a single IP address:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ nslookup www.teamed.io
Server:   172.16.0.1
Address:  172.16.0.1#53

Non-authoritative answer:
www.teamed.io canonical name = teamed.github.io.
teamed.github.io  canonical name = github.map.fastly.net.
Name: github.map.fastly.net
Address: 199.27.79.133&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;IP address of &lt;code&gt;www.teamed.io&lt;/code&gt; is &lt;code&gt;199.27.79.133&lt;/code&gt;, at the time of writing.&lt;/p&gt;

&lt;p&gt;When the address is known, the browser opens a new socket and sends
an &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_message&quot;&gt;HTTP request&lt;/a&gt;
through it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;GET /images/logo.svg HTTP/1.1
Host: www.teamed.io
Accept: image/*&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The server responds with an
&lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Response_message&quot;&gt;HTTP response&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;HTTP/1.1 200 OK
Content-Type: image/svg+xml

[SVG image content goes here, over 1000 bytes]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Scalable_Vector_Graphics&quot;&gt;SVG&lt;/a&gt;
image we&amp;#39;re looking for. The browser renders it on the web page
and that&amp;#39;s it.&lt;/p&gt;

&lt;h2 id=&quot;the-network-of-edge-servers&quot;&gt;The Network of Edge Servers&lt;/h2&gt;

&lt;p&gt;So far so good, but if the distance between your browser and that IP address
is rather large, loading the image will take a lot of time. Well, hundreds
of milliseconds. Try to load this image, which is located on a server
that is hosted in Prague, Czech Republic (I&amp;#39;m using &lt;code&gt;curl&lt;/code&gt; as suggested
&lt;a href=&quot;https://josephscott.org/archives/2011/10/timing-details-with-curl/&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl -w &amp;quot;@f.txt&amp;quot; -o /dev/null -s \
  http://www.vlada.cz/images/vlada/vlada-ceske-republiky_en.gif
    time_namelookup:  0.005
       time_connect:  0.376
   time_pretransfer:  0.377
 time_starttransfer:  0.566
                    ----------
         time_total:  0.567&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I&amp;#39;m trying to do it from Palo Alto, California, which is about half a globe
away from Prague. As you can see, it takes over 500ms. That&amp;#39;s too much, especially
if a web page contains many images. Overall, page loading may take seconds,
just because the server is too far away from me. Well, it will inevitably be
too far away from some users, no matter where we host it. If we host it here
in California, it will be close enough to me and the image will be loaded
instantly (less than 50ms). But then it will be too slow for users in Prague.&lt;/p&gt;

&lt;p&gt;This problem has no solutions if the server generates images or pages
on the fly in some unique way and if we can&amp;#39;t install a number of servers
in different countries and continents. But in most cases, such as our logo example, this is not a problem.
This logo doesn&amp;#39;t need to be unique for
each user. It is a very &lt;em&gt;static&lt;/em&gt; resource, which needs to be created only once
and be delivered to everybody, without any changes.&lt;/p&gt;

&lt;p&gt;So, how about we install a server somewhere here in California and let
Californian users connect to it. When a request for &lt;code&gt;logo.gif&lt;/code&gt; comes
to one of the &lt;em&gt;edge&lt;/em&gt; servers, it will connect to the central server
in Prague and load the file. This will happen only once. After that, the
edge server will not request the file
from the central server. It will return it immediately, from its internal cache.&lt;/p&gt;

&lt;p&gt;We need to have many edge servers, preferably in all countries where
our users may be located. The first request will take longer, but all others
will be much faster because they will be served from the closest edge server.&lt;/p&gt;

&lt;p&gt;Now, the question is how the browser will know which edge server is the closest, right?
We simply trick the domain name resolution process. Depending on who is asking,
the DNS will give different answers. Let&amp;#39;s take &lt;code&gt;cf.jare.io&lt;/code&gt;, for example (it
is the name of all edge servers responsible for delivering our content
in AWS CloudFront, a CNAME for &lt;code&gt;djk1be5eatcae.cloudfront.net&lt;/code&gt;).
If I&amp;#39;m looking it up from California, I&amp;#39;m getting the following answer:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ nslookup cf.jare.io
Server:   192.168.1.1
Address:  192.168.1.1#53

Non-authoritative answer:
cf.jare.io  canonical name = djk1be5eatcae.cloudfront.net.
Name: djk1be5eatcae.cloudfront.net
Address: 54.230.141.211&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An edge server with IP address &lt;code&gt;54.230.141.211&lt;/code&gt; is located in
&lt;a href=&quot;https://db-ip.com/54.230.141.211&quot;&gt;San Francisco&lt;/a&gt;. This
is rather close to me, less than fifty miles. If I do the same operation
from a server in Virginia, I get a different response:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ nslookup cf.jare.io
Server:   172.16.0.23
Address:  172.16.0.23#53

Non-authoritative answer:
cf.jare.io  canonical name = djk1be5eatcae.cloudfront.net.
Name: djk1be5eatcae.cloudfront.net
Address: 52.85.131.217&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An edge server with IP address &lt;code&gt;52.85.131.217&lt;/code&gt; is located in
&lt;a href=&quot;https://db-ip.com/52.85.131.217&quot;&gt;Washington&lt;/a&gt;, which is far away from
me, but very close to the server I was making the lookup from.&lt;/p&gt;

&lt;p&gt;There are thousands of name servers around the world and all of them
have different information about where that edge server &lt;code&gt;cf.jare.io&lt;/code&gt;
is physically located. Depending on who is asking, the answer will be different.&lt;/p&gt;

&lt;h2 id=&quot;aws-cloudfront&quot;&gt;AWS CloudFront&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/cloudfront/&quot;&gt;CloudFront&lt;/a&gt; is one of the simplest
CDN solutions. All you have to do to start delivering your content
through their edge nodes is to create a &amp;quot;distribution&amp;quot; and configure it.
A distribution is basically a connector between content origin and
edge servers:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/uml/b5d40b6498ca48f6d2efc8671dd6d1e6.svg&#39;
        alt=&#39;PlantUML diagram&#39; class=&#39;plantuml&#39;/&gt;&lt;/p&gt;

&lt;p&gt;One of edge servers receives an HTTP request. If it already has that
&lt;code&gt;logo.svg&lt;/code&gt; in its cache, it immediately returns an HTTP response with its
content inside. If its cache is empty, the edge server makes an HTTP
request to the central server. This server knows about the &amp;quot;distribution&amp;quot;
and its configuration. It makes an HTTP connection to the origin server,
which is &lt;code&gt;www.teamed.io&lt;/code&gt; and asks it to return &lt;code&gt;logo.svg&lt;/code&gt;. When done,
the image is returned to the edge server, where it is cached.&lt;/p&gt;

&lt;p&gt;This looks rather simple, but it&amp;#39;s not free and it&amp;#39;s not that quick to configure.
You have to create an account with CloudFront, register your credit card
there, and get an approval. Then you have to create a distribution and configure it.
You should then create that CNAME in your name server. If you&amp;#39;re doing it
for a single website, it&amp;#39;s not a big deal. If you have a dozen websites,
it&amp;#39;s a time consuming operation.&lt;/p&gt;

&lt;h2 id=&quot;jare-io-a-middle-man&quot;&gt;Jare.io, a Middle Man&lt;/h2&gt;

&lt;p&gt;Jare.io is an extra component in that diagram, which makes your
life easier:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/uml/aecf8b3862f82e6d5d8d27e948d45c83.svg&#39;
        alt=&#39;PlantUML diagram&#39; class=&#39;plantuml&#39;/&gt;&lt;/p&gt;

&lt;p&gt;Jare.io has a &amp;quot;relay&amp;quot;, which acts as an origin server for CloudFront. All
requests that arrive to &lt;code&gt;cf.jare.io&lt;/code&gt; are dispatched to the relay. The relay
decides what to do with them. The decision is based on the information
from the HTTP request URI. For example, the request from the browser
has this URI path:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/?u=http://www.teamed.io/images/logo.svg&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Remember, the request is made to &lt;code&gt;cf.jare.io&lt;/code&gt;, which is the address of
the edge server. This exact URI arrives at &lt;code&gt;relay.jare.io&lt;/code&gt;. The URI contains
enough information to make a decision about which file has to be returned.
The relay makes a new HTTP request to &lt;code&gt;www.teamed.io&lt;/code&gt; and retrieves the image.&lt;/p&gt;

&lt;p&gt;The beauty of this solution is that it&amp;#39;s easy. For small websites,
it is a free and quick CDN.&lt;/p&gt;

&lt;p&gt;By the way, when we query the same image through jare.io (and CloudFront),
it comes back much faster:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl -w &amp;quot;@f.txt&amp;quot; -o /dev/null -s \
  http://cf.jare.io/?u=www.vlada.cz/images/vlada/vlada-ceske-republiky_en.gif
    time_namelookup:  0.005
       time_connect:  0.021
   time_pretransfer:  0.021
 time_starttransfer:  0.041
                    ----------
         time_total:  0.041&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Most of the work is done by AWS CloudFront, while jare.io is just a
relay that makes its configuration more convenient. Besides, it makes
it free, because jare.io is sponsored by
&lt;a href=&quot;http://www.teamed.io&quot;&gt;Teamed.io&lt;/a&gt;. In other words, my company will
pay for your usage of CloudFront. I would appreciate if you kept that in
mind and didn&amp;#39;t use jare.io for traffic-intensive resources.&lt;/p&gt;</content><category term="cdn" /><summary>CDN stands for a Content Delivery Network. Technically, it is a bunch
of servers located in different countries and continents. You give them
your logo.gif and they give you a URL, which resolves to a different
server depending on who is trying to resolve it. As a result, the
file is always close to the end-user and your website loads much faster
than without a CDN. Sounds good, but all CDN providers want money
for their service and usually a rather complex setup and registration
procedure. My pet project jare.io is a free
CDN that is simple to configure. It utilizes AWS CloudFront resources.</summary></entry><entry><title>Unspoken Secrets of an Elevator Pitch</title><link href="http://www.yegor256.com/2016/03/28/unspoken-secrets-of-elevator-pitch.html" rel="alternate" type="text/html" title="Unspoken Secrets of an Elevator Pitch" /><published>2016-03-28T00:00:00+00:00</published><updated>2016-03-28T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/03/28/unspoken-secrets-of-elevator-pitch</id><content type="html" xml:base="http://www.yegor256.com/2016/03/28/unspoken-secrets-of-elevator-pitch.html">&lt;p&gt;Your success depends on the quality of your &lt;strong&gt;elevator pitch&lt;/strong&gt;. Basically, your
success doesn&amp;#39;t depend on much of anything else. The pitch is king.
You have to impress the &lt;del&gt;catcher&lt;/del&gt; investor in just a few seconds while
the elevator is still moving (that&amp;#39;s where you are supposed to hunt for that
prey). It&amp;#39;s not rocket science; you can learn a few basic
principles and become a expert. Here they are, the principles.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Fhuevos-de-oro.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Huevos de oro (1993) by Bigas Luna&#39;/&gt;&lt;figcaption&gt;Huevos de oro (1993) by Bigas Luna&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Look&lt;/strong&gt;.
Rule number 1: You must look right, like Mark Zuckerberg &amp;mdash; the
same gray T-shirt every day with the same smile. The way you look must demonstrate
that you&amp;#39;re part of the community. You&amp;#39;re one of us!
These three things will help: a beard,
an electric skateboard, and an Apple Watch. If you&amp;#39;re a girl, replace the beard
with a yoga mat and you&amp;#39;re all set. By looking that way, you&amp;#39;re telling
investors that your chances to succeed are way higher than anyone who
doesn&amp;#39;t have an Apple Watch and is a stranger because of that.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Anyone who doesn&amp;#39;t have an Apple Watch is a stranger&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Innovate&lt;/strong&gt;.
These are the words you must include in your pitch: innovation, innovative,
innovate. It&amp;#39;s never too many. Put them (or their synonyms) everywhere;
it&amp;#39;s all for good. How about this: &amp;quot;Our innovative solution
is an environmental breakthrough&amp;quot;? Nobody knows what it means, but everybody
understands that you&amp;#39;re a big-time innovator. Even if it&amp;#39;s yet
another calorie calculator. Investors must understand that you&amp;#39;re not just
making a software product; you &lt;em&gt;innovate&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Complicate&lt;/strong&gt;.
Internet of Things in lieu of a thermometer,
augmented reality instead of goggles with a camera, and
global health rather than a database of dentists. You get the idea.
Don&amp;#39;t be specific; it&amp;#39;s dangerous. They may ask you what kind of database
it is and how it&amp;#39;s different than the other 50 databases on the market. But
if you say global health, they won&amp;#39;t have any idea what you&amp;#39;re talking
about, which is exactly what you need. Learn those words and use them whenever
possible. Here are some of my favorites for you to remember: business model canvas, viral
mechanics, growth hacking, data-driven mentality, design thinking, and
game-changing disruption.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;But be careful, don&amp;#39;t overact or you may end up in a mental hospital&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Smile&lt;/strong&gt;.
You are super excited about this fantastic opportunity! You&amp;#39;re extremely
motivated to do this project with these absolutely great people! You&amp;#39;re
passionate about the idea and fully committed to implementing it! You love the
team, the partners, the investors, and the customers &amp;mdash; they&amp;#39;re all
very nice people you&amp;#39;re happy to work with! You&amp;#39;re very enthusiastic about
everything! You love everyone! ... But be careful; don&amp;#39;t overact or you may
end up in a mental hospital.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compare&lt;/strong&gt;.
Compare yourself to Uber; you will never lose. It was Airbnb a few years
ago and Dropbox before that. Today it&amp;#39;s Uber. Start your pitch with
&amp;quot;It&amp;#39;s like Uber but ...&amp;quot; No matter what you put after that, it will work.
All investors are dreaming about getting a new Uber in their portfolio. You
should help them make this dream come true. There&amp;#39;s no need to be too complicated;
just say you&amp;#39;re &amp;quot;like Uber but ...&amp;quot; and your chances to score Round A
will jump higher.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Imitate&lt;/strong&gt;.
Elon Musk! You have to mention this guy; you absolutely must. Try this:
&amp;quot;As Elon Musk said in his book, it is very difficult to build a successful
startup&amp;quot;. You, being aware of wisdom like that, give them the impression
that you&amp;#39;re related to the Silicon Valley culture, which is what they want to feel.
Always try to show that Elon Musk is a role model for you. Having a T-shirt
featuring his face will also help.
By the way, don&amp;#39;t use Steve Jobs; it&amp;#39;s not a trend anymore.
Moreover, he is dead already. Stick to Musk.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Never compete with them or even try to argue, investors are always right&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Respect&lt;/strong&gt;.
Always remember that you and your potential investors are not equal.
They have money, experience, reputation, and a Tesla. You have nothing.
You must demonstrate that you always remember that. Always position yourself
a bit lower, play newbie, ask questions, and imitate interest in everything
they say. Never compete with them or even try to argue! They are always
right, and they are simply awesome; you&amp;#39;re just another nobody. Something
like &amp;quot;I&amp;#39;m honored to be in the same room with you&amp;quot; is a very good opener.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Co-Found&lt;/strong&gt;.
You absolutely must have a co-founder, or even a few of them. They could
be anybody. A roommate will work or just a friend of a friend who recently
quit her full-time job. It doesn&amp;#39;t matter who they are as long as you
can call them co-founders. Put their pictures and names on your website
and always say &amp;quot;we&amp;quot; instead of &amp;quot;I&amp;quot;. Investors, in general, love to have
a few phone numbers they can call when they realize their money is gone
and there is nothing left. Also, it&amp;#39;s more fun to invest into a group
of people &amp;mdash; investors look more serious in that case.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Never admit any mistakes or risks, simply ignore them, stay positive&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Radiate&lt;/strong&gt;.
Never say anything bad about anything or anyone. You literally have
to be 100% in &lt;em&gt;positive thinking&lt;/em&gt; mode. That competitor who is stealing your customers is
&amp;quot;such a nice guy&amp;quot;. That cup of coffee made of some dark powder
is &amp;quot;very delicious&amp;quot;. The programmers from Pakistan you found on
Upwork for $10 per hour are &amp;quot;absolutely awesome&amp;quot;. The marketing plan you
invented yesterday is &amp;quot;simply great&amp;quot;. Never admit any mistakes,
risks, or threats. Simply ignore them. Stay positive. Investors like that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bluff&lt;/strong&gt;.
You have to mention that the market is absolutely huge, at least a hundred
billion dollars. They won&amp;#39;t be able to check anyway. Actually, nobody
can check that, so don&amp;#39;t worry. But don&amp;#39;t give a round number; that would be a mistake! It
should sound more like $73.5 billion. That&amp;#39;s very convincing and will give
them the confidence you need &amp;mdash; the market is huge and you&amp;#39;re not
just saying it; you actually did some math. How can they not invest
in such a huge and promising market?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scream&lt;/strong&gt;.
Especially if you&amp;#39;re in a public place, you must speak as if you&amp;#39;re
a bit deaf. Be loud. That will prove that you&amp;#39;re absolutely
confident in what you&amp;#39;re saying, today and always. The investor
will be sure you are capable of attracting &lt;del&gt;mates&lt;/del&gt; customers and
other investors, if for no other reason than because you&amp;#39;re not afraid of being that ugly loud
in public. You&amp;#39;re 100% extrovert &amp;mdash; you must demonstrate it
shamelessly.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;You must be ready to shine their shoes, with a big smile on your face&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Beg&lt;/strong&gt;.
You may mistakenly think that this is a balanced transaction &amp;mdash;
they give money and you give part of your equity. You may expect that
both parties are equally interested in this. But don&amp;#39;t make that mistake.
You&amp;#39;re begging, and they are giving. Out of courtesy. That&amp;#39;s a win position
for you. By having money, they expect to be on top of others. This is
what capitalism is about, right? Don&amp;#39;t take this away from them. You
must be ready to shine their shoes. With a big smile on your face.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Love&lt;/strong&gt;.
The truth is that investors don&amp;#39;t want to make money. They want to
make love. You&amp;#39;re a perfect candidate. They are mostly old, rich,
lonely, and miserable. Their success stories are behind them. All they
have is money, which they are afraid to spend because they understand
that they won&amp;#39;t make it again. They are used-to-be successful
gamblers, but not anymore. Give them what they want: love. Money
is not so important, so long as you love each other. Remember, first
they must fall in love with you, then they will send the terms sheet.&lt;/p&gt;

&lt;p&gt;Did I miss anything?&lt;/p&gt;

&lt;p&gt;Rehearse your pitch in front of the mirror in the bathroom three times
every morning. I guarantee that in fewer than two weeks, you will sound
like a proper SV startup founder. Well, a co-founder &amp;mdash;
don&amp;#39;t forget that. Good luck; you will need a lot of it!&lt;/p&gt;</content><category term="startup" /><summary>Your success depends on the quality of your elevator pitch. Basically, your
success doesn&amp;#39;t depend on much of anything else. The pitch is king.
You have to impress the catcher investor in just a few seconds while
the elevator is still moving (that&amp;#39;s where you are supposed to hunt for that
prey). It&amp;#39;s not rocket science; you can learn a few basic
principles and become a expert. Here they are, the principles.</summary></entry><entry><title>Try. Finally. If. Not. Null.</title><link href="http://www.yegor256.com/2016/03/22/try-finally-if-not-null.html" rel="alternate" type="text/html" title="Try. Finally. If. Not. Null." /><published>2016-03-22T00:00:00+00:00</published><updated>2016-03-22T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/03/22/try-finally-if-not-null</id><content type="html" xml:base="http://www.yegor256.com/2016/03/22/try-finally-if-not-null.html">&lt;p&gt;There is a very typical mistake in pre-Java7 &amp;quot;try/finally&amp;quot; scenario,
which I keep seeing in so many code reviews. I just have to write about it.
Java7 introduced a solution, but it doesn&amp;#39;t cover all situations.
Sometimes we need to deal with non-&lt;code&gt;AutoCloseable&lt;/code&gt; resources. Let&amp;#39;s
open and close them correctly, please.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Flock-stock-two-smoking-barrels.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Lock, Stock and Two Smoking Barrels (1998) by Guy Ritchie&#39;/&gt;&lt;figcaption&gt;Lock, Stock and Two Smoking Barrels (1998) by Guy Ritchie&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This is how it looks (assuming we are in Java 6):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// reads the stream, throws IOException&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I already wrote about &lt;a href=&quot;/2014/05/13/why-null-is-bad.html&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;
and its evil nature. Here it comes again. If you just follow the rule
of &amp;quot;not using NULL anywhere ever,&amp;quot; this code would need an immediate
refactoring. Its correct version will look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// reads the stream, throws IOException&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There is no &lt;code&gt;null&lt;/code&gt; anymore and it&amp;#39;s very clean. Isn&amp;#39;t it?&lt;/p&gt;

&lt;p&gt;There are situations when opening the resource itself throws &lt;code&gt;IOException&lt;/code&gt;
and we can&amp;#39;t put it outside of &lt;code&gt;try/catch&lt;/code&gt;. In that case, we have to have
&lt;strong&gt;two&lt;/strong&gt; &lt;code&gt;try/catch&lt;/code&gt; blocks:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// reads the stream, throws IOException&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But there should be no &lt;code&gt;null&lt;/code&gt;, never!&lt;/p&gt;

&lt;p&gt;The presence of &lt;code&gt;null&lt;/code&gt; in Java code is a clear indicator of code smell. Something
is not right if you have to use &lt;code&gt;null&lt;/code&gt;. The only place where the presence of &lt;code&gt;null&lt;/code&gt;
is justified is where we&amp;#39;re using third-party APIs or JDK. They may return
&lt;code&gt;null&lt;/code&gt; sometimes because... well, their design is bad. We have
no other option but to do &lt;code&gt;if(x==null)&lt;/code&gt;. But that&amp;#39;s it. No other places
are good for &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>There is a very typical mistake in pre-Java7 &amp;quot;try/finally&amp;quot; scenario,
which I keep seeing in so many code reviews. I just have to write about it.
Java7 introduced a solution, but it doesn&amp;#39;t cover all situations.
Sometimes we need to deal with non-AutoCloseable resources. Let&amp;#39;s
open and close them correctly, please.</summary></entry><entry><title>Wring.io, a Dispatcher of GitHub Notifications</title><link href="http://www.yegor256.com/2016/03/15/wring-dispatcher-github-notifications.html" rel="alternate" type="text/html" title="Wring.io, a Dispatcher of GitHub Notifications" /><published>2016-03-15T00:00:00+00:00</published><updated>2016-03-15T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/03/15/wring-dispatcher-github-notifications</id><content type="html" xml:base="http://www.yegor256.com/2016/03/15/wring-dispatcher-github-notifications.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.wring.io&#39;&gt;&lt;img src=&#39;http://www.wring.io/images/logo.svg&#39; style=&#39;width:92px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;I&amp;#39;m taking participation in over 50 repositories in GitHub. &lt;a href=&quot;http://www.teamed.io&quot;&gt;We&lt;/a&gt;
manage all of our projects there. GitHub is sending me hundreds of emails
every day. I&amp;#39;m serious. Hundreds! I tried to filter them somehow in Gmail,
but it&amp;#39;s not really possible. Gmail filters are not powerful enough to
understand the difference between different types of notifications, and there
are many other problems.
I decided to create my own simple filtering machine. It&amp;#39;s called
&lt;a href=&quot;http://www.wring.io&quot;&gt;wring.io&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The idea of wring.io is simple. First, I&amp;#39;m registering my sources
of notifications (called &amp;quot;pipes&amp;quot;), such as GitHub. Then I&amp;#39;m giving
&lt;a href=&quot;http://www.wring.io&quot;&gt;wring.io&lt;/a&gt; permission
to connect to GitHub on my behalf and fetch whatever is new there.&lt;/p&gt;

&lt;p&gt;Then I&amp;#39;m configuring what should be filtered out, using text matching and/or
regular expressions. Right after a new pipe is created,
&lt;a href=&quot;http://www.wring.io&quot;&gt;wring.io&lt;/a&gt; starts pulling all my sources and updating my inbox.
All I need to do is delete new messages from my inbox when I&amp;#39;m done with them.
That&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s see an example. First I&amp;#39;m creating a new pipe:&lt;/p&gt;

&lt;figure class=&#39;unprintable&#39;&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Fwring-1.png&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;figure&#39;/&gt;&lt;/figure&gt;

&lt;p&gt;It&amp;#39;s a JSON object. Property &lt;code&gt;class&lt;/code&gt; must be set to
&lt;code&gt;io.wring.agents.github.AgGithub&lt;/code&gt;. This is the name of the Java
class that will be pulling my notifications from GitHub. The project is
open source, so you can see how the class actually works:
&lt;a href=&quot;https://github.com/yegor256/wring/blob/0.8.5/src/main/java/io/wring/agents/github/AgGithub.java&quot;&gt;&lt;code&gt;AgGithub&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Property &lt;code&gt;token&lt;/code&gt; must be set to the &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;personal access token&lt;/a&gt;
that I should create first in GitHub. The server will connect to GitHub
on my behalf and under my credentials:&lt;/p&gt;

&lt;figure class=&#39;unprintable&#39;&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Fwring-2.png&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;figure&#39;/&gt;&lt;/figure&gt;

&lt;p&gt;Property &lt;code&gt;ignore&lt;/code&gt; must have an array of strings. Each item is a matching
pattern. I can use a text or a regular expression. By default, it&amp;#39;s
a text. If exactly the same text is found in a notification, it
will be ignored. To use a regular expression, I need to wrap it in slashes (for example &lt;code&gt;/[a-z]+/&lt;/code&gt;).
You may skip that property and just specify this JSON:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;io.wring.agents.github.AgGithub&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;token&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;your-personal-access-token&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then I go to my inbox and read what&amp;#39;s there.&lt;/p&gt;

&lt;p&gt;This solution literally saves me hours of time now. Feel free to use
it, it&amp;#39;s absolutely free. Moreover, it&amp;#39;s open source, so feel free to
contribute.&lt;/p&gt;</content><category term="github" /><summary>I&amp;#39;m taking participation in over 50 repositories in GitHub. We
manage all of our projects there. GitHub is sending me hundreds of emails
every day. I&amp;#39;m serious. Hundreds! I tried to filter them somehow in Gmail,
but it&amp;#39;s not really possible. Gmail filters are not powerful enough to
understand the difference between different types of notifications, and there
are many other problems.
I decided to create my own simple filtering machine. It&amp;#39;s called
wring.io.</summary></entry><entry><title>Pimp Up Your Resume</title><link href="http://www.yegor256.com/2016/03/08/pimp-up-your-resume.html" rel="alternate" type="text/html" title="Pimp Up Your Resume" /><published>2016-03-08T00:00:00+00:00</published><updated>2016-03-08T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/03/08/pimp-up-your-resume</id><content type="html" xml:base="http://www.yegor256.com/2016/03/08/pimp-up-your-resume.html">&lt;p&gt;There are tons of articles about resume writing. Literally,
&lt;a href=&quot;https://www.google.com/search?q=how+to+write+resume&quot;&gt;tons of them&lt;/a&gt;.
And here&amp;#39;s yet another one? Well, maybe ... but I don&amp;#39;t think so. I&amp;#39;ll try to
give you a few &lt;strong&gt;practical&lt;/strong&gt; hints for how to make your resume look
&amp;quot;sexier&amp;quot;, and how to position yourself beyond the &amp;quot;good programmer&amp;quot; category and into
the superstar zone. It may take a few years to truly pimp up your CV, but
when it&amp;#39;s done, you will charge $100-plus per hour and face no hesitation
from your clients in paying.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Fdelicatessen.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Delicatessen (1991) by Jean-Pierre Jeunet&#39;/&gt;&lt;figcaption&gt;Delicatessen (1991) by Jean-Pierre Jeunet&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;one-page-no-exceptions&quot;&gt;One Page, No Exceptions&lt;/h2&gt;

&lt;p&gt;I think it&amp;#39;s obvious, but only one out of 10 resumes I&amp;#39;ve been getting
each day fits onto one page. All the others take three or more pages, and this looks
very &lt;strong&gt;unprofessional&lt;/strong&gt;. If you can&amp;#39;t explain yourself in one page, there will be doubts
about your skills in scope management, which are very important for a software engineer.
It shows you simply can&amp;#39;t filter out what&amp;#39;s non-important and focus
on what really matters. Besides, it&amp;#39;s just boring to read three pages.&lt;/p&gt;

&lt;p&gt;Thus, strictly limit yourself to one page, &lt;strong&gt;no exceptions&lt;/strong&gt;. Your resume is an &amp;quot;executive summary&amp;quot;
of the product you&amp;#39;re trying to sell. It&amp;#39;s a marketing brochure. A sales
flyer. A sticker on my refrigerator, if you wish. It has to be short
and straightforward. Employers will either buy it or throw it away. They don&amp;#39;t want to read it;
they want to buy you. Or throw your brochure away.
Four-page brochures have far fewer chances than one-pagers.&lt;/p&gt;

&lt;h2 id=&quot;don-39-t-lie&quot;&gt;Don&amp;#39;t Lie&lt;/h2&gt;

&lt;p&gt;No matter what you do with your resume, never lie about a single word. You
can tell half of the truth, you can hide some information, and you can rephrase
the truth, but never lie. You don&amp;#39;t know who is reading your CV and which
desk it will end up on. Be ready to answer for every word you have on it.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re saying that you&amp;#39;re an &amp;quot;expert in JavaScript&amp;quot;,
be ready to explain what the key new features of
ECMAScript version 6 are. If you can&amp;#39;t, don&amp;#39;t use the word &amp;quot;expert&amp;quot;. The point
is that you have to be ready to prove every word.&lt;/p&gt;

&lt;h2 id=&quot;sexy-photo-on-the-top&quot;&gt;Sexy Photo on the Top&lt;/h2&gt;

&lt;p&gt;You want them to work with you, right? They want to see you. So a photo is a mandatory
component of a CV. And try to make it look artistic. Ask your
graphic designer friend to style it. Maybe even pay for this work.
Just pay attention to the photo; it&amp;#39;s very important.&lt;/p&gt;

&lt;p&gt;Do I have to say that you must smile on that photo? Well, yes, you must.
And make it casual, with a T-shirt and funny background. You must look
relaxed and successful. You don&amp;#39;t want to get hired; they want to hire you &amp;mdash;
this is the message your photo should send, just like in online &lt;strong&gt;dating&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;skip-quot-objective-quot-and-quot-title-quot&quot;&gt;Skip &amp;quot;Objective&amp;quot; and &amp;quot;Title&amp;quot;&lt;/h2&gt;

&lt;p&gt;&amp;quot;Senior Software Developer&amp;quot;, &amp;quot;Seasoned Java Programmer&amp;quot;,
&amp;quot;Talented IT Professional&amp;quot;, etc. It&amp;#39;s boring and doesn&amp;#39;t sell you at all.
They know what you are, because they are reading your resume.&lt;/p&gt;

&lt;p&gt;Besides that, you&amp;#39;re limiting yourself with that title. Maybe they are looking
for a VP of engineering while your resume says &amp;quot;Software Architect&amp;quot;. That&amp;#39;s
immediately a mismatch for them. It&amp;#39;s a strike against you. Your &lt;strong&gt;name&lt;/strong&gt; is the title
of your resume. That&amp;#39;s it.&lt;/p&gt;

&lt;h2 id=&quot;a-dozen-skills&quot;&gt;A Dozen Skills&lt;/h2&gt;

&lt;p&gt;This section of your resume actually tells them about your &amp;quot;tech focus&amp;quot;.
It must have a very short list of skills, definitely &lt;strong&gt;under 12&lt;/strong&gt;. You simply
can&amp;#39;t be an expert in MySQL, PostgreSQL, Oracle, and MS SQL at the same time.
If there are too many skills, it&amp;#39;s a sign of a &amp;quot;jack of all trades&amp;quot; who is
almost always a &amp;quot;master of none&amp;quot;. Don&amp;#39;t do that.&lt;/p&gt;

&lt;p&gt;Find the most important skills in your profile and put them there.
Just a few. And make sure the skills are all on the same level of abstraction.
Java and AngularJS must not be present together. Java is a few levels higher
than AngularJS. Thus, it&amp;#39;s either &amp;quot;Java, SQL, and HTTP&amp;quot; or &amp;quot;AngularJS, Spring Framework,
and Web Sockets&amp;quot;. I would recommend you stay at the lowest level you can until
you become a serious market figure. For example, &amp;quot;Java&amp;quot; as a skill would look good
in &lt;a href=&quot;http://stackoverflow.com/users/22656/jon-skeet&quot;&gt;Jon Skeet&lt;/a&gt;&amp;#39;s resume,
because he definitely knows the entire Java world, and the
market has recognized that. But if you&amp;#39;re a programmer with just three years of experience,
how can you &amp;quot;know Java&amp;quot;? You barely know a few hundred classes from it.
That&amp;#39;s why it&amp;#39;s better to state specifically which parts of Java you definitely know.
Like I said, be as low-level and specific in your skills as possible.&lt;/p&gt;

&lt;h2 id=&quot;stackoverflow-profile&quot;&gt;StackOverflow Profile&lt;/h2&gt;

&lt;p&gt;No matter what anyone &lt;a href=&quot;/2014/10/29/how-much-do-you-cost.html&quot;&gt;says&lt;/a&gt;,
&lt;a href=&quot;http://www.stackoverflow.com&quot;&gt;StackOverflow&lt;/a&gt;
is the de-facto standard platform for asking and answering technical questions.
Your presence there and your high rating send a clear message to your
potential employer that you&amp;#39;re a superstar (or a rising one). No so many
people have 100K or more reputation points there. You must be one of them.&lt;/p&gt;

&lt;p&gt;So even if you don&amp;#39;t have a StackOverflow profile now, create one.
Spend one hour on it every day for a few months, answering
&lt;a href=&quot;http://stackoverflow.com/?tab=interesting&quot;&gt;new questions&lt;/a&gt;.
You will earn 1,000 or more reputation points. Well, provided you have something to say.
That&amp;#39;s enough for a start. Post a link to your profile right in your resume.&lt;/p&gt;

&lt;p&gt;Even if you don&amp;#39;t have much to say, be there. Read answers made by others,
comment on them, try to help them, and correct them. Become an active
part of the community.&lt;/p&gt;

&lt;h2 id=&quot;github-profile&quot;&gt;GitHub Profile&lt;/h2&gt;

&lt;p&gt;GitHub is the de-facto standard platform for open-source code. There are others
like BitBucket, but &amp;mdash; I hope &amp;mdash; they will die sooner or later. As a modern
software developer, you must be on GitHub. You
&lt;a href=&quot;/2015/12/22/why-dont-you-contribute-to-open-source.html&quot;&gt;have to contribute&lt;/a&gt;
to some open source. You have to be visible in the open-source world if you
want to sell yourself high.&lt;/p&gt;

&lt;p&gt;Your potential employer wants to see what the &lt;strong&gt;market&lt;/strong&gt; is thinking about
your code and about you. They are afraid of making a mistake by hiring you.
Your presence in the open-source world is a &lt;strong&gt;guarantee&lt;/strong&gt; for them. Someone has already
seen your code, and someone has already given some kudos to your projects. Someone virtually
vouches for you. As a result, they will feel more comfortable in hiring you.&lt;/p&gt;

&lt;p&gt;To be in the &amp;quot;elite&amp;quot;, you don&amp;#39;t have to spend all your time on open-source
projects. Just contribute to the ones you&amp;#39;re using already. You&amp;#39;re using
Sinatra at work? Check its source code. You will find a lot of places that
need improvement. Offer them your help and simply submit small pull requests
here and there. Besides that, create your own products and market them. You will
be surprised by how many users and followers you will attract in just a few years
of such activity.&lt;/p&gt;

&lt;h2 id=&quot;certificates&quot;&gt;Certificates&lt;/h2&gt;

&lt;p&gt;Some may say they are not important. Maybe so. But your resume must have
them. Some of them are not so difficult to get. With just a few weeks of study
and a few hundred dollars, you are not just a Java programmer but
a &lt;a href=&quot;https://en.wikipedia.org/wiki/Oracle_Certification_Program&quot;&gt;certified&lt;/a&gt; one.
And there are not so many of those out there. There are millions of Java coders
in the world, but only a few percent of them are certified. Regardless of whether
you think it&amp;#39;s important or not, get those certifications.&lt;/p&gt;

&lt;p&gt;As many as you like. But stay away from
&lt;a href=&quot;https://www.brainbench.com/&quot;&gt;BrainBench&lt;/a&gt; and similar sites. Well,
you can get certified there, but don&amp;#39;t put them into your resume. That will
only demonstrate that you are proud of a very questionable achievement. It&amp;#39;s not
a good sign.&lt;/p&gt;

&lt;h2 id=&quot;sound-names-and-numbers&quot;&gt;Sound Names and Numbers&lt;/h2&gt;

&lt;p&gt;It&amp;#39;s a dangerous trick, so be careful. Here is how it works. You have to go through
your entire professional history and find well-known names or big numbers.
For example, 10 years ago I was helping a startup create software that
had IBM as a subscriber. They managed to get some tracking, and in
two months, IBM decided not to use them anymore. It&amp;#39;s a true (and sad) story, but I can
put something like this into my resume: &amp;quot;wrote software for IBM&amp;quot;. Am I lying? Not really.
If they ask me what exactly I did for IBM, I will explain. In most cases, they
won&amp;#39;t ask. They will just buy this big name and put my resume on top of
others.&lt;/p&gt;

&lt;p&gt;You can do the same with numbers. Here is another true story. A few years ago,
I was helping a company configure a continuous integration pipeline. It was not a big
deal, but the company was serving more than 5 million hits per day on its website.
That&amp;#39;s a big number. I had nothing to do with this substantial web traffic, but I was
in that company for a few months. So I may say in my resume:
&amp;quot;configured the delivery pipeline for a 5M-hits-per-day web store&amp;quot;. If they
ask me for details, I will be able to give them. I&amp;#39;m not lying.&lt;/p&gt;

&lt;p&gt;Use this technique carefully, and never lie. But do it. Don&amp;#39;t be scared.
Your resume needs big names and numbers.&lt;/p&gt;

&lt;h2 id=&quot;blog&quot;&gt;Blog&lt;/h2&gt;

&lt;p&gt;Create your own blog. Start writing. About what? About your everyday
achievements. About the code you write and read.
About what you observe in the office. About your thoughts
and your plans. About the books you read. You absolutely need to have
a blog if you want to position yourself as an expensive software engineer.&lt;/p&gt;

&lt;p&gt;It doesn&amp;#39;t need to be a very popular blog; don&amp;#39;t focus on numbers. But
it has to be properly created, designed, and hosted. Don&amp;#39;t use
&lt;a href=&quot;http://www.wordpress.com&quot;&gt;WordPress&lt;/a&gt;, &lt;a href=&quot;http://www.blogger.com&quot;&gt;Blogger&lt;/a&gt;,
or &lt;a href=&quot;http://www.tumblr.com&quot;&gt;Tumblr&lt;/a&gt;. Instead,
I would recommend you think about static site generators like
&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and host
it all on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;. That&amp;#39;s what I&amp;#39;m doing.&lt;/p&gt;

&lt;p&gt;Besides being a valuable addition to your resume,
systematic and regular writing will help you structure
your thoughts, plans, and decisions. Well, that&amp;#39;s what I&amp;#39;m getting
from my blog.&lt;/p&gt;

&lt;h2 id=&quot;education&quot;&gt;Education&lt;/h2&gt;

&lt;p&gt;I would limit yourself to a few letters in this area. Just &amp;quot;MSc&amp;quot; or &amp;quot;BSc&amp;quot; is
enough. There&amp;#39;s no need to say when you graduated and from which school. You can
give those details later. Well, there are just two exceptions to this rule.&lt;/p&gt;

&lt;p&gt;First, if you&amp;#39;re a PhD, put that on top of your CV. It&amp;#39;s important, and
it&amp;#39;s valuable, simply because there are not so many of them among programmers.
Second is if your school is Stanford, MIT, or something similar. If that&amp;#39;s the case,
also put it on top of your CV.&lt;/p&gt;

&lt;p&gt;In all other situations, just write &amp;quot;BSc&amp;quot; and that&amp;#39;s it.&lt;/p&gt;

&lt;h2 id=&quot;conferences&quot;&gt;Conferences&lt;/h2&gt;

&lt;p&gt;Every year, you must give a few presentations at &lt;a href=&quot;https://www.oracle.com/javaone/index.html&quot;&gt;JavaOne&lt;/a&gt;.
I&amp;#39;m kidding.
About the JavaOne part, anyway. But the &amp;quot;every year&amp;quot; part is very true. You must
regularly make some speeches somewhere, preferably at JavaOne. But until
you get there, speak where you can. Well, where they accept you. Create
a profile at &lt;a href=&quot;http://www.lanyrd.com&quot;&gt;lanyrd&lt;/a&gt; (or something similar) and
regularly check which conferences are looking for speakers. Submit there
and you will be surprised to see that a few of them will actually accept
some of your ideas.&lt;/p&gt;

&lt;p&gt;The easiest subjects to start with are stories about your practical
experience with some modern technologies and tools, something like
&amp;quot;How Docker Helps Us Optimize Delivery&amp;quot; or
&amp;quot;Five Apache Spark Installation Issues&amp;quot;. Just describe what you&amp;#39;ve done
on a recent project. It doesn&amp;#39;t really matter what you talk about.
What matters is that you&amp;#39;re visible. If the market accepts you,
the employer will trust you more. That&amp;#39;s exactly what you need in order
to request a higher rate.&lt;/p&gt;

&lt;h2 id=&quot;career-history&quot;&gt;Career History&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ll be speaking for myself here. As an employer, I don&amp;#39;t really care
about your history at all. Moreover, if you have never worked anywhere
full-time, I would probably be more interested in working with you. But that&amp;#39;s just
me, because I truly believe that modern offices and full-time jobs
turn programmers into
&lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;slaves&lt;/a&gt; (and not only programmers).&lt;/p&gt;

&lt;p&gt;Other employers may think differently. Well, they most likely think differently.
That&amp;#39;s why you have to demonstrate with which offices you&amp;#39;ve spent 10 recent
years of your life. I would recommend you keep this list short. Even if you&amp;#39;ve
changed eight companies over the last two years, don&amp;#39;t say that. Just three
places is enough. That will show them you&amp;#39;re a good slave &amp;mdash;
very loyal to previous masters. That&amp;#39;s what they want to see, because they
are planning to buy you and become your next master. Right? Sounds harsh?
Isn&amp;#39;t &lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;it true&lt;/a&gt;?&lt;/p&gt;

&lt;h2 id=&quot;acm-ieee-jug-and-other-memberships&quot;&gt;ACM, IEEE, JUG, and Other Memberships&lt;/h2&gt;

&lt;p&gt;These memberships mean literally nothing but will demonstrate that you are
part of those communities. Just like with most other things mentioned above,
employers will trust you more if the market already trusts you. These
memberships don&amp;#39;t really mean that anyone has recognized you, since you get them
just by paying annual fees. But still, you&amp;#39;re paying those fees, and most
other applicants aren&amp;#39;t. You&amp;#39;re definitely more reliable than many others.&lt;/p&gt;

&lt;h2 id=&quot;mention-hobbies&quot;&gt;Mention Hobbies&lt;/h2&gt;

&lt;p&gt;I think information about hobbies is important. Some say it&amp;#39;s not, but I believe
that a personal &amp;quot;click&amp;quot; between you and your potential employer plays
an important role. There is a human on that side. He or she is reading
your CV, and he or she wants to like you &amp;mdash; mostly in order to be comfortable
making a hiring decision. Help him or her like you faster. Mention that
you enjoy skiing, monkey-feeding in the zoo, and Jimmy Kimmel. Be creative,
not boring. Just like you do in online dating.&lt;/p&gt;

&lt;h2 id=&quot;layout-graphics&quot;&gt;Layout/Graphics&lt;/h2&gt;

&lt;p&gt;How should your one page look? Stand out! It must express your personality.
Don&amp;#39;t use the &amp;quot;resume templates&amp;quot; downloadable for free. Create your own
layout and design. If you&amp;#39;re not a designer, ask your Photoshop friend
to do it for you. Actually, there is not much to do; just select the right font
and add a few colors here and there.&lt;/p&gt;

&lt;p&gt;This CV is your product. You made it. It&amp;#39;s your baby. If it&amp;#39;s just a Word
document in a standard template, they will feel you didn&amp;#39;t pay
attention to it. You didn&amp;#39;t even care to create that small but very
important product nicely. How will you create their software? With the
same attitude. Don&amp;#39;t ruin the whole show with a careless design. That&amp;#39;s the
key word here &amp;mdash; &amp;quot;careless&amp;quot;. It doesn&amp;#39;t need to be complex. It may be
very simple. But it must be &lt;strong&gt;yours&lt;/strong&gt;, made with care and love.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;Want free advice on your resume? Send it to
&lt;a href=&quot;mailto:cv@yegor256.com&quot;&gt;cv@yegor256.com&lt;/a&gt;, and I&amp;#39;ll let you know
what I think. I will reply to all emails, but be ready to hear
mostly what&amp;#39;s wrong. What&amp;#39;s right you will know without me, when
they pay you $200 per hour.&lt;/p&gt;</content><category term="career" /><summary>There are tons of articles about resume writing. Literally,
tons of them.
And here&amp;#39;s yet another one? Well, maybe ... but I don&amp;#39;t think so. I&amp;#39;ll try to
give you a few practical hints for how to make your resume look
&amp;quot;sexier&amp;quot;, and how to position yourself beyond the &amp;quot;good programmer&amp;quot; category and into
the superstar zone. It may take a few years to truly pimp up your CV, but
when it&amp;#39;s done, you will charge $100-plus per hour and face no hesitation
from your clients in paying.</summary></entry><entry><title>How We Interview Programmers</title><link href="http://www.yegor256.com/2016/03/01/how-we-interview-programmers.html" rel="alternate" type="text/html" title="How We Interview Programmers" /><published>2016-03-01T00:00:00+00:00</published><updated>2016-03-01T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/03/01/how-we-interview-programmers</id><content type="html" xml:base="http://www.yegor256.com/2016/03/01/how-we-interview-programmers.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.teamed.io&#39;&gt;&lt;img src=&#39;http://img.teamed.io/logo.svg&#39; style=&#39;width:120px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;At &lt;a href=&quot;http://www.teamed.io&quot;&gt;Teamed.io&lt;/a&gt;, we&amp;#39;ve been getting
about 10 &lt;a href=&quot;/2016/03/08/pimp-up-your-resume.html&quot;&gt;resumes&lt;/a&gt; every day from programmers who want to work
with us. We don&amp;#39;t do video or online coding interviews. We don&amp;#39;t
ask you to solve any puzzles or demonstrate your
algorithm-writing abilities. Moreover, when we decide not to
hire you, we honestly and openly explain why. And we almost
never offend anyone. So how exactly does it work?
There are a few basic principles I would like to share.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Fwall-street.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Wall Street (1987) by Oliver Stone&#39;/&gt;&lt;figcaption&gt;Wall Street (1987) by Oliver Stone&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;the-market-interviews-you-not-us&quot;&gt;The Market Interviews You, Not Us&lt;/h2&gt;

&lt;p&gt;We believe that the market is a much better interviewer than
any one of us. &amp;quot;&lt;em&gt;Instead of demonstrating to us how great your
code is, show it to the market and see what it says&lt;/em&gt;&amp;quot; &amp;mdash; that&amp;#39;s what
we&amp;#39;re saying to you, our candidate.&lt;/p&gt;

&lt;p&gt;How does the market validate that code?
&lt;a href=&quot;/2015/12/22/why-dont-you-contribute-to-open-source.html&quot;&gt;Open source&lt;/a&gt; &amp;mdash;
that&amp;#39;s what is the most convincing to us.
We ask you to show us which open-source products you have and how
popular they are.&lt;/p&gt;

&lt;p&gt;Then show us your blog, your conference talks, your hackathon
gold medals, your certifications, and any other awards the market
has given you. Don&amp;#39;t convince us that you&amp;#39;re cool; convince them. If they
will be convinced, we will be glad to hire you. Isn&amp;#39;t that objective?
I believe it is.&lt;/p&gt;

&lt;h2 id=&quot;quiz&quot;&gt;Quiz&lt;/h2&gt;

&lt;p&gt;The way we understand quality of code is
&lt;a href=&quot;/2014/08/13/strict-code-quality-control.html&quot;&gt;very different&lt;/a&gt;
than what you might
expect. Simply put, our quality bar is much higher. Besides that, the
way we understand object-oriented programming is also
&lt;a href=&quot;/2016/02/03/design-patterns-and-anti-patterns.html&quot;&gt;very different&lt;/a&gt;.
So occasionally we&amp;#39;ll find that we simply don&amp;#39;t trust the market as our only
source of information, especially when the market has almost nothing to say about you.
Some programmers come to us with zero
&lt;a href=&quot;/2015/12/22/why-dont-you-contribute-to-open-source.html&quot;&gt;open-source&lt;/a&gt; experience, no certificates,
and no public work. Still, they claim they are
&lt;a href=&quot;/2014/10/29/how-much-do-you-cost.html&quot;&gt;the best&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To put them to the test, we provide a piece of code and ask them to refactor it &amp;mdash; just make
it better. I think this approach perfectly demonstrates who is in front of me:
&lt;a href=&quot;/2014/10/26/hacker-vs-programmer-mentality.html&quot;&gt;a hacker or a designer&lt;/a&gt;.
In this way, we filter out a lot of people who pay attention to
minor implementation tricks but miss the bigger design issues.&lt;/p&gt;

&lt;p&gt;The quiz is &lt;a href=&quot;https://github.com/teamed/quiz&quot;&gt;here&lt;/a&gt;.
You can see how many pull requests there are already &amp;mdash;
all of them are from our candidates.&lt;/p&gt;

&lt;h2 id=&quot;no-phone-or-video-calls&quot;&gt;No Phone or Video Calls&lt;/h2&gt;

&lt;p&gt;Most companies talk a lot about diversity and equality, yet most of them
will also require a Skype video call or at least a phone call before
getting you on board. How does this really jive with the equality emphasis? A face-to-face
interview is a very stressful process even for experienced and extroverted
people. We can imagine how difficult it is for some programmers who are
anti-social introverts just like me.&lt;/p&gt;

&lt;p&gt;Video interviewing is a terrible practice unless you&amp;#39;re hiring a
stand-up comedian or a flight attendant. Programmers are not supposed
to achieve their goals by interacting with people face to face. Well, at
least not in our &lt;a href=&quot;/2014/10/07/stop-chatting-start-coding.html&quot;&gt;remote work&lt;/a&gt;
mode. We expect you to write code
and communicate via GitHub. Why on earth would we need to call you? We
just don&amp;#39;t do it, and I think that&amp;#39;s how everybody else should operate. That&amp;#39;s
what true equality and diversity is &amp;mdash; no phone or video calls.&lt;/p&gt;

&lt;h2 id=&quot;we-explain-when-we-reject&quot;&gt;We Explain When We Reject&lt;/h2&gt;

&lt;p&gt;You apply to us and spend time presenting yourself, talking to us,
and demonstrating to us your skills and profile. We feel that we have
to give something back, especially if we don&amp;#39;t hire you. That&amp;#39;s why
we always explain what&amp;#39;s wrong with your application. We are not
hiding anything, and sometimes our responses may sound rather
disturbing. You may hear something like this:
&amp;quot;Your quiz solution is not what I would expect from an experienced developer&amp;quot;
(I&amp;#39;m quoting one of our interviewers).&lt;/p&gt;

&lt;p&gt;Unlike many other companies, we will never say something like,
&amp;quot;Thanks for applying, but we decided not to proceed further. Wish you
luck!&amp;quot; That&amp;#39;s shallow and ignorant. But that&amp;#39;s what most big companies
do, including Google, Facebook, and other
&lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_be_evil&quot;&gt;&amp;quot;no evils&amp;quot;&lt;/a&gt;. Try to
apply there, and you will see for yourself.&lt;/p&gt;

&lt;p&gt;Instead, we believe that an honest and straightforward negative answer is exactly what
our candidates are looking for in the case of a rejection. We understand
that it&amp;#39;s not the end of the world for you &amp;mdash; you&amp;#39;re going to continue
learning and improving. Our feedback will help you. So why should we
hide it behind that polite &amp;quot;good luck&amp;quot; answer? We won&amp;#39;t. You will
know exactly why you are not good enough for us.&lt;/p&gt;

&lt;p&gt;Moreover, we are always trying to suggest a direction for improvement. We will
recommend what to learn, what to do, and how to grow before coming back to us.
I haven&amp;#39;t seen a single company do that in my personal job searches from the
past.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;Try to apply; the form is &lt;a href=&quot;http://at.teamed.io/join.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="management" /><summary>At Teamed.io, we&amp;#39;ve been getting
about 10 resumes every day from programmers who want to work
with us. We don&amp;#39;t do video or online coding interviews. We don&amp;#39;t
ask you to solve any puzzles or demonstrate your
algorithm-writing abilities. Moreover, when we decide not to
hire you, we honestly and openly explain why. And we almost
never offend anyone. So how exactly does it work?
There are a few basic principles I would like to share.</summary></entry><entry><title>Holacracy or Autocracy? Both!</title><link href="http://www.yegor256.com/2016/02/18/holacracy-autocracy.html" rel="alternate" type="text/html" title="Holacracy or Autocracy? Both!" /><published>2016-02-18T00:00:00+00:00</published><updated>2016-02-18T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/02/18/holacracy-autocracy</id><content type="html" xml:base="http://www.yegor256.com/2016/02/18/holacracy-autocracy.html">&lt;p&gt;I strongly believe that while it is very effective to structure
an organization in a democratic and sociocratic way, a project
should be managed completely different.
A project should resemble a dictatorship, authoritarian or military hierarchy
with a single strong, result-oriented leader who gives explicit orders
that are never doubted by subordinates and an explicitly defined hierarchy.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F02%2Fapocalypse-now.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Apocalypse Now (1979) by Francis Ford Coppola&#39;/&gt;&lt;figcaption&gt;Apocalypse Now (1979) by Francis Ford Coppola&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;According to Wikipedia at the time of writing, a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Holacracy&quot;&gt;&lt;strong&gt;holacracy&lt;/strong&gt;&lt;/a&gt; exists when
&amp;quot;authority and decision-making are distributed&amp;quot; while,
on the other hand,
&lt;a href=&quot;https://en.wikipedia.org/wiki/Autocracy&quot;&gt;&lt;strong&gt;autocracy&lt;/strong&gt;&lt;/a&gt; exists when
&amp;quot;supreme power is concentrated in the hands of one person&amp;quot;.&lt;/p&gt;

&lt;p&gt;When I say organization, I mean a team, a startup, a company, that
sort of thing. It&amp;#39;s something with a brand, an office, a business entity
and a bank account. The role of an organization is very similar
to the role of a country or a government: to provide security
in exchange for freedom. Democracy in a country, as well as in a team,
guarantees &lt;strong&gt;equality&lt;/strong&gt; to its members,
which is the most important component of security.&lt;/p&gt;

&lt;p&gt;A holacracy, also known as a &amp;quot;flat organization&amp;quot;, technically refers to the absence
of bureaucracy, special privileges, expensive furniture and private parties
for top management. In a flat team, the distance between the CEO and
a junior programmer is very small. They sit together in the same room,
eat in the same cafe, and discuss team strategy like friends. There
are no &amp;quot;bosses&amp;quot; on a flat team, only &amp;quot;&lt;strong&gt;leaders&lt;/strong&gt;&amp;quot;. They don&amp;#39;t give orders, they
&lt;strong&gt;inspire&lt;/strong&gt;. They don&amp;#39;t punish, they celebrate success and mourn failure
together with everybody. Well, that&amp;#39;s the idea of a holacracy.
And it actually works. I&amp;#39;ve seen it many times.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;The key objective of a project is to end, while an organization&amp;#39;s objective is to survive&lt;/aside&gt;

&lt;p&gt;However, when we&amp;#39;re talking about &lt;strong&gt;project&lt;/strong&gt; management, this very same approach will
have catastrophic consequences. A project is something very different
than a team. A project is a &amp;quot;temporary endeavor
undertaken to create a unique product, service, or result&amp;quot;, according to
&lt;a href=&quot;http://www.pmi.org/PMBOK-Guide-and-Standards.aspx&quot;&gt;PMBOK&lt;/a&gt;.
A project is something that starts and ends. The key objective of a project
is to &lt;strong&gt;end&lt;/strong&gt;, while an organization&amp;#39;s objective is to &lt;strong&gt;survive&lt;/strong&gt;. See the
difference? A new mobile app, a conference, a new release, a round of
investments &amp;mdash; these are examples of projects. They start, and they end. We
don&amp;#39;t want any of them to live forever; we want them to finish as soon as
possible, and obviously with a positive outcome.&lt;/p&gt;

&lt;p&gt;Because of this fundamental difference, a project must be managed by
an authoritative person who gives orders and
has enough guts to ensure those orders are obeyed. That person is
called a &lt;strong&gt;project manager&lt;/strong&gt; (PM). And the project will be successful only if
its management structure is strictly hierarchical, just like in a military operation.
A project cannot be flat, or it will fall apart.&lt;/p&gt;

&lt;p&gt;Since a project is a temporary endeavor, it doesn&amp;#39;t give security to its
participants. And it doesn&amp;#39;t take away our freedom. The arrangement is
different: A project gives us &lt;strong&gt;money&lt;/strong&gt; and takes our &lt;strong&gt;time&lt;/strong&gt;. The project
basically says to all of us, its participants: &amp;quot;Let&amp;#39;s get it done and go
our own ways&amp;quot;. Having this philosophy in mind and understanding the motivation
of everybody involved, the PM must use instruments that have nothing to do
with what keeps the organization alive.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;A project will finish successfully if we value discipline, subordination, awards, punishments, and rules&lt;/aside&gt;

&lt;p&gt;An organization/team/company/family will stay together for a long time if
we value things like tolerance, respect, patience, equality, and appreciation.&lt;/p&gt;

&lt;p&gt;To the contrary, a project will finish successfully if we value completely
different things: discipline, subordination, awards, punishments, and rules.&lt;/p&gt;

&lt;p&gt;To summarize my thoughts, I would say that a successful company combines
these two approaches by being a &lt;a href=&quot;https://en.wikipedia.org/wiki/Matrix_management&quot;&gt;matrix&lt;/a&gt;
organization that promotes holacracy in the team and autocracy in
the projects it is working on.&lt;/p&gt;</content><category term="management" /><summary>I strongly believe that while it is very effective to structure
an organization in a democratic and sociocratic way, a project
should be managed completely different.
A project should resemble a dictatorship, authoritarian or military hierarchy
with a single strong, result-oriented leader who gives explicit orders
that are never doubted by subordinates and an explicitly defined hierarchy.</summary></entry></feed>
