<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://www.yegor256.com/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator><link href="http://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="http://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2017-10-09T07:53:58+00:00</updated><id>http://www.yegor256.com/</id><title type="html">Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><entry><title type="html">Java 9: The Good, The Bad, and Private Interface Methods</title><link href="http://www.yegor256.com/2017/10/03/java9.html" rel="alternate" type="text/html" title="Java 9: The Good, The Bad, and Private Interface Methods" /><published>2017-10-03T00:00:00+00:00</published><updated>2017-10-03T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/10/03/java9</id><content type="html" xml:base="http://www.yegor256.com/2017/10/03/java9.html">&lt;p&gt;Java 9 &lt;a href=&quot;https://blogs.oracle.com/java/java-9-release-now-available&quot;&gt;was released&lt;/a&gt;
a few weeks ago. Check the
&lt;a href=&quot;https://docs.oracle.com/javase/9/whatsnew/toc.htm&quot;&gt;release notes&lt;/a&gt;,
they include many interesting features. However, I think that
not everything is as good as Oracle and Java adepts
&lt;a href=&quot;https://www.reddit.com/r/programming/comments/71ls99/java_9_released/&quot;&gt;seem to picture it&lt;/a&gt;.
I see three trends in the Java world, which are good, bad, and ugly,
respectively. Let&amp;#39;s start with the good one.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Birdman (2014) by Alejandro G. Iñárritu&#39; src=&#39;/images/2017/10/birdman.jpg&#39; longdesc=&#39;#e53725ca&#39;/&gt;&lt;figcaption id=&#39;e53725ca&#39;&gt;Birdman (2014) by Alejandro G. Iñárritu&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;the-platform&quot;&gt;The Platform&lt;/h2&gt;

&lt;p&gt;The first trend is an obvious improvement of the platform that compiles Java,
packages JARs, and runs the bytecode. It definitely becomes better with every
new Java release. Here is a list of improvements Java&amp;nbsp;9 made, which are
very useful, without doubt:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/projects/jigsaw/spec/&quot;&gt;JSR 376&lt;/a&gt;: Module System a.k.a. &lt;a href=&quot;http://openjdk.java.net/projects/jigsaw/&quot;&gt;Jigsaw&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/222&quot;&gt;JEP 222&lt;/a&gt;: &lt;a href=&quot;http://jakubdziworski.github.io/java/2016/07/31/jshell-getting-started-examples.html&quot;&gt;&lt;code&gt;jshell&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/238&quot;&gt;JEP 238&lt;/a&gt;: Multi-release JARs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/282&quot;&gt;JEP 282&lt;/a&gt;: &lt;a href=&quot;https://blog.idrsolutions.com/2017/05/java-9-jlink-explained-in-5-minutes/&quot;&gt;&lt;code&gt;jlink&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/158&quot;&gt;JEP 158&lt;/a&gt;: Unified logging&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The platform is obviously becoming more mature. This is a &lt;strong&gt;good&lt;/strong&gt; trend.&lt;/p&gt;

&lt;h2 id=&quot;the-jdk&quot;&gt;The JDK&lt;/h2&gt;

&lt;p&gt;The second trend, which I&amp;#39;ve observed since
&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/features-141434.html&quot;&gt;Java&amp;nbsp;6&lt;/a&gt;,
shows that the JDK, which is essentially a collection of
classes and interfaces designed, developed, and maintained by
&lt;a href=&quot;https://www.oracle.com/java/index.html&quot;&gt;Oracle&lt;/a&gt;,
gets bigger with every new release. In Java&amp;nbsp;9 they added and extended,
besides others, the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JEP &lt;a href=&quot;http://openjdk.java.net/jeps/221&quot;&gt;221&lt;/a&gt;,
&lt;a href=&quot;http://openjdk.java.net/jeps/224&quot;&gt;224&lt;/a&gt;
&lt;a href=&quot;http://openjdk.java.net/jeps/225&quot;&gt;225&lt;/a&gt;,
&lt;a href=&quot;http://openjdk.java.net/jeps/261&quot;&gt;261&lt;/a&gt;: Javadoc processing (extended)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/268&quot;&gt;JEP 268&lt;/a&gt;: XML Catalogs (new)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/262&quot;&gt;JEP 262&lt;/a&gt;: TIFF image I/O (new)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/251&quot;&gt;JEP 251&lt;/a&gt;: multi-resolution images (new)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/110&quot;&gt;JEP 110&lt;/a&gt;: HTTP 2.0 client (new)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/236&quot;&gt;JEP 236&lt;/a&gt;: Parser for Nashorn (extended)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course some features must be implemented in the JDK itself, like
Unicode support (&lt;a href=&quot;http://openjdk.java.net/jeps/267&quot;&gt;JEP 267&lt;/a&gt;),
platform-specific Desktop features (&lt;a href=&quot;http://openjdk.java.net/jeps/272&quot;&gt;JEP 272&lt;/a&gt;),
Spin-Wait Hints (&lt;a href=&quot;http://openjdk.java.net/jeps/285&quot;&gt;JEP 285&lt;/a&gt;),
compact strings (&lt;a href=&quot;http://openjdk.java.net/jeps/254&quot;&gt;JEP 254&lt;/a&gt;),
and the process API (&lt;a href=&quot;http://openjdk.java.net/jeps/102&quot;&gt;JEP 102&lt;/a&gt;).
Their implementation depends on the underlying platform and has
to be provided together with the JVM.&lt;/p&gt;

&lt;p&gt;But what is HTTP 2.0 client doing in the JDK, together with
&lt;a href=&quot;https://jcp.org/en/jsr/detail?id=311&quot;&gt;JAX-RS&lt;/a&gt;,
&lt;a href=&quot;https://www.jcp.org/en/jsr/detail?id=338&quot;&gt;JPA&lt;/a&gt;,
&lt;a href=&quot;https://jcp.org/en/jsr/detail?id=224&quot;&gt;JAX-WS&lt;/a&gt;,
&lt;a href=&quot;https://www.jcp.org/en/jsr/detail?id=221&quot;&gt;JDBC&lt;/a&gt;,
and many other things that, in my opinion,
should stay as far away from Oracle as possible?
They are not platform specific and they can be, in a much better way, designed
by the open source community as independent packages.
Aggregating them under one monster umbrella brand is a mistake, I believe.&lt;/p&gt;

&lt;p&gt;I think that big corporations are only killing the software market,
instead of making it better, because of the financial and political motives
they expose it to. That&amp;#39;s exactly what is happening with JDK. Thanks to
the Oracle monopoly it lacks flexibility and dynamicity in growth. In other
words, we&amp;#39;re stuck with what Oracle and its big friends
&lt;a href=&quot;https://news.ycombinator.com/item?id=14301531&quot;&gt;think is right&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thus, making JDK bigger is a &lt;strong&gt;bad&lt;/strong&gt; trend. Instead, I believe,
Oracle would only benefit from making it smaller,
delegating everything that is not platform-specific to the open
source community, supporting programmers somehow and promoting open and effective
standardization processes on the market.&lt;/p&gt;

&lt;h2 id=&quot;the-language&quot;&gt;The Language&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_%28programming_language%29&quot;&gt;Java&lt;/a&gt;
was developed by
&lt;a href=&quot;https://en.wikipedia.org/wiki/James_Gosling&quot;&gt;James Gosling&lt;/a&gt; in
&lt;a href=&quot;https://en.wikipedia.org/wiki/Sun_Microsystems&quot;&gt;Sun Microsystems&lt;/a&gt;
in 1995 as an object-oriented language. There were
&lt;a href=&quot;/2016/08/15/what-is-wrong-object-oriented-programming.html&quot;&gt;many concerns&lt;/a&gt;
about this claim of object-orientation and I&amp;#39;m also not sure that Java
is more OO than it is procedural. However it is officially object-oriented.&lt;/p&gt;

&lt;p&gt;There were many procedural features inherited by Java from C/C++, since
its first version, including
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;static methods&lt;/a&gt;,
&lt;a href=&quot;/2014/05/13/why-null-is-bad.html&quot;&gt;NULL&lt;/a&gt;,
&lt;a href=&quot;/2016/09/13/inheritance-is-procedural.html&quot;&gt;implementation inheritance&lt;/a&gt;,
etc. It was not a perfect object-oriented language and it was not going
to be one, as I understand it. The key idea was to create something that could
be &lt;a href=&quot;https://en.wikipedia.org/wiki/Write_once,_run_anywhere&quot;&gt;written once and ran anywhere&lt;/a&gt;.
However the language was a big deal also, not just the JVM. It was simple and sexy.&lt;/p&gt;

&lt;p&gt;Java&amp;nbsp;5 made a serious step forward in 2004 and improved the language by
adding
&lt;a href=&quot;https://en.wikipedia.org/wiki/Generics_in_Java&quot;&gt;generics&lt;/a&gt;,
for-each loop,
&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_syntax#Varargs&quot;&gt;varargs&lt;/a&gt;,
and static import. However, &lt;a href=&quot;/2016/04/12/java-annotations-are-evil.html&quot;&gt;annotations&lt;/a&gt;
and enumerations were introduced, which helped the language to divert
from the object paradigm to something completely different and procedural.&lt;/p&gt;

&lt;p&gt;Java&amp;nbsp;7 added &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/technotes/guides/language/try-with-resources.html&quot;&gt;try-with-resource&lt;/a&gt;
in 2011, which was a good move, in line with the OOP paradigm.&lt;/p&gt;

&lt;p&gt;Java&amp;nbsp;8 added &lt;a href=&quot;http://openjdk.java.net/projects/lambda/&quot;&gt;lambda expressions&lt;/a&gt; in 2014,
which was a great feature, but absolutely irrelevant to OOP. Lambda and
&lt;a href=&quot;http://www.oracle.com/technetwork/articles/java/ma14-java-se-8-streams-2177646.html&quot;&gt;Streams API&lt;/a&gt;
turned Java into a mix of the object, procedural, and functional
paradigms. &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;Default methods&lt;/a&gt;
were also added to interfaces, which turned types into libraries of code. Types into libraries!
It&amp;#39;s even worse than
&lt;a href=&quot;/2016/09/13/inheritance-is-procedural.html&quot;&gt;implementation inheritance&lt;/a&gt;,
if you ask me.&lt;/p&gt;

&lt;p&gt;Now Java&amp;nbsp;9 made the next &amp;quot;improvement&amp;quot; to interfaces, allowing them to have
private methods. Private static methods in types! Can you believe it? What will
be the next step? Attributes, in Java&amp;nbsp;10, I guess.&lt;/p&gt;

&lt;p&gt;Also, let&amp;#39;s take a look at what was done to some core classes in the JDK,
to understand where the language is heading. Just two examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Factory methods for collections&lt;/strong&gt;
(&lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;JEP 269&lt;/a&gt;).
Instead of introducing new constructors and allowing us to do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;...in Java&amp;nbsp;9 they created more static methods and made us do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&amp;quot;Fewer constructors, more static methods!&amp;quot; seems to be the philosophy of those who
introduced this JEP. Needless to say that this is completely against the
very spirit of object-oriented programming. Objects must be created by
constructors, not static methods, no matter what Joshua Bloch
&lt;a href=&quot;http://amzn.to/2crH5tW&quot;&gt;says&lt;/a&gt;. Static methods make the moment of operator
&lt;code&gt;new&lt;/code&gt; usage invisible for us and that&amp;#39;s why the code is way less
maintainable&amp;mdash;we simply don&amp;#39;t know exactly what class is instantiated and
what the real arguments of its ctor are.&lt;/p&gt;

&lt;p&gt;By the way, with &lt;a href=&quot;http://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt; you can do it the right way:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ListOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is OOP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New methods in &lt;code&gt;InputStream&lt;/code&gt;&lt;/strong&gt;.
Three new methods were added to the
already &lt;a href=&quot;/2016/04/26/why-inputstream-design-is-wrong.html&quot;&gt;over bloated&lt;/a&gt; class
&lt;a href=&quot;http://download.java.net/java/jdk9/docs/api/java/io/InputStream.html&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;:
&lt;code&gt;transferTo()&lt;/code&gt;, &lt;code&gt;readNBytes()&lt;/code&gt;, and &lt;code&gt;readAllBytes()&lt;/code&gt;.
Now we are supposed to do this, when we want input stream to
copy to an output stream:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;transferTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It&amp;#39;s one of the most typical mistakes young OOP programmers are making: they
make their interfaces big. Just because they need more functionality. I guess the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Interface_segregation_principle&quot;&gt;interface segregation principle&lt;/a&gt;
is part of the famous &lt;a href=&quot;/2017/03/28/solid.html&quot;&gt;SOLID&lt;/a&gt;
and is many years old. What&amp;#39;s wrong with you, Oracle?
What will the next step be? In Java&amp;nbsp;10 we will also have
&lt;code&gt;saveToFile()&lt;/code&gt; and &lt;code&gt;printToConsole()&lt;/code&gt;? How about &lt;code&gt;emailToAFriend()&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;This is how you would do the same with the
&lt;a href=&quot;https://commons.apache.org/proper/commons-io/javadocs/api-2.4/org/apache/commons/io/IOUtils.html&quot;&gt;&lt;code&gt;IOUtils&lt;/code&gt;&lt;/a&gt;
utility class from
&lt;a href=&quot;https://commons.apache.org/proper/commons-io/&quot;&gt;commons-io&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It&amp;#39;s &lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;not perfect&lt;/a&gt;,
but it&amp;#39;s better. The most object-oriented way is to use objects, not
utility classes and static methods. This is how it works in
&lt;a href=&quot;/2017/06/22/object-oriented-input-output-in-cactoos.html&quot;&gt;Cactoos&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LengthOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeeInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is OOP.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;In my opinion, Java is getting &lt;strong&gt;uglier&lt;/strong&gt;, and this is a trend. Does it mean
that it&amp;#39;s time to quit? No! No matter how ugly you are, we will always love you
Java!&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="java" /><summary type="html">Java 9 was released
a few weeks ago. Check the
release notes,
they include many interesting features. However, I think that
not everything is as good as Oracle and Java adepts
seem to picture it.
I see three trends in the Java world, which are good, bad, and ugly,
respectively. Let&amp;#39;s start with the good one.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/10/birdman.jpg" /></entry><entry><title type="html">ThreeCopies.com—Server-Side Data Backup Service</title><link href="http://www.yegor256.com/2017/09/26/threecopies-server-data-backup.html" rel="alternate" type="text/html" title="ThreeCopies.com&amp;mdash;Server-Side Data Backup Service" /><published>2017-09-26T00:00:00+00:00</published><updated>2017-09-26T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/09/26/threecopies-server-data-backup</id><content type="html" xml:base="http://www.yegor256.com/2017/09/26/threecopies-server-data-backup.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.threecopies.com&#39;&gt;&lt;img src=&#39;http://www.threecopies.com/images/logo.png&#39; style=&#39;width:64px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;I have a number of data resources which exist in one place only and which
I don&amp;#39;t really want to lose. For example, I have a hosted PHP website,
and a MySQL database hosted at the same place. I also have
a NoSQL database at Amazon DynamoDB, a PostgreSQL database at
Heroku, and also... Well, there are many of them. How to back them up was always a
question for me.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Main picture&#39; src=&#39;/images/2017/09/threecopies.jpg&#39;/&gt;&lt;/figure&gt;

&lt;p&gt;The most straightforward way is to rent a cheap $15/mo server
(or use an existing one) and configure Cron to run a custom bash
script, which will pull the data from the MySQL database, package it,
and upload it to some place where it will be safe, such as Amazon S3
bucket. Then, I would need another script for the PostgreSQL database, and another one
for the FTP file archive, etc.&lt;/p&gt;

&lt;p&gt;This is actually how I was doing it for years. The drawbacks
of this solution were always the same:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I needed to pay for the server.&lt;/li&gt;
&lt;li&gt;I needed to make sure the server was always up and running (Linux is far from reliable).&lt;/li&gt;
&lt;li&gt;I needed to back up my scripts too.&lt;/li&gt;
&lt;li&gt;I needed to SSH to the server every time I wanted to change a script, remember where they were, how they start, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The biggest issue is that every single owner of a data source faces
exactly the same set of problems. &amp;quot;Why can&amp;#39;t I create a hosted solution for
these scripts, to help everybody to back up their data,&amp;quot; I was asking myself
for years. &amp;quot;Well, I can,&amp;quot; was the answer just a few weeks ago, and
I created &lt;a href=&quot;http://www.threecopies.com&quot;&gt;ThreeCopies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a very simple hosted executor of bash scripts, which you edit
through a web interface. Then one of our servers starts a Docker
container (&lt;a href=&quot;https://hub.docker.com/r/yegor256/threecopies/&quot;&gt;yegor256/threecopies&lt;/a&gt; is the image, here is the
&lt;a href=&quot;https://github.com/yegor256/threecopies/blob/master/src/docker/Dockerfile&quot;&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;)
and runs your script inside.&lt;/p&gt;

&lt;p&gt;The script starts every hour, every day and every week.
Hence the name: &amp;quot;three copies.&amp;quot; It&amp;#39;s good practice for data backup
to create separate copies with different regularities. Also, you might want to put
different data into different copies. To help your script understand which
copy is running at any particular time we pass the &lt;code&gt;$period&lt;/code&gt; environment variable into it, with
the value of either &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, or &lt;code&gt;week&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;How your script pulls the data, packages it, and archives it, depends on the
data. I created a short cheat sheet for most common scenarios. This is how
I backup the MySQL database for &lt;a href=&quot;http://www.thepmp.com&quot;&gt;thePMP&lt;/a&gt;, for example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# I don&amp;#39;t want to back up every hour&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;period&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hour&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# I dump the entire database into the file&lt;/span&gt;
mysqldump --lock-tables&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; --host&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;db.thepmp.com &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;thepmp --password&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;********* &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --databases thepmp &amp;gt; thepmp.sql

&lt;span class=&quot;c1&quot;&gt;# I compress the file&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;tgz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date &lt;span class=&quot;s2&quot;&gt;&amp;quot;+%Y-%m-%d-%H-%M&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.tgz&amp;quot;&lt;/span&gt;
tar czf &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tgz&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; thepmp.sql

&lt;span class=&quot;c1&quot;&gt;# I upload it to Amazon S3 bucket&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[default]&amp;quot;&lt;/span&gt; &amp;gt; ~/.s3cfg
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;access_key=AKIAICJKH*****CVLAFA&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.s3cfg
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;secret_key=yQv3g3ao654Ns**********H1xQSfZlTkseA0haG&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.s3cfg
s3cmd --no-progress put &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tgz&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;s3://backup.yegor256.com/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tgz&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output of the script is available through the web interface and this
is yet another benefit of this solution. It&amp;#39;s easy to monitor what went
wrong and restart the script. All logs are available through the browser. No
SSH, no terminals.&lt;/p&gt;

&lt;p&gt;I would say that it&amp;#39;s a light version of
&lt;a href=&quot;https://aws.amazon.com/datapipeline/&quot;&gt;AWS Data Pipeline&lt;/a&gt;. &lt;a href=&quot;http://www.threecopies.com&quot;&gt;ThreeCopies&lt;/a&gt;
does exactly the same, but it&amp;#39;s easier to configure, and it&amp;#39;s cheaper.
I&amp;#39;m charging $0.01 per script execution hour. And I actually charge
per second, while AWS always charges for a full hour. For $5.00 you get
500 hours. For example, the script you see above takes about 5 minutes
to complete (the database is not huge). If you skip the hourly executions, like I did above, you
will consume 170 minutes of server time every month, which will cost you about
&lt;strong&gt;$0.34 per year&lt;/strong&gt;! This is much cheaper than a server and
its monitoring, I believe.&lt;/p&gt;

&lt;p&gt;One more thing before you go. ThreeCopies is written in Java&amp;nbsp;8 and is open source,
find it &lt;a href=&quot;https://github.com/yegor256/threecopies&quot;&gt;in GitHub&lt;/a&gt;. Feel free to
inspect the code, find bugs, and contribute with fixes or improvements.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="pets" /><summary type="html">I have a number of data resources which exist in one place only and which
I don&amp;#39;t really want to lose. For example, I have a hosted PHP website,
and a MySQL database hosted at the same place. I also have
a NoSQL database at Amazon DynamoDB, a PostgreSQL database at
Heroku, and also... Well, there are many of them. How to back them up was always a
question for me.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/09/threecopies.jpg" /></entry><entry><title type="html">What Motivates Me as a Programmer</title><link href="http://www.yegor256.com/2017/09/19/what-motivates-me.html" rel="alternate" type="text/html" title="What Motivates Me as a Programmer" /><published>2017-09-19T00:00:00+00:00</published><updated>2017-09-19T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/09/19/what-motivates-me</id><content type="html" xml:base="http://www.yegor256.com/2017/09/19/what-motivates-me.html">&lt;p&gt;I wrote a number of &lt;a href=&quot;/tag/sarcasm.html&quot;&gt;sarcastic articles&lt;/a&gt;
about management and motivation, where some traditional and very popular
practices were criticized. Now I&amp;#39;ve decided to think it all over
and summarize what actually motivates &lt;em&gt;me&lt;/em&gt; as a programmer when I&amp;#39;m
working for someone else. Let&amp;#39;s say you hire me tomorrow as a Java coder
and ask &amp;quot;What do you want us to do for you so
that you will be most productive?&amp;quot; This would be my wish list.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;300 (2006) by Zack Snyder&#39; src=&#39;/images/2017/09/300.jpg&#39; longdesc=&#39;#bf681782&#39;/&gt;&lt;figcaption id=&#39;bf681782&#39;&gt;300 (2006) by Zack Snyder&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;The list is in no particular order.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote work&lt;/strong&gt;.
I like to be
&lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;in the office&lt;/a&gt;,
but I hate it when I have to be there from 9 till 5.
It&amp;#39;s very important for me to have the ability to work from wherever
I want. Most companies
&lt;a href=&quot;/2017/05/02/remote-slaves.html&quot;&gt;declare that&lt;/a&gt;,
but in reality I will have to &amp;quot;inform&amp;quot; you
every time I decide to stay home. Instead, I want to inform
you when I decide to visit the office. In other words, my default state
should be &amp;quot;not in the office.&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Isolation of tasks&lt;/strong&gt;.
I hate being responsible for someone else&amp;#39;s mistakes and I&amp;#39;m not really a good
&lt;a href=&quot;/2015/11/21/ringelmann-effect-vs-agile.html&quot;&gt;team player&lt;/a&gt;.
I want to solve problems on my own and be responsible for my own
successes and failures. That&amp;#39;s why clearly defined and isolated tasks motivate
me and help me stay focused and interested. I want to see them in writing
(as tickets) and I want to know exactly what the
&lt;a href=&quot;/2014/04/15/definition-of-done.html&quot;&gt;definition of done&lt;/a&gt; is.
Simply put, what should I do in order for a task to be considered as
completed?&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;I hate to be afraid, especially if I don&amp;#39;t really know what I&amp;#39;m supposed to be afraid of.&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Responsibility borders&lt;/strong&gt;.
I hate to be afraid, especially if I don&amp;#39;t really know what I&amp;#39;m supposed to be
afraid of. I want to know what my possible
&lt;a href=&quot;/2016/01/05/how-to-punish-employees.html&quot;&gt;punishments&lt;/a&gt; are and when they will
occur. I need to know the
&lt;a href=&quot;/2015/10/13/competition-without-rules.html&quot;&gt;rules of the game&lt;/a&gt;.
Say I commit a bug into
the code and we lose $100,000. What will happen to me? Or say I don&amp;#39;t finish a
task by the deadline. Or I don&amp;#39;t answer an email. Or I miss a bug during
a code review. Or I break the &lt;code&gt;master&lt;/code&gt; branch. What are the consequences?
Their clear explanation will seriously boost my motivation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open source&lt;/strong&gt;.
I&amp;#39;m a big fan of &lt;a href=&quot;/2015/12/22/why-dont-you-contribute-to-open-source.html&quot;&gt;open source&lt;/a&gt;.
If you are not, I most probably won&amp;#39;t like
working for you. If your company makes some code open and I am part of
that process, that will seriously affect my motivation, because I will achieve
two goals at the same time: make money and become more popular in the
open source world. Working in purely closed software projects is a demotivating
factor for me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project visibility&lt;/strong&gt;.
I&amp;#39;d love to see my name close to a project that is visible to the world.
And it doesn&amp;#39;t necessarily have to be Google or Facebook. Actually, in those companies
regular programmers are way less visible than in smaller startups. So, unless
you make me VP of Engineering, I won&amp;#39;t consider a position
in a big company interesting in that respect. The most interesting project
would be a small startup with an ambitious goal and high exposure in the media.
Being there even as a regular programmer will motivate me a lot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clear hierarchy&lt;/strong&gt;.
Yes, I&amp;#39;ve heard about
&lt;a href=&quot;/2016/02/18/holacracy-autocracy.html&quot;&gt;holacracy&lt;/a&gt;,
&lt;a href=&quot;https://en.wikipedia.org/wiki/Flat_organization&quot;&gt;flat&lt;/a&gt; and
&lt;a href=&quot;https://en.wikipedia.org/wiki/Flat_organization#Self-managing_teams&quot;&gt;self-managing&lt;/a&gt; teams, and
other modern ideas. I hate them all. I believe that any management is based
on
&lt;a href=&quot;/2016/09/27/command-control-innovate.html&quot;&gt;power and force&lt;/a&gt;,
and the best way to avoid negative aspects of these
rather violent concepts is to organize and structure them. Without a clear and well defined
hierarchy of roles a team very quickly turns into a
&lt;a href=&quot;/2015/10/13/competition-without-rules.html&quot;&gt;snake pit&lt;/a&gt;, with
politics, backstabbing and behind-the-scenes games. So, if you can&amp;#39;t tell me
exactly who is my boss and what the chain of command is in the group, I
simply won&amp;#39;t consider this place seriously and won&amp;#39;t be motivated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No Agile/Scrum, please&lt;/strong&gt;.
Do I need to say
&lt;a href=&quot;/2016/07/11/mistakes-in-agile-manifesto.html&quot;&gt;anything&lt;/a&gt;
else here?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Payment structure&lt;/strong&gt;.
I hate to guess about money, I prefer to know the numbers and the logic
behind them. I want to know
&lt;a href=&quot;/2014/09/24/why-monetary-awards-dont-work.html&quot;&gt;exactly&lt;/a&gt;
how much I&amp;#39;m going to get and when.
I want to know when the numbers will go up and how I can affect that. Also,
I&amp;#39;d like to know the payment policy of the company and, ideally, salaries
or rates of the people around me. Jealousy, which arises with the
surprising information that someone is getting more than I do, doesn&amp;#39;t
motivate at all, even if my pay is
&lt;a href=&quot;/2014/10/29/how-much-do-you-cost.html&quot;&gt;decent&lt;/a&gt;.
It would be much easier for me
if I knew everything from the first day.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;I hate working for big ideas, if they are not mine.&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Business transparency&lt;/strong&gt;.
I hate working for big ideas, if they are not mine. Mostly because I know
that almost all of them
&lt;a href=&quot;/2016/01/12/good-programmers-dont-work-for-equity.html&quot;&gt;fail&lt;/a&gt;.
Working for a failure and
&lt;a href=&quot;/2015/03/02/team-morale-myths-and-reality.html&quot;&gt;being told&lt;/a&gt; that
our future is bright doesn&amp;#39;t really motivate me, at all. That&amp;#39;s why I would
expect you to tell me honestly why a meeting with investors took three hours
instead of one and why the door was so tightly closed. Also, I would want
to know why our CTO quit a few weeks ago and now works for our
competitors. I&amp;#39;d like to know our honest situation in the market
and why the web traffic stats are going down. In other words,
I&amp;#39;m either a &lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;slave&lt;/a&gt;
kept in the dark, or I know
&lt;a href=&quot;/2015/03/02/team-morale-myths-and-reality.html&quot;&gt;the truth&lt;/a&gt; and I&amp;#39;m motivated
(no matter how ugly the truth is).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Payments per results&lt;/strong&gt;.
I haven&amp;#39;t seen this anywhere, except with my own projects, but I believe it&amp;#39;s how
good teams should be structured: everybody must be paid
&lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;for results&lt;/a&gt;,
not per hour/week/month/year. If you want me to be truly motivated you have to
invent a payment structure where my paychecks will correspond to my results.
I do realize that this may require you to change the entire management
system, so I don&amp;#39;t absolutely insist. But you have to remember that as long as
you pay me only for my time I will try to do my best to &lt;del&gt;steal from you&lt;/del&gt; use
it for my
&lt;a href=&quot;/2017/01/24/career-advice.html&quot;&gt;own benefit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Career path&lt;/strong&gt;.
I have no problem starting as a junior developer, but I have to know exactly
what my future is and when it will happen. I want to become a CTO, no matter
what. And it&amp;#39;s not about the title. It&amp;#39;s about the amount of technical
&lt;a href=&quot;/2014/10/12/who-is-software-architect.html&quot;&gt;authority&lt;/a&gt; and
&lt;a href=&quot;/2015/05/11/software-architect-responsibilities.html&quot;&gt;responsibility&lt;/a&gt;
I will have. I want it all. If I don&amp;#39;t see a clear path to
achieve that, I will be very demotivated and will treat my job as
temporary. I will always be looking for a &lt;a href=&quot;/2017/01/24/career-advice.html&quot;&gt;better place&lt;/a&gt;,
where it&amp;#39;s easier
to become a CTO. So it&amp;#39;s your job to make that career growth obvious for me.
If it will never be possible for me to become the CTO, make that obvious too.
The truth is better anyway.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;A strong manager is someone who is ready to fight for their own ideas, rights, thoughts, and decisions.&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;A strong boss&lt;/strong&gt;.
This is probably the most important requirement I would have. I can&amp;#39;t work
under a &lt;a href=&quot;/2015/09/22/micromanagement.html&quot;&gt;weak manager&lt;/a&gt;,
it will seriously demotivate me from the first day.
I will probably write another blog post about what a &amp;quot;strong manager&amp;quot; is,
but in a nutshell it&amp;#39;s someone who is ready to fight for his or her
own ideas, rights, thoughts, decisions, etc. A weak manager is one who is
swimming with the current. Working under such a manager is a huge
frustration and a waste of time. I will be demotivated and no amount of money
will keep me interested.&lt;/p&gt;

&lt;p&gt;These things don&amp;#39;t matter at all, I won&amp;#39;t even ask about them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mission and vision of the company&lt;/li&gt;
&lt;li&gt;Business domain&lt;/li&gt;
&lt;li&gt;Tech stack&lt;/li&gt;
&lt;li&gt;Location&lt;/li&gt;
&lt;li&gt;Company size or structure&lt;/li&gt;
&lt;li&gt;Race, gender, sexual orientation, religious or political beliefs of people in the team&lt;/li&gt;
&lt;li&gt;Financial status of the company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, I don&amp;#39;t think that this list is applicable for everybody. Other programmers
may have some other points or may disagree with mine.&lt;/p&gt;

&lt;p&gt;P.S. I would most probably stay away from a business involved in something
I consider unethical, like corruption, gambling, crime, etc.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><summary type="html">I wrote a number of sarcastic articles
about management and motivation, where some traditional and very popular
practices were criticized. Now I&amp;#39;ve decided to think it all over
and summarize what actually motivates me as a programmer when I&amp;#39;m
working for someone else. Let&amp;#39;s say you hire me tomorrow as a Java coder
and ask &amp;quot;What do you want us to do for you so
that you will be most productive?&amp;quot; This would be my wish list.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/09/300.jpg" /></entry><entry><title type="html">Yet Another Evil Suffix For Object Names: Client</title><link href="http://www.yegor256.com/2017/09/12/evil-object-name-suffix-client.html" rel="alternate" type="text/html" title="Yet Another Evil Suffix For Object Names: Client" /><published>2017-09-12T00:00:00+00:00</published><updated>2017-09-12T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/09/12/evil-object-name-suffix-client</id><content type="html" xml:base="http://www.yegor256.com/2017/09/12/evil-object-name-suffix-client.html">&lt;p&gt;Some time ago we &lt;a href=&quot;/2015/03/09/objects-end-with-er.html&quot;&gt;were talking&lt;/a&gt;
about &amp;quot;-ER&amp;quot; suffixes in object and class
names. We agreed that they were evil and must be avoided if we want
our code to be truly object-oriented and our objects to be objects instead
of collections of procedures. Now I&amp;#39;m ready to introduce a new evil suffix:
&lt;code&gt;Client&lt;/code&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Sin noticias de Dios (2001) by Agustín Díaz Yanes&#39; src=&#39;/images/2017/09/dont-tempt-me.jpg&#39; longdesc=&#39;#467f4c9d&#39;/&gt;&lt;figcaption id=&#39;467f4c9d&#39;&gt;Sin noticias de Dios (2001) by Agustín Díaz Yanes&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let me give an example first. This is what an object with such a suffix may look like
(it&amp;#39;s a pseudo-code version of the
&lt;a href=&quot;http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/AmazonS3Client.html&quot;&gt;&lt;code&gt;AmazonS3Client&lt;/code&gt;&lt;/a&gt;
from &lt;a href=&quot;https://aws.amazon.com/sdk-for-java/&quot;&gt;AWS Java SDK&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AmazonS3Client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;createBucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;deleteBucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;doesBucketExist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;getBucketAcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;getBucketPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;listBuckets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 160+ more methods here&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All &amp;quot;clients&amp;quot; look similar: they encapsulate the destination URL
with some access credentials and expose a number of methods, which
transport the data to/from the &amp;quot;server.&amp;quot; Even though this design
looks like a &lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;proper object&lt;/a&gt;,
it doesn&amp;#39;t really follow the true spirit of object-orientation.
That&amp;#39;s why it&amp;#39;s not as maintainable as it should be, for two reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Its scope is too broad&lt;/strong&gt;.
Since the client is an abstraction of a server, it inevitably has to
represent the server&amp;#39;s &lt;em&gt;entire&lt;/em&gt; functionality. When the functionality
is rather limited there is no issue. Take
&lt;a href=&quot;https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/client/HttpClient.html&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt;
from &lt;a href=&quot;https://hc.apache.org/&quot;&gt;Apache HttpComponents&lt;/a&gt; as an example.
However, when the server is more complex, the size of the client also
grows. There are over 160 (!) methods in &lt;code&gt;AmazonS3Client&lt;/code&gt; at the time of writing, while
it started with only a few dozen just a few &lt;del&gt;years&lt;/del&gt; hundred versions ago.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It is data focused&lt;/strong&gt;.
The very idea of a client-server relationship is about transferring
data. Take the HTTP RESTful API of the AWS S3 service as
an example. There are entities on the AWS side: buckets, objects, versions,
access control policies, etc., and the server turns them into JSON/XML
data. Then the &lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;data&lt;/a&gt;
comes to us and the client on our side deals
with JSON or XML. It inevitably remains &lt;em&gt;data&lt;/em&gt; for us and never really becomes
buckets, objects, or versions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The consequences depend on the situation, but these are the most probable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Procedural code&lt;/strong&gt;.
Since the client returns the data, the code that works with that
data will &lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;most likely&lt;/a&gt;
be procedural. Look at the results AWS SDK methods
return, they all look like
&lt;a href=&quot;/2016/07/14/who-is-object.html&quot;&gt;objects&lt;/a&gt;, but in reality they are just
data structures:
&lt;a href=&quot;http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/S3Object.html&quot;&gt;&lt;code&gt;S3Object&lt;/code&gt;&lt;/a&gt;,
&lt;a href=&quot;http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html&quot;&gt;&lt;code&gt;ObjectMetadata&lt;/code&gt;&lt;/a&gt;,
&lt;a href=&quot;http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/BucketPolicy.html&quot;&gt;&lt;code&gt;BucketPolicy&lt;/code&gt;&lt;/a&gt;,
&lt;a href=&quot;http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/PutObjectResult.html&quot;&gt;&lt;code&gt;PutObjectResult&lt;/code&gt;&lt;/a&gt;, etc.
They are all &lt;a href=&quot;/2016/07/06/data-transfer-object.html&quot;&gt;Data Transfer Objects&lt;/a&gt;
with only
&lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;getters and setters&lt;/a&gt;
inside.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Duplicated code&lt;/strong&gt;.
If we actually decide to stay object-oriented we will have to
turn the data the client returns to us into
&lt;a href=&quot;/2016/07/14/who-is-object.html&quot;&gt;objects&lt;/a&gt;. Most likely this
will lead to code duplication in multiple projects. I had that too,
when I started to work with S3 SDK. Very soon I realized that in order
to avoid duplication I&amp;#39;d better create a library that does the job
of converting S3 SDK data into objects: &lt;a href=&quot;https://github.com/jcabi/jcabi-s3&quot;&gt;jcabi-s3&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Difficulties with testing&lt;/strong&gt;.
Since the client is in most cases a rather big class/interface, mocking
it in unit tests or creating its &lt;a href=&quot;/2014/09/23/built-in-fake-objects.html&quot;&gt;test doubles/fakes&lt;/a&gt;
is a rather complex task.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Static problems&lt;/strong&gt;.
Client classes, even though their methods are not static, look very similar to
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;utility classes&lt;/a&gt;,
which are well known for being
&lt;a href=&quot;/2014/09/10/anti-patterns-in-oop.html&quot;&gt;anti-OOP&lt;/a&gt;. The issues we have
with utility classes are almost the same as those we have with &amp;quot;client&amp;quot; classes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Extendability issues&lt;/strong&gt;.
Needless to say, it&amp;#39;s almost impossible to
&lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;decorate&lt;/a&gt; a client
object when it has 160+ methods and keeps on growing. The only possible
way to add new functionality to it is by creating new methods. Eventually
we get a &lt;a href=&quot;https://en.wikipedia.org/wiki/God_object&quot;&gt;monster class&lt;/a&gt;
that can&amp;#39;t be re-used anyhow without modification.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is the alternative?&lt;/p&gt;

&lt;p&gt;The right design would be to replace &amp;quot;clients&amp;quot; with client-side objects
that represent &lt;em&gt;entities&lt;/em&gt; of the server side, not the entire server. For example, with the S3 SDK,
that could be &lt;code&gt;Bucket&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Version&lt;/code&gt;, &lt;code&gt;Policy&lt;/code&gt;, etc. Each of them
exposes the functionality of real
&lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html&quot;&gt;buckets&lt;/a&gt;,
&lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingObjects.html&quot;&gt;objects&lt;/a&gt; and
&lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectVersioning.html&quot;&gt;versions&lt;/a&gt;,
which the AWS S3 can expose.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;The right design would be to replace clients with client-side objects that represent entities of the server side.&lt;/aside&gt;

&lt;p&gt;Of course, we will need a high-level object that somehow represents the
entire API/server, but it should be small. For example, in the S3 SDK example
it could be called &lt;code&gt;Region&lt;/code&gt;, which means the entire
&lt;a href=&quot;http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region&quot;&gt;AWS region&lt;/a&gt; with buckets.
Then we could retrieve a bucket from it and won&amp;#39;t need a region anymore. Then,
to list objects in the bucket we ask the bucket to do it for us. No need to communicate
with the entire &amp;quot;server object&amp;quot; every time, even though technically such a communication
happens, of course.&lt;/p&gt;

&lt;p&gt;To summarize, the trouble is not exactly in the name suffix, but in the very idea
of representing the entire server on the client side rather than its &lt;em&gt;entities&lt;/em&gt;. Such
an abstraction is 1) too big and 2) very data driven.&lt;/p&gt;

&lt;p&gt;BTW, check out some of the &lt;a href=&quot;http://www.jcabi.com&quot;&gt;JCabi libraries&lt;/a&gt; (Java) for examples
of object-oriented clients without &amp;quot;client&amp;quot; objects:
&lt;a href=&quot;http://github.jcabi.com&quot;&gt;jcabi-github&lt;/a&gt;,
&lt;a href=&quot;http://dynamo.jcabi.com&quot;&gt;jcabi-dynamo&lt;/a&gt;,
&lt;a href=&quot;http://s3.jcabi.com&quot;&gt;jcabi-s3&lt;/a&gt;,
or &lt;a href=&quot;http://simpledb.jcabi.com&quot;&gt;jcabi-simpledb&lt;/a&gt;.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><summary type="html">Some time ago we were talking
about &amp;quot;-ER&amp;quot; suffixes in object and class
names. We agreed that they were evil and must be avoided if we want
our code to be truly object-oriented and our objects to be objects instead
of collections of procedures. Now I&amp;#39;m ready to introduce a new evil suffix:
Client.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/09/dont-tempt-me.jpg" /></entry><entry><title type="html">ReHTTP.net—HTTP Repeater</title><link href="http://www.yegor256.com/2017/09/05/rehttp-http-repeater.html" rel="alternate" type="text/html" title="ReHTTP.net&amp;mdash;HTTP Repeater" /><published>2017-09-05T00:00:00+00:00</published><updated>2017-09-05T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/09/05/rehttp-http-repeater</id><content type="html" xml:base="http://www.yegor256.com/2017/09/05/rehttp-http-repeater.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.rehttp.net&#39;&gt;&lt;img src=&#39;http://www.rehttp.net/images/logo.svg&#39; style=&#39;width:92px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;I faced a problem a few weeks ago with
&lt;a href=&quot;http://www.0pdd.com&quot;&gt;0pdd.com&lt;/a&gt;, one of my web apps that is
supposed to receive HTTP requests (known as
&lt;a href=&quot;https://developer.github.com/webhooks/&quot;&gt;webhooks&lt;/a&gt;) from GitHub:
sometimes the app is down, GitHub gets an HTTP error, and never
sends the request again. The request simply gets lost. There is absolutely
no way to receive it again once the app is back up. I realized that I needed
a &lt;a href=&quot;https://buoyant.io/2017/04/25/whats-a-service-mesh-and-why-do-i-need-one/&quot;&gt;service mesh&lt;/a&gt;
between GitHub and my web app, to accept HTTP
requests and repeat them later if they can&amp;#39;t be delivered immediately.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I created &lt;a href=&quot;http://www.rehttp.net&quot;&gt;rehttp.net&lt;/a&gt; to do exactly that.&lt;/p&gt;

&lt;p&gt;See, the URL I&amp;#39;ve been giving to GitHub is this one:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;http://www.0pdd.com/hook/github&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From now on a new URL has to be used:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;http://p.rehttp.net/http://www.0pdd.com/hook/github&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It looks very similar, but starts with &lt;code&gt;http://p.rehttp.net&lt;/code&gt;. GitHub sends
all webhook PUT/POST requests to the ReHTTP server, which stores
them in a temporary database (I&amp;#39;m using AWS DynamoDB).&lt;/p&gt;

&lt;p&gt;ReHTTP attempts to deliver them immediately. If something goes wrong and
the server HTTP response code is not in the 200-299 range, the next attempt is made
in about an hour. Then it retries every hour for about a day. If all
attempts fail, it abandons the request and that&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;What is interesting is that now I can see a summary of my API
&lt;a href=&quot;http://www.rehttp.net/i?u=http%3A%2F%2Fwww.0pdd.com%2Fhook%2Fgithub&quot;&gt;here&lt;/a&gt;.
I see how many requests were processed successfully over the last 24 hours
and how many of them failed. Also, I have this cute button:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.rehttp.net/b?u=http%3A%2F%2Fwww.0pdd.com%2Fhook%2Fgithub&quot;/&gt;&lt;/p&gt;

&lt;p&gt;And I have a URL for checking the status of the entire API:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;http://www.rehttp.net/s?u=http%3A%2F%2Fwww.0pdd.com%2Fhook%2Fgithub&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I gave this URL to &lt;a href=&quot;https://www.statuscake.com/&quot;&gt;StatusCake&lt;/a&gt; to
ping it every five minutes. If and when
something goes wrong, StatusCake will email me and drop me a message
on the phone.&lt;/p&gt;

&lt;p&gt;ReHTTP is absolutely free. It is written in Java and the code is open.
See its &lt;a href=&quot;https://github.com/yegor256/rehttp&quot;&gt;GitHub repository&lt;/a&gt;
and contribute if you find any bugs or just want to add a feature.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="pet" /><summary type="html">I faced a problem a few weeks ago with
0pdd.com, one of my web apps that is
supposed to receive HTTP requests (known as
webhooks) from GitHub:
sometimes the app is down, GitHub gets an HTTP error, and never
sends the request again. The request simply gets lost. There is absolutely
no way to receive it again once the app is back up. I realized that I needed
a service mesh
between GitHub and my web app, to accept HTTP
requests and repeat them later if they can&amp;#39;t be delivered immediately.</summary></entry><entry><title type="html">XCOP — XML Style Checker</title><link href="http://www.yegor256.com/2017/08/29/xcop.html" rel="alternate" type="text/html" title="XCOP &amp;mdash; XML Style Checker" /><published>2017-08-29T00:00:00+00:00</published><updated>2017-08-29T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/08/29/xcop</id><content type="html" xml:base="http://www.yegor256.com/2017/08/29/xcop.html">&lt;p&gt;One of the biggest advantages of XML versus
&lt;a href=&quot;/2015/11/16/json-vs-xml.html&quot;&gt;many other&lt;/a&gt; data formats is that
it is human-readable. Well, to some extent, you may say. Indeed, a badly
formatted XML document may be rather difficult to digest. I&amp;#39;m not talking about
XML &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-formed_document&quot;&gt;validity&lt;/a&gt;
now, but about its formatting style. Just like we format our
Java/Ruby/Python nicely and then check their &amp;quot;prettiness&amp;quot; with static analyzers,
we can also check our XML documents. Six years ago I asked the StackOverflow community
for such a tool, but unfortunately
&lt;a href=&quot;https://stackoverflow.com/questions/6091873/&quot;&gt;my question&lt;/a&gt;
was down-voted and closed
(you will need 10K+ reputation to see it).
Last week I finally decided to create a tool myself and I called it
&lt;a href=&quot;https://github.com/yegor256/xcop&quot;&gt;xcop&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;L&amp;#39;appartement (1996) by Gilles Mimouni&#39; src=&#39;/images/2017/08/lappartement.jpg&#39; longdesc=&#39;#470ac825&#39;/&gt;&lt;figcaption id=&#39;470ac825&#39;&gt;L&amp;#39;appartement (1996) by Gilles Mimouni&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;It&amp;#39;s a very simple command line
&lt;a href=&quot;https://rubygems.org/gems/xcop&quot;&gt;Ruby gem&lt;/a&gt;.
First, you install it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ gem install xcop&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then you ask it to check your XML file, say &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ xcop pom.xml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If the file is not &amp;quot;pretty,&amp;quot; &lt;code&gt;xcop&lt;/code&gt; will complain and
show what&amp;#39;s wrong. You can ask &lt;code&gt;xcop&lt;/code&gt; to fix the file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ xcop --fix pom.xml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Moreover, in most cases you may need your XML files to include a license
in their headers, especially if it&amp;#39;s open source. To enforce that, just
point &lt;code&gt;xcop&lt;/code&gt; to the file with the license:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ xcop --license&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;LICENSE.txt pom.xml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I believe it&amp;#39;s good practice to use &lt;code&gt;xcop&lt;/code&gt; together with
Checkstyle (for Java files), Rubocop (for Ruby files), and other static
analyzers, to ensure that your XML files always look pretty.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yegor256/xcop&quot;&gt;Read&lt;/a&gt; how you can integrate &lt;code&gt;xcop&lt;/code&gt; with
&lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt;,
&lt;a href=&quot;https://maven.apache.org/&quot;&gt;Maven&lt;/a&gt;, and other builders.
I will appreciate it if you contribute your own integrations too.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="xml" /><summary type="html">One of the biggest advantages of XML versus
many other data formats is that
it is human-readable. Well, to some extent, you may say. Indeed, a badly
formatted XML document may be rather difficult to digest. I&amp;#39;m not talking about
XML validity
now, but about its formatting style. Just like we format our
Java/Ruby/Python nicely and then check their &amp;quot;prettiness&amp;quot; with static analyzers,
we can also check our XML documents. Six years ago I asked the StackOverflow community
for such a tool, but unfortunately
my question
was down-voted and closed
(you will need 10K+ reputation to see it).
Last week I finally decided to create a tool myself and I called it
xcop.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/08/lappartement.jpg" /></entry><entry><title type="html">To Be Nice or Not to Be Nice?</title><link href="http://www.yegor256.com/2017/08/22/to-be-nice-or-not.html" rel="alternate" type="text/html" title="To Be Nice or Not to Be Nice?" /><published>2017-08-22T00:00:00+00:00</published><updated>2017-08-22T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/08/22/to-be-nice-or-not</id><content type="html" xml:base="http://www.yegor256.com/2017/08/22/to-be-nice-or-not.html">&lt;p&gt;I stumbled upon this two-year-old article
&lt;a href=&quot;http://www.paulgraham.com/safe.html&quot;&gt;&lt;em&gt;Why It&amp;#39;s Safe for Founders to Be Nice&lt;/em&gt;&lt;/a&gt;,
written by &lt;a href=&quot;https://twitter.com/paulg&quot;&gt;Paul Graham&lt;/a&gt;
(a co-founder or &lt;a href=&quot;http://www.ycombinator.com/&quot;&gt;Y Combinator&lt;/a&gt;), whom I honestly respect,
and I decided to explain why I disagree. Not that I think we shouldn&amp;#39;t
be nice. Not at all. But I do think that &amp;quot;being nice&amp;quot; is not a solution for organizational,
management, marketing, sales, or business development problems. Moreover,
in most cases it is actually &lt;em&gt;not safe&lt;/em&gt; for founders to be nice.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Scarecrow (1973) by Jerry Schatzberg&#39; src=&#39;/images/2017/08/scarecrow.jpg&#39; longdesc=&#39;#04c96f77&#39;/&gt;&lt;figcaption id=&#39;04c96f77&#39;&gt;Scarecrow (1973) by Jerry Schatzberg&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Graham in his article quotes a founder who explains
his worries about being &amp;quot;fundamentally soft-hearted and tending to give
away too much for free.&amp;quot; Then he suggests the founder should not worry too
much, because &amp;quot;as long as you build something good enough to spread by word of mouth,
you&amp;#39;ll have a hyperlinear growth curve.&amp;quot; In other words, don&amp;#39;t worry about
your &lt;em&gt;softness&lt;/em&gt; and instead focus on building a great product&amp;mdash;your efforts
will be appreciated. But will this really work in the modern world?&lt;/p&gt;

&lt;p&gt;It will, provided you&amp;#39;re a talented mathematician, or a composer, or
maybe a writer, where your success doesn&amp;#39;t really depend on people close to you, like
employees, partners, and investors. However, developing a business is
a different story, where success mostly depends on your ability to
generate &lt;em&gt;profit&lt;/em&gt;, which, by definition, is &amp;quot;taking more and returning less.&amp;quot;
What kind of a soft heart will be happy to do that?&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;In a nutshell, we are either soft-hearted or successful.&lt;/aside&gt;

&lt;p&gt;&lt;a href=&quot;http://foolishnessfile.com/soft-hearted-mistakes/&quot;&gt;&lt;em&gt;7 Soft Hearted Mistakes Startup Founders Make&lt;/em&gt;&lt;/a&gt;
perfectly summarizes how softness may become a weakness,
if we fail to take it under control. In a nutshell,
we are either soft-hearted or successful.
This &amp;quot;weakness&amp;quot; is affecting more people every year, since the entire
world, especially its &lt;a href=&quot;http://www.telegraph.co.uk/men/thinking-man/millennial-men-have-gone-soft--but-its-not-our-fault/&quot;&gt;male part&lt;/a&gt;,
is tending to soften up, mostly thanks to the rapidly growing quality of life.&lt;/p&gt;

&lt;p&gt;For some of us, who, like that founder, are &amp;quot;fundamentally soft-hearted,&amp;quot;
doing business and generating profit is a very stressful activity.
We have to do what goes against our inner self and take advantage of others.
Telling us that it is perfectly safe to &amp;quot;be nice&amp;quot; in this situation
is not ethical&amp;mdash;this disarms us and makes us vulnerable in front of those
who don&amp;#39;t have the &amp;quot;disease of soft-heartedness.&amp;quot;
Is there a better recipe out there to heal our illness?&lt;/p&gt;

&lt;p&gt;Even though I&amp;#39;m trying to think of myself as not a weak person,
I have plenty of soft-heartedness disease symptoms. For example, I feel
guilty when:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I fire an employee&lt;/li&gt;
&lt;li&gt;I negotiate someone down&lt;/li&gt;
&lt;li&gt;I punish someone&lt;/li&gt;
&lt;li&gt;I don&amp;#39;t pick up the phone&lt;/li&gt;
&lt;li&gt;I say &amp;quot;No&amp;quot; to an offer&lt;/li&gt;
&lt;li&gt;I don&amp;#39;t trust people&lt;/li&gt;
&lt;li&gt;I break up with a girl&lt;/li&gt;
&lt;li&gt;I don&amp;#39;t return my mom&amp;#39;s calls&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any successful business person, including Paul Graham, who deals with hundreds
of startups every year, would tell you that in order to achieve something
you have to take many steps that will make many people around you &lt;em&gt;unhappy&lt;/em&gt;.
You have to fire people, say &amp;quot;No&amp;quot; to them, punish them, never return their phone calls, and
rarely trust anyone. But we&amp;#39;re &amp;quot;fundamentally soft-hearted&amp;quot; and simply
can&amp;#39;t do that every day&amp;mdash;it&amp;#39;s too stressful for us. However, we also
want to be successful in business! We don&amp;#39;t want to be mathematicians, or
composers, or just Java programmers. We want to move up in business.
What do we do?&lt;/p&gt;

&lt;p&gt;Let me share the recipe I found for myself.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;The only possible way to get rid of guilt is to replace it with a greater guilt.&lt;/aside&gt;

&lt;p&gt;Obviously, we develop soft-heartedness when we grow up, mostly
under the influence of our parents. As kids we quickly learn that in
order to survive and have something to eat we must make those grown-ups
happy, or at least not disappoint them. Later on we call this
&lt;a href=&quot;https://www.forbes.com/sites/stevenberglas/2012/06/07/6-signs-you-are-suffering-from-guilt-and-probably-dont-know-it/#2920e0b67a24&quot;&gt;guilt-driven behavior&lt;/a&gt;
&amp;quot;soft-heartedness&amp;quot; and become &lt;a href=&quot;http://www.lifehack.org/articles/communication/8-problems-you-face-when-you-have-soft-heart.html&quot;&gt;proud of it&lt;/a&gt;.
But I believe it&amp;#39;s unfixable. Those who were traumatized by guilt in their childhood
will never be able to offend somebody and walk away without any negative
feelings. They are scarred forever.&lt;/p&gt;

&lt;p&gt;The only possible way to get rid of guilt is to replace it with a greater guilt.
For example, you just bought two ice cream cups and a friend asks you to give him one.
You can&amp;#39;t say &amp;quot;No&amp;quot; because you would feel guilty for making him unhappy.
But you remember that your mom told you to buy two cups and
bring both of them home. You would feel even more guilt if you made your mom
unhappy. So you say &amp;quot;No&amp;quot; to your friend and run home. Of course, you also can&amp;#39;t
eat the ice cream yourself, even though you want it&amp;mdash;you are afraid to make
your mother unhappy.&lt;/p&gt;

&lt;p&gt;The same principle may be applied to business. But instead of having a controlling
parent you can define your own &amp;quot;rules of doing business.&amp;quot; Those rules will
be stronger than any particular situation you&amp;#39;re facing at any particular moment.
For example, you can decide when and why you answer your emails and phone calls,
what &lt;a href=&quot;/2015/09/16/how-to-fire-someone-right.html&quot;&gt;should happen&lt;/a&gt;
for your employee to be discharged, how exactly you
&lt;a href=&quot;/2016/01/05/how-to-punish-employees.html&quot;&gt;punish&lt;/a&gt;
your employees, how your relationship with partners are
&lt;a href=&quot;/2016/05/17/convertible-notes.html&quot;&gt;structured&lt;/a&gt;, etc.
This document, or set of documents, will be more important for you than
any particular person or situation. You will feel much more guilt for
disobeying the rules than for making someone unhappy.&lt;/p&gt;

&lt;p&gt;At least this is what works for me. Call it self-discipline or a systematic
approach to doing business, but in reality it&amp;#39;s just a countermeasure against
guilt.&lt;/p&gt;

&lt;p&gt;To summarize, and to answer the question whether it is safe for a business person
to be nice, I would say that it is very unsafe. But &lt;em&gt;not&lt;/em&gt; being nice is obviously not
a solution either, because anyone asking this question clearly wants to be nice.
Thus, the only solution I managed to find is a personal
code of conduct, which helps me be effective and not stressed at the same time.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><summary type="html">I stumbled upon this two-year-old article
Why It&amp;#39;s Safe for Founders to Be Nice,
written by Paul Graham
(a co-founder or Y Combinator), whom I honestly respect,
and I decided to explain why I disagree. Not that I think we shouldn&amp;#39;t
be nice. Not at all. But I do think that &amp;quot;being nice&amp;quot; is not a solution for organizational,
management, marketing, sales, or business development problems. Moreover,
in most cases it is actually not safe for founders to be nice.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/08/scarecrow.jpg" /></entry><entry><title type="html">Bitcoin Is Not a Pyramid. Coinbase Is.</title><link href="http://www.yegor256.com/2017/08/15/bitcoin-pyramid.html" rel="alternate" type="text/html" title="Bitcoin Is Not a Pyramid. Coinbase&amp;nbsp;Is." /><published>2017-08-15T00:00:00+00:00</published><updated>2017-08-15T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/08/15/bitcoin-pyramid</id><content type="html" xml:base="http://www.yegor256.com/2017/08/15/bitcoin-pyramid.html">&lt;p&gt;In September 2016 I paid &lt;a href=&quot;http://www.coinbase.com&quot;&gt;Coinbase&lt;/a&gt;
$1,222 for two BTCs, $611 each. Seven months later, in April 2017,
they paid me back $2,490, which was $1,245 for each BTC. My profit before
tax was $1,268, over 100% of the investment, in just seven months.
Moreover, if I had waited until today, I would have made
$6,800 profit instead. Actually, I still have a few BTCs in my Coinbase account
and I can make that 750% profit, if I sell now. Should I? The
BTC price is
&lt;a href=&quot;https://www.cnbc.com/2017/08/12/bitcoin-vaults-to-new-record-above-4k-boosted-by-japan-and-multiplying-its-value-fourfold.html&quot;&gt;over $4,000&lt;/a&gt;.
Will it go up? Or down? What would you do?&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Two and a Half Men (2011) by Chuck Lorre&#39; src=&#39;/images/2017/08/two-and-a-half-men.jpg&#39; longdesc=&#39;#e9d79173&#39;/&gt;&lt;figcaption id=&#39;e9d79173&#39;&gt;Two and a Half Men (2011) by Chuck Lorre&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Where did that profit come from?
How can Coinbase pay me eight times more now than I paid them less than a year ago?
Where did they get that cash?&lt;/p&gt;

&lt;figure class=&#39;badge&#39;&gt;&lt;img src=&#39;http://www.yegor256.com/images/2017/08/coinbase-1.jpg&#39; style=&#39;width:200px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/figure&gt;

&lt;p&gt;Obviously you know what a &lt;a href=&quot;https://en.wikipedia.org/wiki/Ponzi_scheme&quot;&gt;Ponzi scheme&lt;/a&gt; is, right?
If you don&amp;#39;t, watch
&lt;a href=&quot;http://www.imdb.com/title/tt1811261/&quot;&gt;Episode 16&lt;/a&gt;
of the 8th Season of
&lt;a href=&quot;http://www.imdb.com/title/tt0369179/&quot;&gt;Two and a Half Men&lt;/a&gt;.
In a nutshell, I&amp;#39;m getting my investment and my profit from other people, who are
paying Coinbase for my BTCs. If there were no demand,
my entire investment would disappear and I would only have the BTC bits
and bytes in my virtual wallet. I would lose my $1,222.&lt;/p&gt;

&lt;p&gt;Some recent articles call &lt;a href=&quot;https://en.wikipedia.org/wiki/Bitcoin&quot;&gt;Bitcoin&lt;/a&gt; and other
&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptocurrency&quot;&gt;altcoins&lt;/a&gt;,
like
&lt;a href=&quot;https://en.wikipedia.org/wiki/Ethereum&quot;&gt;Etherium&lt;/a&gt; or
&lt;a href=&quot;https://en.wikipedia.org/wiki/Litecoin&quot;&gt;Litecoin&lt;/a&gt;, Ponzi schemes,
for example,
&lt;a href=&quot;https://www.theatlantic.com/technology/archive/2017/05/cryptocurrency-ponzi-schemes/528624/&quot;&gt;&lt;em&gt;The Rise of Cryptocurrency Ponzi Schemes&lt;/em&gt;&lt;/a&gt;
in The Atlantic
and
&lt;a href=&quot;https://www.ft.com/content/b5d66ed8-d1b3-11e6-b06b-680c49b4b4c0&quot;&gt;&lt;em&gt;Bitcoin passes $1,000 but only number that matters is zero&lt;/em&gt;&lt;/a&gt;
in the Financial Times.&lt;/p&gt;

&lt;p&gt;Indeed, the key attribute of a pyramid scheme is right there:
the product being sold has no value aside from the demand-generated one,
just like &lt;a href=&quot;https://www.google.com/finance?q=TWTR&quot;&gt;Twitter stocks&lt;/a&gt; (it&amp;#39;s a joke).
Should we blame Bitcoin for that? I don&amp;#39;t think so.&lt;/p&gt;

&lt;p&gt;I think that what Coinbase (and similar traders like
&lt;a href=&quot;http://www.coinmama.com&quot;&gt;CoinMama&lt;/a&gt; or &lt;a href=&quot;http://www.cex.io&quot;&gt;CEX.io&lt;/a&gt;) are doing is definitely
a pyramid and must be stopped by the government, sooner rather than later.&lt;/p&gt;

&lt;p&gt;Imagine, I start a company tomorrow. I call it YegorBase.
It will buy and sell YegorCoins, which I will also create.
The price will be $100 a piece. Some of you
may buy that, especially because it will be possible to sell them the next day,
when the price will be $101. Initially I will create some fuss to promote
the product and the trading will begin. I will make my commission.&lt;/p&gt;

&lt;p&gt;Will this be legal? I seriously doubt that &lt;a href=&quot;http://www.stripe.com&quot;&gt;Stripe&lt;/a&gt;,
for example, would approve my account if I told them my business plan.&lt;/p&gt;

&lt;p&gt;And the problem is not the YegorCoin itself&amp;mdash;there is nothing wrong in
creating your own crypto-electronic-whatever-product. The problem is that I&amp;#39;ll
be trading something that has a very questionable value, being completely
unregulated by the government. The trading of my YegorCoin,
just like shares of stocks, bonds, options, gold, and Bitcoin, must be
regulated by the people we&amp;#39;re paying our taxes to&amp;mdash;the police.&lt;/p&gt;

&lt;p&gt;You may say that Coinbase is not issuing those Bitcoins and only trading
them&amp;mdash;and that&amp;#39;s why it&amp;#39;s not a pyramid. Not true. In my YegorBase shop
I won&amp;#39;t need to issue my YegorCoins for very long. As soon as the total volume
of YegorCoins is big enough, the situation will control itself
and the price will jump and fall somehow. I will make profit on the trading
commission and the owners of YegorCoin will hope that they can manage
to sell everything before my shop gets busted.&lt;/p&gt;

&lt;p&gt;Why the police are still closing their eyes to what Coinbase is doing,
I simply can&amp;#39;t understand. Maybe because NYSE and A16Z are among their
&lt;a href=&quot;https://www.crunchbase.com/organization/coinbase/investors&quot;&gt;long list&lt;/a&gt;
of investors?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="economics" /><summary type="html">In September 2016 I paid Coinbase
$1,222 for two BTCs, $611 each. Seven months later, in April 2017,
they paid me back $2,490, which was $1,245 for each BTC. My profit before
tax was $1,268, over 100% of the investment, in just seven months.
Moreover, if I had waited until today, I would have made
$6,800 profit instead. Actually, I still have a few BTCs in my Coinbase account
and I can make that 750% profit, if I sell now. Should I? The
BTC price is
over $4,000.
Will it go up? Or down? What would you do?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/08/two-and-a-half-men.jpg" /></entry><entry><title type="html">RAII in Java</title><link href="http://www.yegor256.com/2017/08/08/raii-in-java.html" rel="alternate" type="text/html" title="RAII in Java" /><published>2017-08-08T00:00:00+00:00</published><updated>2017-08-08T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/08/08/raii-in-java</id><content type="html" xml:base="http://www.yegor256.com/2017/08/08/raii-in-java.html">&lt;p&gt;Resource Acquisition Is Initialization
(&lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_acquisition_is_initialization&quot;&gt;RAII&lt;/a&gt;)
is a design idea introduced in C++ by
&lt;a href=&quot;http://amzn.to/2uMlANB&quot;&gt;Bjarne Stroustrup&lt;/a&gt;
for exception-safe resource management.
Thanks to garbage collection Java
&lt;a href=&quot;https://stackoverflow.com/questions/477399&quot;&gt;doesn&amp;#39;t have&lt;/a&gt; this feature,
but we can implement something similar, using
&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html&quot;&gt;try-with-resources&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;At Sachem Farm (1998) by John Huddles&#39; src=&#39;/images/2017/08/at-sachem-farm.jpg&#39; longdesc=&#39;#7aef3b5b&#39;/&gt;&lt;figcaption id=&#39;7aef3b5b&#39;&gt;At Sachem Farm (1998) by John Huddles&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;The problem RAII is solving is obvious; have a look at this code
(I&amp;#39;m sure you know what
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Semaphore.html&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt;
is and how it works in Java):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Too large!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The code is rather primitive and doesn&amp;#39;t do anything useful, but you
most probably get the idea: the method &lt;code&gt;print()&lt;/code&gt;, if being called from
multiple parallel threads, will allow only five of them to print
in parallel. Sometimes it will not allow some of them to print and will
throw an exception if &lt;code&gt;x&lt;/code&gt; is bigger than &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The problem with this code is&amp;mdash;&lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_leak&quot;&gt;resource leakage&lt;/a&gt;.
Each &lt;code&gt;print()&lt;/code&gt; call
with &lt;code&gt;x&lt;/code&gt; larger than &lt;code&gt;1000&lt;/code&gt; will take one permit from the semaphore and
won&amp;#39;t return it. In five calls with exceptions
the semaphore will be empty and all other threads won&amp;#39;t print anything.&lt;/p&gt;

&lt;p&gt;What is the solution? Here it is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Too large!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We must release the permit before we throw the exception.&lt;/p&gt;

&lt;p&gt;However, there is another problem that shows up: code duplication. We release
the permit in two places. If we add more &lt;code&gt;throw&lt;/code&gt; instructions we will
also have to add more &lt;code&gt;sem.release()&lt;/code&gt; calls.&lt;/p&gt;

&lt;p&gt;A very elegant solution was introduced in C++ and is called RAII. This
is how it would look in Java:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Permit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Permit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;finalize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Permit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Too large!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;See how beautiful the code is inside method &lt;code&gt;Foo.print()&lt;/code&gt;. We just create
an instance of class &lt;code&gt;Permit&lt;/code&gt; and it immediately acquires a new permit
at the semaphore. Then we exit the method &lt;code&gt;print()&lt;/code&gt;, either by exception
or in the normal way, and the method &lt;code&gt;Permit.finalize()&lt;/code&gt; releases the permit.&lt;/p&gt;

&lt;p&gt;Elegant, isn&amp;#39;t it? Yes, it is, but it won&amp;#39;t work in Java.&lt;/p&gt;

&lt;p&gt;It won&amp;#39;t work because, unlike C++, Java doesn&amp;#39;t destroy objects when
their scope of visibility is closed. The object of class &lt;code&gt;Permit&lt;/code&gt; won&amp;#39;t
be destroyed when we exit the method &lt;code&gt;print()&lt;/code&gt;. It will be destroyed
&lt;em&gt;eventually&lt;/em&gt; but we don&amp;#39;t know when exactly. Most likely it will be
destroyed way after all permits in the semaphore got acquired and we
get blocked.&lt;/p&gt;

&lt;p&gt;There is a solution in Java too. It is not as elegant as the one from
C++, but it does work. Here it is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Permit&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Closeable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Permit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Permit&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Permit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Permit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;acquire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Too large!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pay attention to the &lt;code&gt;try&lt;/code&gt; block and to the
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt; interface
that the class &lt;code&gt;Permit&lt;/code&gt; now implements. The object &lt;code&gt;p&lt;/code&gt; will be &amp;quot;closed&amp;quot;
when the &lt;code&gt;try&lt;/code&gt; block exits. It may exit either at the end, or
by the &lt;code&gt;return&lt;/code&gt; or &lt;code&gt;throw&lt;/code&gt; statements. In either case &lt;code&gt;Permit.close()&lt;/code&gt;
will be called: this is how
&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html&quot;&gt;try-with-resources&lt;/a&gt;
works in Java.&lt;/p&gt;

&lt;p&gt;I introduced method &lt;code&gt;acquire()&lt;/code&gt; and moved &lt;code&gt;sem.acquire()&lt;/code&gt; out of the &lt;code&gt;Permit&lt;/code&gt; constructor because I
&lt;a href=&quot;/2015/05/07/ctors-must-be-code-free.html&quot;&gt;believe&lt;/a&gt;
that constructors must be code-free.&lt;/p&gt;

&lt;p&gt;To summarize, RAII is a perfect design &lt;del&gt;pattern&lt;/del&gt; approach when you
deal with resources that may &lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_leak&quot;&gt;leak&lt;/a&gt;.
Even though Java doesn&amp;#39;t have it out of the box we can implement it
via &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html&quot;&gt;try-with-resources&lt;/a&gt; and
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><category term="java" /><summary type="html">Resource Acquisition Is Initialization
(RAII)
is a design idea introduced in C++ by
Bjarne Stroustrup
for exception-safe resource management.
Thanks to garbage collection Java
doesn&amp;#39;t have this feature,
but we can implement something similar, using
try-with-resources.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/08/at-sachem-farm.jpg" /></entry><entry><title type="html">How to Manage a Manager?</title><link href="http://www.yegor256.com/2017/08/01/how-to-manage-a-manager.html" rel="alternate" type="text/html" title="How to Manage a Manager?" /><published>2017-08-01T00:00:00+00:00</published><updated>2017-08-01T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/08/01/how-to-manage-a-manager</id><content type="html" xml:base="http://www.yegor256.com/2017/08/01/how-to-manage-a-manager.html">&lt;p&gt;No secret, &lt;del&gt;we&lt;/del&gt; you all have managers. Some of them are
great, while many are simply idiots. What do you do if you happen
to have a boss that fits perfectly into this dominating category?
Quit and try to find a better place? This may sound like good
advice, but you know as well as I do that a new boss most likely won&amp;#39;t
be any better. Don&amp;#39;t quit. Stay. Manage the manager. Most of them are
manageable.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;The Intouchables (2011) by  Olivier Nakache&#39; src=&#39;/images/2017/07/intouchables.jpg&#39; longdesc=&#39;#ae07a826&#39;/&gt;&lt;figcaption id=&#39;ae07a826&#39;&gt;The Intouchables (2011) by  Olivier Nakache&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;First of all, remember your goal: do &lt;em&gt;nothing&lt;/em&gt; and &lt;em&gt;get paid&lt;/em&gt;. It&amp;#39;s hardly
achievable to its full extent, but you can get very close.
Doing something useful two hours a week and collecting a paycheck
for forty hours is what a professional engineer must aim for. The other
38 hours you will spend on your own projects, your open source
ideas, your education, your dreams.&lt;/p&gt;

&lt;p&gt;The biggest problem on the road to this success is the manager, who
is hired exactly to prevent this from happening. Managers use multiple
instruments to catch you and force you to give them your &lt;em&gt;time&lt;/em&gt;. Here
is what I did in these situations against a really annoying
manager I once had:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tasks&lt;/strong&gt;.
Believe it or not he would assign some coding tasks to me.
I would do them very slowly or not do them at all. With a serious
shortage of programmers on the market and my relatively good profile
he wasn&amp;#39;t able to fire me. So he had to put up with the fact that I
simply didn&amp;#39;t write any code, no matter how many tasks were assigned. Very
soon he gave up this idea and stopped giving me anything. I basically
created an image of a very skilled engineer who didn&amp;#39;t write code. No matter
how much you asked.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Guilt is a very powerful management instrument.&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Meetings&lt;/strong&gt;.
At the beginning he was calling me to all possible meetings,
because he thought that I was very smart. I was even smarter than he thought:
in each meeting I expressed my opinions in a very aggressive and conflict-provoking
way. And I always had enough opinions to express. Very soon he stopped
calling me to those hours-long meetings because I was simply ruining them,
making strong points, and never &amp;quot;being nice.&amp;quot; Then, when he stopped
calling, I pretended to be offended, as if I really wanted to
contribute and yet they were all ignoring me. Guilt is a very powerful management
instrument, you know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reports&lt;/strong&gt;.
From time to time he was interested to know what was going on, mostly
by email or in Slack chat. I always had a very long list of things I was
&amp;quot;working on,&amp;quot; which were absolutely cryptic to him. He was not a programmer
and didn&amp;#39;t have enough courage to verify my claims. Any time he asked
what I was busy with, I sent him something like
&amp;quot;HDFS reconfig for Docker image&amp;quot; or &amp;quot;Integration tests for JAX-RS endpoints.&amp;quot;
He was happy to see that I was very busy and he left me alone for another
week or two. Actually, I would recommend you send such reports to your managers
pro-actively, before they even ask. This will make them feel even more comfortable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Morning Stand-ups&lt;/strong&gt;.
These are annoying and very dangerous, because
other programmers may catch your lies about &amp;quot;HDFS and Docker.&amp;quot; The best
defense is offense: I always acted very interested in what other
people were working on. I always asked additional questions too, making
them afraid of me. It worked. They never bothered me with their suspicions.
Try not to avoid the stand-up meetings&amp;mdash;if a manager sees you there
they assume that you&amp;#39;re actually working.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advice&lt;/strong&gt;.
He would ask me for technical advice, to help him make his decisions. This is
rather risky, because eventually you have to be responsible for the
advice you give, especially if you are a lead developer or an architect.
The best way to avoid this risk is to transfer responsibility to someone else.
I was always trying to ask somebody in the team to help me: to analyze the
problem and create a short email/report with pros and cons. Junior programmers
are usually very interested in doing such a favor for someone more senior.
Then, I just forwarded that email to the manager. Very soon he stopped
coming to me for the analysis and asked the junior guys directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emails&lt;/strong&gt;.
Long email threads are very annoying especially in big teams. I never read
them. You should not read them either, if you value your time. However,
you can&amp;#39;t just ignore them because everybody will feel that you are either
lazy or a sociopath. Neither of which is in your favor. What I always did
was pick up on any message from the thread and reply to it, with a question.
It&amp;#39;s called &lt;em&gt;trolling&lt;/em&gt;. You provoke others to keep the conversation going,
even though you&amp;#39;re not interested in it at all. A few emails like that a day and
people will think that you&amp;#39;re on top of everything in the team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coaching&lt;/strong&gt;.
My manager would ask me every now and then to train new programmers and to help them out. This
too was very risky, since the new guys usually decided that I was their friend and
would talk to me about everything, consuming my time. To prevent this
from happening I would always try to introduce them to somebody else&amp;mdash;their
new friend. Everybody, if they don&amp;#39;t understand the consequences,
is happy to talk to junior programmers and to patronize them. I just had to forward
those juniors immediately to the right person.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Personal meetings&lt;/strong&gt;.
This was the most annoying part of all: face-to-face meetings with the manager. He
asked me how happy I was in the team, what my plans were, what problems
I saw, etc. I was not able to say &amp;quot;Well, I&amp;#39;m happy that you guys are
still paying me and my biggest problem is that you annoy me far too often.&amp;quot;
Instead I had to invent plans, ideas, problems, and things that I wasn&amp;#39;t happy about.
I always kept a list of such things ready, in case a manager ever called
me for a meeting.&lt;/p&gt;

&lt;p&gt;That was my strategy. How do you manage your managers?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><summary type="html">No secret, we you all have managers. Some of them are
great, while many are simply idiots. What do you do if you happen
to have a boss that fits perfectly into this dominating category?
Quit and try to find a better place? This may sound like good
advice, but you know as well as I do that a new boss most likely won&amp;#39;t
be any better. Don&amp;#39;t quit. Stay. Manage the manager. Most of them are
manageable.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/07/intouchables.jpg" /></entry></feed>
