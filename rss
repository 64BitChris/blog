<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator><link href="http://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="http://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2016-07-12T23:06:33+00:00</updated><id>http://www.yegor256.com/</id><title>Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor@teamed.io</email></author><entry><title>Twelve Mistakes in Agile Manifesto</title><link href="http://www.yegor256.com/2016/07/11/mistakes-in-agile-manifesto.html" rel="alternate" type="text/html" title="Twelve Mistakes in Agile Manifesto" /><published>2016-07-11T00:00:00+00:00</published><updated>2016-07-11T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/07/11/mistakes-in-agile-manifesto</id><content type="html" xml:base="http://www.yegor256.com/2016/07/11/mistakes-in-agile-manifesto.html">&lt;p&gt;Nowadays, &lt;a href=&quot;http://www.agilemanifesto.org/&quot;&gt;Agile Manifesto&lt;/a&gt; is a Bible of
numerous software teams. It contains
&lt;a href=&quot;http://agilemanifesto.org/principles.html&quot;&gt;12 principles&lt;/a&gt; which
 show us how software development should be organized.
These principles were invented in 2001.
Generally, I like and agree with all of them. However, in practice, most software teams
misunderstand them. Consequently, here is a summary of what&amp;#39;s going on and my
interpretation of each principle.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F07%2Fhail-caesar.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Hail, Caesar! (2016) by Coen Brothers&#39;/&gt;&lt;figcaption&gt;Hail, Caesar! (2016) by Coen Brothers&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Principle #1&lt;/strong&gt;:
&amp;quot;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&amp;quot;&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;If the customer is not satisfied, we find another customer&lt;/aside&gt;

&lt;p&gt;By focusing on &amp;quot;satisfy the customer&amp;quot;, Agile adepts totally forget about
the &amp;quot;through&amp;quot; part. They think that a &lt;a href=&quot;/2015/01/26/happy-boss-false-objective.html&quot;&gt;happy customer&lt;/a&gt;
is their true objective, while &amp;quot;continuous delivery&amp;quot; is something that obviously
helps, though not crucially. However, this is quite the opposite &amp;mdash; the customer
will be satisfied &lt;strong&gt;if&lt;/strong&gt; the software is perfectly created and delivered. If the
customer is not satisfied, we find another customer &amp;mdash; that&amp;#39;s the
true spirit a professional software team should adhere to. I believe that&amp;#39;s what
 the Manifesto means. We make sure that our process is
&amp;quot;early and continuous&amp;quot;, which will result to customer satisfaction. We focus on improving
our process, not satisfying the customer. Satisfaction is the consequence, not
the primary objective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #2&lt;/strong&gt;:
&amp;quot;Welcome changing requirements, even late in development. Agile processes harness change for the customer&amp;#39;s competitive advantage.&amp;quot;&lt;/p&gt;

&lt;p&gt;Most Agile teams understand the word &amp;quot;welcome&amp;quot; here as a permission to forget
about any &lt;a href=&quot;/2015/11/10/ten-mistakes-in-specs.html&quot;&gt;requirements&lt;/a&gt;
management at all. What is the easiest way to welcome
change? Obviously, just get rid of any requirement documents!
In this case, any change will be welcome, since it won&amp;#39;t affect anything.
There simply won&amp;#39;t be anything to affect. But this is not what the Manifesto
means! This principle means that our requirements management process is so
&lt;strong&gt;powerful&lt;/strong&gt; that it can accept change at any moment. However, it&amp;#39;s rather difficult to
achieve, if requirements are actually documented.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #3&lt;/strong&gt;:
&amp;quot;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&amp;quot;&lt;/p&gt;

&lt;p&gt;This terrific rule is usually understood as an order for the entire team. The
team has to frequently deliver, while programmers are free to deliver almost
nothing and who knows when. I think the Manifesto here is emphasizing on
both individual and group responsibilities to frequently deliver. I also think
that this frequency should be way higher than just a &amp;quot;couple of weeks&amp;quot;. Today, with
modern technologies and instruments, we can deliver way faster &amp;mdash; several
times a day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #4&lt;/strong&gt;:
&amp;quot;Business people and developers must work together daily throughout the project.&amp;quot;&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Working together means quicker turnarounds in communication not lack or roles and responsibilites&lt;/aside&gt;

&lt;p&gt;Working together doesn&amp;#39;t mean working without clearly defined
rules and processes. However, most teams understand this principle as
a legalization of chaos. They think that since we work together, we don&amp;#39;t need to define roles
any more, we should not document &lt;a href=&quot;/2015/11/10/ten-mistakes-in-specs.html&quot;&gt;requirements&lt;/a&gt;,
we shouldn&amp;#39;t care about responsibilities. Ultimately in the end, we neither know who is
doing what nor the team&amp;#39;s structure. That&amp;#39;s not what the Manifesto
is talking about! &amp;quot;Working together&amp;quot; means quicker turnarounds in communication and
shorter response cycles. It definitely doesn&amp;#39;t mean lack of roles and responsibilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #5&lt;/strong&gt;:
&amp;quot;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&amp;quot;&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Trust doesn&amp;#39;t mean lack of control&lt;/aside&gt;

&lt;p&gt;Trust is a great word and concept, but it doesn&amp;#39;t replace another equally great
word &amp;mdash; control. Most Agile teams think that trust means
exactly that &amp;mdash; complete lack of any validation, verification, responsibility,
and control. &amp;quot;We trust our programmers to write perfect codes&amp;quot; &amp;mdash;
I&amp;#39;ve heard that countless times which is simply wrong. This principle means something completely different.
It means that when clearly defined tasks are assigned to their
performers, we fully delegate responsibilities to them. We
&lt;a href=&quot;/2014/09/24/why-monetary-awards-dont-work.html&quot;&gt;motivate&lt;/a&gt;
them to be fully responsible for the end result. However, we
&lt;a href=&quot;/2015/02/16/it-is-not-a-school.html&quot;&gt;don&amp;#39;t help&lt;/a&gt; them.
Instead, we trust them as self-sufficient individuals, capable
of completing assigned tasks on their own.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #6&lt;/strong&gt;:
&amp;quot;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&amp;quot;&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Face-to-face doesn&amp;#39;t mean at the same office, especially now&lt;/aside&gt;

&lt;p&gt;Face-to-face doesn&amp;#39;t mean sitting in the same office. The Manifesto doesn&amp;#39;t say
anything about co-located or distributed teams. It&amp;#39;s obvious that in modern software projects,
virtual communications (over video calls) are way more effective than
staying together in the same country, same city, same office, and same room.
Therefore, most Agile adepts still promote on-site development style, using
Agile Manifesto as proof. That&amp;#39;s a mistake; face-to-face means something
totally different from what it meant 15 years ago, when the Manifesto was written.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #7&lt;/strong&gt;:
&amp;quot;Working software is the primary measure of progress.&amp;quot;&lt;/p&gt;

&lt;p&gt;This doesn&amp;#39;t mean that we should not measure anything else. Of course, the
working software is the &lt;strong&gt;primary&lt;/strong&gt; measure, but there are many other
measures, which we can and must use. For example, the amount of features
documented, implemented and delivered;
or the amount of lines of code added to the project (don&amp;#39;t smile, &lt;a href=&quot;/2014/11/14/hits-of-code.html&quot;&gt;read&lt;/a&gt;);
or the amount of &lt;a href=&quot;/2015/09/10/testing-exit-criteria.html&quot;&gt;bugs found&lt;/a&gt;;
or the amounts of &lt;a href=&quot;/2016/01/19/how-expensive-is-outsourcing.html&quot;&gt;dollars spent&lt;/a&gt;.
There are many other metrics. We can use many of them. However, a typical
mistake many Agile teams are doing is just ignoring them all. They say
&amp;quot;we measure only the end result&amp;quot;. That&amp;#39;s not what the Manifesto
is suggesting to do though.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #8&lt;/strong&gt;:
&amp;quot;Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.&amp;quot;&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;We must remember that any project is first of all a money burning machine&lt;/aside&gt;

&lt;p&gt;This doesn&amp;#39;t mean that we should indefinitely &lt;a href=&quot;/2015/06/02/how-to-estimate-software-cost.html&quot;&gt;burn&lt;/a&gt;
customers&amp;#39; money. Yes, we
should be developing at some given speed, but we should always remember
whose money we&amp;#39;re spending &amp;mdash; customers&amp;#39; money. The Manifesto doesn&amp;#39;t say anything
about the cost of development and that&amp;#39;s probably because it was written by
those who make money (programmers), not those who spend it (customers). We must therefore
remember that any project is first of all a money burning machine. That&amp;#39;s why
the team must always measure its
&lt;a href=&quot;/2016/01/19/how-expensive-is-outsourcing.html&quot;&gt;burn rate&lt;/a&gt;
and make sure it&amp;#39;s aligned with
the amount of business value the team delivers. Just being a
&lt;a href=&quot;/2015/03/02/team-morale-myths-and-reality.html&quot;&gt;happy team&lt;/a&gt;
is not what the Manifesto suggests, but that&amp;#39;s exactly how many understand this principle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #9&lt;/strong&gt;:
&amp;quot;Continuous attention to technical excellence and good design enhances agility.&amp;quot;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s a perfect principle that says so much and doesn&amp;#39;t say anything at
the same time. What exactly is &amp;quot;attention&amp;quot;? I can explain. It means
&lt;a href=&quot;/2015/10/13/competition-without-rules.html&quot;&gt;rules and policies&lt;/a&gt;.
First of all, any policy means &lt;a href=&quot;/2016/01/05/how-to-punish-employees.html&quot;&gt;punishment&lt;/a&gt; to those
who violate rules. Thus, if an Agile team really means continuous
attention to technical excellence, it must have a &lt;a href=&quot;/2014/08/13/strict-code-quality-control.html&quot;&gt;quality policy&lt;/a&gt;.
That policy must clearly define which design is good and which is bad, which piece
of Java code is excellent, which is ugly, etc. Additionally, the policy must say
what happens to those who &lt;a href=&quot;/2015/11/24/imprisonment-for-irresponsible-coding.html&quot;&gt;violate&lt;/a&gt;
the principles of excellence. However, most Agile
teams understand &amp;quot;quality&amp;quot; as a great flag to hang on the wall, but
get scared when I ask, &amp;quot;what happens if someone delivers low quality?&amp;quot;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #10&lt;/strong&gt;:
&amp;quot;Simplicity &amp;mdash; the art of maximizing the amount of work not done &amp;mdash; is essential.&amp;quot;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s a great rule which most Agile teams don&amp;#39;t follow at all. This principle
means that our tasks are small and simple enough to make sure they are either
doable or cancellable. Huge tasks are the biggest threat to manageability of
any team, be it Agile or not. This principle encourages us to give programmers
small tasks, which they can easily be completed. However, most of Agile adepts
simplicity being equal to stupidity. They are not equal. A simple task doesn&amp;#39;t
mean a stupid or non-important tasks. A simple task is a clearly defined, small,
and doable work order.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #11&lt;/strong&gt;:
&amp;quot;The best architectures, requirements, and designs emerge from self-organizing teams.&amp;quot;&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Self-organized doesn&amp;#39;t mean un-organized&lt;/aside&gt;

&lt;p&gt;Self-organized doesn&amp;#39;t mean un-organized. This rule is often translated
as a legalization of &lt;strong&gt;anarchy&lt;/strong&gt;. We don&amp;#39;t need any project managers,
processes, discipline, rules, or policies &amp;mdash; we&amp;#39;ve got
&lt;a href=&quot;/2016/02/18/holacracy-autocracy.html&quot;&gt;holacracy&lt;/a&gt; instead!
We also don&amp;#39;t need a software architect &amp;mdash; our programmers can make
all technical decisions at regular &lt;a href=&quot;/2015/07/13/meetings-are-legalized-robbery.html&quot;&gt;meetings&lt;/a&gt;!
Furthermore, we don&amp;#39;t want our programmers
to be individually responsible for anything &amp;mdash; they are always together
in all risks and issues. Stop that nonsense! This is not what the Manifesto means.
A self-organizing team is a team that doesn&amp;#39;t need any supervision from the outside;
a team that has clearly defined roles from the inside;
a team with a perfect inner discipline;
a team with professional &lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;management&lt;/a&gt;.
Not with the lack of all that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principle #12&lt;/strong&gt;:
&amp;quot;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&amp;quot;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s a great principle which is translated into so-called retrospective
meetings. They work just fine as long as decisions
make the team better. Unfortunately, in most cases, programmers in Agile teams are
trying to &lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;survive&lt;/a&gt;,
instead of making their teams more effective. Even though the
principle says that the team has to become more effective, those retrospective
meetings help programmers to become more effective (read &amp;quot;more secure&amp;quot;) in
the team. That&amp;#39;s only natural for people, but leads to the overall degradation
of the team. It&amp;#39;s well known that the best team is the one that is capable of
quickly and inevitably &lt;a href=&quot;/2015/09/16/how-to-fire-someone-right.html&quot;&gt;rejecting&lt;/a&gt;
bad elements. Does your team do that effectively?
Do retrospective meetings help in that? I doubt it. Therefore, I believe that
what the Manifesto means here is not the meetings. It means that the team must have
an effective mechanism of self-regulation and self-improvement. Additionally, retrospective
meetings simply can&amp;#39;t be that mechanism because they prevent the team from making
difficult disciplinary decisions.&lt;/p&gt;</content><category term="management" /><category term="agile" /><summary>Nowadays, Agile Manifesto is a Bible of
numerous software teams. It contains
12 principles which
 show us how software development should be organized.
These principles were invented in 2001.
Generally, I like and agree with all of them. However, in practice, most software teams
misunderstand them. Consequently, here is a summary of what&amp;#39;s going on and my
interpretation of each principle.</summary></entry><entry><title>Key Roles in a Software Project</title><link href="http://www.yegor256.com/2016/07/10/software-project-roles.html" rel="alternate" type="text/html" title="Key Roles in a Software Project" /><published>2016-07-10T00:00:00+00:00</published><updated>2016-07-10T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/07/10/software-project-roles</id><content type="html" xml:base="http://www.yegor256.com/2016/07/10/software-project-roles.html">&lt;p&gt;I believe that several roles should be present in a majority of
software projects. Managed by
&lt;a href=&quot;http://www.teamed.io&quot;&gt;Teamed.io&lt;/a&gt; according to the principles of
&lt;a href=&quot;http://www.xdsd.org&quot;&gt;XDSD&lt;/a&gt;, we&amp;#39;ve got all of them in our projects. However, beware that in other management
methodologies, these roles may have different meanings. This blog post
is mostly for people who work with us, either as clients or freelancers.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F07%2F12-angry-men.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;12 Angry Men (1957) by Sidney Lumet&#39;/&gt;&lt;figcaption&gt;12 Angry Men (1957) by Sidney Lumet&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;There are just a few roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Project Manager&lt;/strong&gt; (&lt;code&gt;PM&lt;/code&gt;)
is responsible for keeping the project &lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;under control&lt;/a&gt;.
The PM reports to the head of our &lt;a href=&quot;https://en.wikipedia.org/wiki/Project_management_office&quot;&gt;PMO&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Product Owner&lt;/strong&gt; (&lt;code&gt;PO&lt;/code&gt;)
is a representative of the sponsor.
The PO provides product requirements.
The PO submits bugs and expresses any concerns or questions relating to them.
Usually, the PO is a very technical person
who knows how the product works and is capable of understanding the source code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Software Architect&lt;/strong&gt; (&lt;code&gt;ARC&lt;/code&gt;)
is responsible for the entire technical solution.
The ARC is &lt;a href=&quot;/2014/10/12/who-is-software-architect.html&quot;&gt;blamed&lt;/a&gt; for all technical problems.
The ARC approves all pull requests before we &lt;a href=&quot;/2014/07/21/read-only-master-branch.html&quot;&gt;can merge&lt;/a&gt; them.
The ARC is the main point of contact in the project for the PO.
The ARC makes all technical &lt;a href=&quot;/2015/06/29/simple-diagrams.html&quot;&gt;decisions&lt;/a&gt;.
The ARC &lt;a href=&quot;/2015/05/11/software-architect-responsibilities.html&quot;&gt;reports&lt;/a&gt; to the PM.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Developer&lt;/strong&gt; (&lt;code&gt;DEV&lt;/code&gt;)
is a programmer and is &lt;a href=&quot;/2014/04/13/no-obligations-principle.html&quot;&gt;responsible&lt;/a&gt;
for &lt;a href=&quot;/2014/11/24/principles-of-bug-tracking.html&quot;&gt;closing bugs&lt;/a&gt;.
The DEV reports to the PM.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Requirements Analyst&lt;/strong&gt; (&lt;code&gt;REQ&lt;/code&gt;)
is responsible for the validation of the product.
The REQ solicits &lt;a href=&quot;/2015/11/10/ten-mistakes-in-specs.html&quot;&gt;requirements&lt;/a&gt; from the PO.
The REQ demonstrates the product to the PO.
The REQ submits new bugs when validation fails and the product needs changes.
The REQ reports to the PM.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Quality Assurance&lt;/strong&gt; (&lt;code&gt;QA&lt;/code&gt;)
oversees the correctness of our process.
The QA approves each closed task before it&amp;#39;s officially closed by the PM.
The QA ensures that our process complies to &lt;a href=&quot;http://at.teamed.io/policy.html&quot;&gt;our policy&lt;/a&gt;.
The QA reports to the PM.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides all that, any role is &lt;a href=&quot;/2014/04/13/bugs-are-welcome.html&quot;&gt;encouraged&lt;/a&gt;
to submit bugs when they find them.&lt;/p&gt;</content><category term="management" /><summary>I believe that several roles should be present in a majority of
software projects. Managed by
Teamed.io according to the principles of
XDSD, we&amp;#39;ve got all of them in our projects. However, beware that in other management
methodologies, these roles may have different meanings. This blog post
is mostly for people who work with us, either as clients or freelancers.</summary></entry><entry><title>Data Transfer Object Is a Shame</title><link href="http://www.yegor256.com/2016/07/06/data-transfer-object.html" rel="alternate" type="text/html" title="Data Transfer Object Is a Shame" /><published>2016-07-06T00:00:00+00:00</published><updated>2016-07-06T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/07/06/data-transfer-object</id><content type="html" xml:base="http://www.yegor256.com/2016/07/06/data-transfer-object.html">&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Data_transfer_object&quot;&gt;DTO&lt;/a&gt;,
as far as I understand it, is a cornerstone of the ORM design pattern,
which I &lt;a href=&quot;/2014/12/01/orm-offensive-anti-pattern.html&quot;&gt;simply adore&lt;/a&gt;.
But let&amp;#39;s skip to the point: DTO is just a shame, and the man who invented
it is just wrong. There is no excuse for what he has done.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F07%2Fbefore-the-devil-knows-you-are-dead.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Before the Devil Knows You&amp;amp;apos;re Dead (2007) by Sidney Lumet&#39;/&gt;&lt;figcaption&gt;Before the Devil Knows You&amp;#39;re Dead (2007) by Sidney Lumet&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;By the way, his name, to my knowledge, was
&lt;a href=&quot;http://martinfowler.com/bliki/LocalDTO.html&quot;&gt;Martin Fowler&lt;/a&gt;. Maybe he
was not the sole inventor of DTO, but he made it legal and recommended
its use. With all due respect, he was just wrong.&lt;/p&gt;

&lt;p&gt;The key idea of object-oriented programming is to hide data
behind objects. This idea has a name:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Encapsulation_%28computer_programming%29&quot;&gt;encapsulation&lt;/a&gt;.
In OOP, data
must not be visible. &lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;Objects&lt;/a&gt;
must only have access to the data they
encapsulate and never to the data encapsulated by other objects. There
can be no arguing about this principle &amp;mdash; it is what OOP is all about.&lt;/p&gt;

&lt;p&gt;However, DTO runs completely against that principle.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s see a practical example. Say that this is a service that fetches
a JSON document from some RESTful API and returns a DTO, which we can then
store in the database:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadBookById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;saveNewBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I guess this is what will happen inside the &lt;code&gt;loadBookById()&lt;/code&gt; method:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loadBookById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* Load it from RESTful API */&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setISBN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;isbn&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAuthor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Am I right? I bet I am. It already looks disgusting to me. Anyway, let&amp;#39;s
continue. This is what will most likely happen in the &lt;code&gt;saveNewBook()&lt;/code&gt; method
(I&amp;#39;m using pure JDBC):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;saveNewBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Statement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prepareStatement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;INSERT INTO book VALUES (?, ?, ?)&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getISBN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAuthor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This &lt;code&gt;Book&lt;/code&gt; is a classic example of a data transfer object design pattern.
All it does is transfer
data between two pieces of code, two procedures. The object &lt;code&gt;book&lt;/code&gt; is pretty
dumb. All it knows how to do is ... nothing. It doesn&amp;#39;t do anything. It is
actually not an object at all but rather a passive and anemic data structure.&lt;/p&gt;

&lt;p&gt;What is the right design? There are a few. For example, this one looks
good to me:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bookById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is what happens in &lt;code&gt;bookById()&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bookById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* RESTful API access point */&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is what happens in &lt;code&gt;Book.save()&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* Load it from RESTful API */&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;isbn&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What happens if there are many more parameters of the book in JSON that won&amp;#39;t
fit nicely as parameters into a single &lt;code&gt;createBook()&lt;/code&gt; method? How about this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withISBN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;isbn&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withAuthor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are many other options. But the main point is that the data
&lt;strong&gt;never&lt;/strong&gt; escapes the object &lt;code&gt;book&lt;/code&gt;. Once the object is instantiated, the
data is not visible or accessible by anyone else. We may only
ask our object to save itself or to
&lt;a href=&quot;/2016/04/05/printers-instead-of-getters.html&quot;&gt;print&lt;/a&gt;
itself to some media, but we
will never &lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;get&lt;/a&gt;
any data from it.&lt;/p&gt;

&lt;p&gt;The very idea of DTO is wrong because it turns object-oriented code
into procedural code. We have procedures that manipulate data, and DTO is just
a box for that data. Don&amp;#39;t think that way, and don&amp;#39;t do that.&lt;/p&gt;</content><category term="oop" /><summary>DTO,
as far as I understand it, is a cornerstone of the ORM design pattern,
which I simply adore.
But let&amp;#39;s skip to the point: DTO is just a shame, and the man who invented
it is just wrong. There is no excuse for what he has done.</summary></entry><entry><title>Singletons Must Die</title><link href="http://www.yegor256.com/2016/06/27/singletons-must-die.html" rel="alternate" type="text/html" title="Singletons Must Die" /><published>2016-06-27T00:00:00+00:00</published><updated>2016-06-27T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/06/27/singletons-must-die</id><content type="html" xml:base="http://www.yegor256.com/2016/06/27/singletons-must-die.html">&lt;p&gt;I think it&amp;#39;s too obvious to say that a singleton is an anti-pattern as
there are tons of articles about that (singleton being an anti-pattern).
However, more often than not, the question
is how to define global things without a singleton; and the answer to that is not
obvious for many of us. There are several examples: a database connection
pool, a repository, a configuration map, etc. They all naturally seem to
be &amp;quot;global&amp;quot;; but what do we do with them?&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F06%2Fperdita-durango.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Perdita Durango (1997) by Álex de la Iglesia&#39;/&gt;&lt;figcaption&gt;Perdita Durango (1997) by Álex de la Iglesia&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I assume you already know what a singleton is and why it&amp;#39;s an anti-pattern.
If not, I recommend you read this StackOverflow thread:
&lt;a href=&quot;http://stackoverflow.com/questions/137975/what-is-so-bad-about-singletons&quot;&gt;What is so bad about singletons?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we agree it&amp;#39;s a bad deal, what do we do if we need to, let&amp;#39;s say,
have access to a database connection pool in many different places within the
application? We simply need something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INSTANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// create a connection pool&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Connection&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Get new connection from the pool&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// and return&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Later in at, say, the JAX-RS REST method, we need to retrieve something
from the database:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@GET&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Connection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;INSTANCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JdbcSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;SELECT text FROM table&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SingleOutcome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In case you&amp;#39;re not familiar with JAX-RS, it&amp;#39;s a simple MVC architecture,
and this &lt;code&gt;text()&lt;/code&gt; method is a &amp;quot;controller&amp;quot;. Additionally, I&amp;#39;m using
&lt;a href=&quot;http://jdbc.jcabi.com/apidocs-0.16/com/jcabi/jdbc/JdbcSession.html&quot;&gt;&lt;code&gt;SqlSession&lt;/code&gt;&lt;/a&gt;,
a simple JDBC wrapper from &lt;a href=&quot;http://jdbc.jcabi.com&quot;&gt;jcabi-jdbc&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We need that &lt;code&gt;Database.INSTANCE&lt;/code&gt; to be a singleton, right? We need it to
be globally available so that &lt;em&gt;any&lt;/em&gt; MVC controller can have direct
access to it. Since we all understand and agree that a singleton is an evil
thing, what do we replace it with?&lt;/p&gt;

&lt;p&gt;A &lt;a href=&quot;/2014/10/03/di-containers-are-evil.html&quot;&gt;dependency injection&lt;/a&gt;
is the answer.&lt;/p&gt;

&lt;p&gt;We need to make this database connection pool dependency of the controller
and ensure it&amp;#39;s provided through a constructor. However, in this particular
case, for JAX-RS, we can&amp;#39;t do it through a constructor thanks to its
ugly architecture. But we can create a &lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/servlet/ServletContextListener.html&quot;&gt;&lt;code&gt;ServletContextListener&lt;/code&gt;&lt;/a&gt;,
instantiate a &lt;code&gt;Database&lt;/code&gt; in its &lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/servlet/ServletContextListener.html#contextInitialized-javax.servlet.ServletContextEvent-&quot;&gt;&lt;code&gt;contextInitialized()&lt;/code&gt;&lt;/a&gt; method,
and add that instance as an attribute of
&lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html&quot;&gt;&lt;code&gt;servletContext&lt;/code&gt;&lt;/a&gt;. Then, inside
the controller, we retrieve the servlet context by adding the
&lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/ws/rs/core/Context.html&quot;&gt;&lt;code&gt;javax.ws.rs.core.Context&lt;/code&gt;&lt;/a&gt;
annotation to a setter and using
&lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html#getAttribute-java.lang.String-&quot;&gt;&lt;code&gt;getAttribute()&lt;/code&gt;&lt;/a&gt;
on it. This is absolutely terrible and procedural, but it&amp;#39;s better
than a singleton.&lt;/p&gt;

&lt;p&gt;A proper object-oriented design would pass an instance of &lt;code&gt;Database&lt;/code&gt;
to &lt;em&gt;all&lt;/em&gt; objects that may need it through their constructors.&lt;/p&gt;

&lt;p&gt;Nonetheless, what do we do if there are many dependencies? Do we make a 10-argument
constructor? No, we don&amp;#39;t. If our objects really need 10 dependencies to do
their work, we need to break them down into smaller ones.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s it. Forget about singletons; never use them. Turn them into dependencies
and pass them from object to object through the operator &lt;code&gt;new&lt;/code&gt;.&lt;/p&gt;</content><category term="oop" /><summary>I think it&amp;#39;s too obvious to say that a singleton is an anti-pattern as
there are tons of articles about that (singleton being an anti-pattern).
However, more often than not, the question
is how to define global things without a singleton; and the answer to that is not
obvious for many of us. There are several examples: a database connection
pool, a repository, a configuration map, etc. They all naturally seem to
be &amp;quot;global&amp;quot;; but what do we do with them?</summary></entry><entry><title>How to Hire a Programmer</title><link href="http://www.yegor256.com/2016/06/21/how-to-hire-programmer.html" rel="alternate" type="text/html" title="How to Hire a Programmer" /><published>2016-06-21T00:00:00+00:00</published><updated>2016-06-21T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/06/21/how-to-hire-programmer</id><content type="html" xml:base="http://www.yegor256.com/2016/06/21/how-to-hire-programmer.html">&lt;p&gt;I get asked this question very often: Where and how do you find
and hire a good programmer? Since I&amp;#39;m a programmer and I &lt;a href=&quot;http://www.teamed.io&quot;&gt;manage&lt;/a&gt;
software projects, I&amp;#39;m supposed to know the tricks. I do, of course; there
are many of them, but the list below succinctly summarizes the most important ones.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F06%2Fdont-be-a-menace-to-south-central-while-drinking-your-juice-in-the-hood.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Don&amp;amp;apos;t Be a Menace to South Central While Drinking Your Juice in the Hood (1996) by Paris Barclay&#39;/&gt;&lt;figcaption&gt;Don&amp;#39;t Be a Menace to South Central While Drinking Your Juice in the Hood (1996) by Paris Barclay&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I&amp;#39;ll be referring to &amp;quot;him&amp;quot;, but these recommendations apply equally to both female and male
&lt;del&gt;slaves&lt;/del&gt; software developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ask a Friend&lt;/strong&gt;.
The best way to find talent is through a reference. Who knows the software
market better than your high school classmate who bought a WordPress website
last year, right? He will definitely recommend a good programmer to you.
Recommendations are the most effective way of finding contractors. First,
you don&amp;#39;t need to worry about screening and testing. Second, you&amp;#39;ll have
a very good explanation for why your project failed &amp;mdash; because your
friend let you down with a bad recommendation. Win-win.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hire Only Locals&lt;/strong&gt;.
Don&amp;#39;t even think about a remote programmer &amp;mdash; remote projects always fail.
&lt;a href=&quot;/2015/10/27/outsourcing-doesnt-work.html&quot;&gt;Always&lt;/a&gt;.
He will work in a different time zone, you will always have cultural
clashes, and his Russian accent will be annoying. You simply won&amp;#39;t
be able to meet him every second day and
&lt;a href=&quot;/2015/05/21/avoid-software-outsourcing-disaster.html&quot;&gt;whine&lt;/a&gt;
about your project being
too expensive, too slow, and too frustrating. Hire only locals &amp;mdash; they
are much easier to manage and
&lt;a href=&quot;/2016/01/05/how-to-punish-employees.html&quot;&gt;punish&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;#39;t Offend With a Lack of Trust&lt;/strong&gt;.
A talented professional programmer will be offended if you ask him
to pass a test or prove some of his skills. That will demonstrate that you
don&amp;#39;t trust him. And if you don&amp;#39;t trust him, you simply should not work together.
Trust is the most important thing in any project. Also, don&amp;#39;t ask how
certain things will be done. He is the professional you&amp;#39;re hiring, and he
knows what he is doing. That&amp;#39;s enough.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fall in Love&lt;/strong&gt;.
After trust, the most important thing is a personal connection between
you two. I&amp;#39;m not saying you must fall in love with your programmer, but
it won&amp;#39;t hurt. You should feel an emotional touch with him. Otherwise Java code
won&amp;#39;t work like you need it to. If you can&amp;#39;t fall in love, you should at least become
good friends. Invite him to your home parties, go to movies together, and
introduce him to your wife. All of this will seriously affect
the quality of the product he is creating.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;#39;t Specify Too Much&lt;/strong&gt;.
That&amp;#39;s what &lt;a href=&quot;/2016/07/11/mistakes-in-agile-manifesto.html&quot;&gt;Agile&lt;/a&gt;
recommends, and I second that &amp;mdash; face-to-face communication is more
valuable than documentation. Don&amp;#39;t write any documentation, don&amp;#39;t specify
what exactly you need to develop, and don&amp;#39;t think too much about your &amp;quot;user stories&amp;quot;.
It&amp;#39;s all in the past. Modern software engineers figure everything out
by themselves. Just let him be creative and communicative. If something
isn&amp;#39;t clear, just call him. Remember, a Skype call is
&lt;a href=&quot;/2014/10/07/stop-chatting-start-coding.html&quot;&gt;always better&lt;/a&gt;
than those boring documents that nobody knows how to write.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Motivate by Value&lt;/strong&gt;.
In order to create a great software product, he must be very &lt;strong&gt;excited&lt;/strong&gt; about it.
Make sure he is excited. If he is not excited, call him again. Motivate him.
Talk to him. Explain to him your brilliant Google-killer business idea again
and again. Until the moment he &lt;del&gt;screams&lt;/del&gt; says &amp;quot;I&amp;#39;m excited&amp;quot;. He must know what
a great value your product is producing for the entirety of civilization. And he
must be excited. Do I have to say it one more time? Excited! Are
you excited already? I&amp;#39;m excited.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Promise Job Security&lt;/strong&gt;.
Even if you just raised $2K for your startup from your wife&amp;#39;s step-dad, promise
your programmer a cloudless financial future. He must know that you&amp;#39;ve got
enough to pay him until he retires. A good programmer must want to work with you
forever. That&amp;#39;s the type of programmer you need. You don&amp;#39;t want one of those
greedy freelancers who always jumps from project to project. You need a long-term
commitment. That&amp;#39;s why you have to pretend you&amp;#39;re rich enough.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Delay Money Talks&lt;/strong&gt;.
Don&amp;#39;t mention money for as long as you can. Ideally, ask him to create
a prototype first and &amp;quot;then we&amp;#39;ll discuss your salary&amp;quot;. A good programmer
doesn&amp;#39;t work for money. He works for satisfaction. That&amp;#39;s who you need.
You should discuss value, excitement, features, market disruption, and
anything else that&amp;#39;s important, but not money. Programmers in general are not
really good in financial negotiations. Use that to exploit him for as much
as you can.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;#39;t Negotiate&lt;/strong&gt;.
Eventually you will have to discuss money. Make sure there will be no
negotation involved. It&amp;#39;ll be an offensive process, and most programmers
are very sensitive. Just tell him how much you will pay, and if he doesn&amp;#39;t
feel that is enough, get back to the value/excitement/market conversation.
Do it again and again until he agrees.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Require Full Commitment&lt;/strong&gt;.
Make sure he will be fully committed to the project. Ideally, he must not have
any other projects or even any personal life at all. He must promise to be 100 percent with
you and your idea. If he is planning on doing something else, demonstrate that it
will offend you. Act jealous, like a loving wife. You don&amp;#39;t need a programmer
who is interested in something else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make Him a Partner&lt;/strong&gt;.
First of all, making him a partner will save you a lot of money. Ideally,
you should convince him to work
&lt;a href=&quot;/2014/10/29/how-much-do-you-cost.html&quot;&gt;for free&lt;/a&gt;.
Good programmers are good
entrepreneurs and like to take risks. A good programmer knows that
in order to become the next Mark Zuckerberg, he must start at a
job with no salary. Give him some
&lt;a href=&quot;/2016/01/12/good-programmers-dont-work-for-equity.html&quot;&gt;equity&lt;/a&gt;
and keep those motivational speeches
coming. It&amp;#39;s a perfect money-saving technique.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be Positive&lt;/strong&gt;.
Simply don&amp;#39;t tell him about your risks and concerns. The future of your
project is bright, and he doesn&amp;#39;t need to know more. You&amp;#39;re going to be his
&lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;leader&lt;/a&gt;,
and a good leader is never too honest with subordinates. Always
be positive about the plan &amp;mdash; he needs to get that from you.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;That should be enough to find and hire a good programmer. Interestingly enough,
I just re-read this text one last time and it looks to me like
a &amp;quot;how to find a wife&amp;quot; tutorial. Don&amp;#39;t you think?
Anyway, did I forget anything? Don&amp;#39;t hesitate to post some extra wisdom below in
the comments section.&lt;/p&gt;</content><category term="management" /><category term="sarcasm" /><summary>I get asked this question very often: Where and how do you find
and hire a good programmer? Since I&amp;#39;m a programmer and I manage
software projects, I&amp;#39;m supposed to know the tricks. I do, of course; there
are many of them, but the list below succinctly summarizes the most important ones.</summary></entry><entry><title>Don&amp;#39;t Use Java Assertions</title><link href="http://www.yegor256.com/2016/06/17/dont-use-java-assertions.html" rel="alternate" type="text/html" title="Don&#39;t Use Java Assertions" /><published>2016-06-17T00:00:00+00:00</published><updated>2016-06-17T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/06/17/dont-use-java-assertions</id><content type="html" xml:base="http://www.yegor256.com/2016/06/17/dont-use-java-assertions.html">&lt;p&gt;There are basically two ways to validate a situation in Java and complain
when something unexpected happens. It&amp;#39;s either an exception
or an assertion. Technically, they are almost the same, but there are some
small differences. I believe that exceptions are the right way to go
in all situations and assertions should never be used. Here&amp;#39;s why.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F06%2Fnatural-born-killers.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Natural Born Killers (1994) by Oliver Stone&#39;/&gt;&lt;figcaption&gt;Natural Born Killers (1994) by Oliver Stone&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let&amp;#39;s see what happens when an assertion is triggered. Say that this
is our code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;There is a problem&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Save this code to &lt;code&gt;Main.java&lt;/code&gt; and compile:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;javac Main.java&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then run it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;java Main
Hello, world!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The assertion wasn&amp;#39;t triggered. It was ignored. Now run it with an
&lt;code&gt;-enableassertions&lt;/code&gt; flag:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;java -enableassertions Main
Exception in thread &lt;span class=&quot;s2&quot;&gt;&amp;quot;main&amp;quot;&lt;/span&gt; java.lang.AssertionError: There is a problem
  at Main.main&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Main.java:3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is the first difference between exceptions and assertions. Exceptions
will always be thrown, while assertions are not enabled by default. They are
supposed to be turned on during testing and turned off in production.
The assertion caused the runtime exception
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/lang/AssertionError.html&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;. But hold on; it&amp;#39;s
not a &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/lang/RuntimeException.html&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt;. It extends
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/lang/Error.html&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; class,
which extends &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt;.
This is the second difference. I don&amp;#39;t know of any other differences.&lt;/p&gt;

&lt;p&gt;I would recommend &lt;strong&gt;not&lt;/strong&gt; to use assertions ... ever. Simply because I strongly
believe in the &lt;a href=&quot;/2015/08/25/fail-fast.html&quot;&gt;Fail Fast&lt;/a&gt;
approach. I think bugs must be visible not only
during testing but also in production. Moreover, I believe making
bugs visible in production is very important if you want to achieve a high-quality product.&lt;/p&gt;

&lt;p&gt;Thus, no assertions. They are simply a flawed and outdated feature in Java
(and some other languages).&lt;/p&gt;</content><category term="java" /><summary>There are basically two ways to validate a situation in Java and complain
when something unexpected happens. It&amp;#39;s either an exception
or an assertion. Technically, they are almost the same, but there are some
small differences. I believe that exceptions are the right way to go
in all situations and assertions should never be used. Here&amp;#39;s why.</summary></entry><entry><title>11 Mistakes Conferences Keep Making</title><link href="http://www.yegor256.com/2016/06/03/conference-mistakes.html" rel="alternate" type="text/html" title="11 Mistakes Conferences Keep Making" /><published>2016-06-03T00:00:00+00:00</published><updated>2016-06-03T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/06/03/conference-mistakes</id><content type="html" xml:base="http://www.yegor256.com/2016/06/03/conference-mistakes.html">&lt;p&gt;I was talking yesterday with a few friends who were software conference
organizers. They were asking about my opinion of the conferences I&amp;#39;ve recently
attended. Basically, they were interested to know what I would suggest for
improvement. So, I decided to summarize it in a list of the most typical
mistakes all conferences keep making and give them some ideas.
Remember, I&amp;#39;m judging from a speaker&amp;#39;s position.
The most serious mistakes and pieces of advice are at the bottom.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F06%2Fmi-gran-noche.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Mi gran noche (2015) by Álex de la Iglesia&#39;/&gt;&lt;figcaption&gt;Mi gran noche (2015) by Álex de la Iglesia&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Too formal&lt;/strong&gt;.
Very often all I&amp;#39;m getting from event organizers is a formal email that
my presentation was accepted and then some travel details: &amp;quot;your hotel is
here, don&amp;#39;t miss this speaker&amp;#39;s dinner.&amp;quot; That&amp;#39;s it. I don&amp;#39;t know who is
behind the conference, what this event is for, etc. At that speaker&amp;#39;s
dinner (if I don&amp;#39;t miss it) some details are cleared up. At some conferences, they even communicate
with me via some online form and I have to answer there through login/logout.
This is rather annoying and turns me off. It would be much better to feel
that there is a team with real people, who want to see me as a speaker.
I would be way more dedicated and motivated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Short breaks&lt;/strong&gt;.
Breaks between presentations that are too short give listeners an impression that
each particular presentation is not as important as the event as a whole.
This really de-motivates me as a speaker. I want to feel valuable.
I came to the conference to be heard. I think my speech is the most important and I don&amp;#39;t want people to
jump quickly out of the room, just to have enough time to drink coffee
and run to the next presentation. 30 minutes between talks is a comfortable
time &amp;mdash; enough to forget the previous talk and focus on the next one.
Also, four talks per day is an absolute maximum for a serious listener.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No moderator&lt;/strong&gt;.
There must be someone on the stage who presents the speaker and asks
questions if the room is quiet. All academic conferences have that. I don&amp;#39;t
understand why most industry events don&amp;#39;t do the same. A speaker must feel
comfortable on the stage. Being there alone doesn&amp;#39;t help at all. Also, the
moderator will promote me to better engage with the audience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Boring website&lt;/strong&gt;.
The higher the level of the conference, the more modern and beautiful their
website has to be. It&amp;#39;s not only your but also my face. I&amp;#39;m not only
attending your event, but also associating my name with it. I will share your
website on my Twitter, my Facebook, my blog, etc. That&amp;#39;s why
I really want it to look cool. Some conferences don&amp;#39;t care about
that and this attitude seriously demotivates me as a speaker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheap venue&lt;/strong&gt;.
This means literally what it says &amp;mdash; the place is too cheap and, because
of that, bad. The impression of such a place ruins the entire conference.
Don&amp;#39;t fool yourself, if it&amp;#39;s cheap &amp;mdash; it&amp;#39;s bad.
Into this category I would also place venues that are not designed to be
conference hosters, like cinemas or offices. They will also be cheaper than
proper venues, but you will get what you pay for.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No introduction&lt;/strong&gt;.
I believe it&amp;#39;s a job of conference organizers to promote me as a speaker
in front of the audience. Not only on the stage, but also online,
via Twitter, Facebook, etc. Most conferences don&amp;#39;t do that at all. I come to
the stage completely unannounced with almost zero interest from the room. They
simply don&amp;#39;t know who I am and why I&amp;#39;m here. The conference must promote us,
the speakers, very pro-actively.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Slow WiFi&lt;/strong&gt;.
It&amp;#39;s just very annoying.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No networking&lt;/strong&gt;.
Conference organizers know all speakers who are attending and most of the
listeners. They are at the center of this networking event, but they almost
never use that position effectively. They should help me network while I&amp;#39;m there
by introducing me to those who I may be interested in. This won&amp;#39;t be hard
at all for them. Just tell me &amp;quot;hey, let me introduce you to this guy who
is working and speaking about something similar to you.&amp;quot; Just make 5-10
such short intros and I will busy talking to these guys for the whole day.
Instead, in most conferences, speakers arrive, speak, drink their coffee and leave.
That&amp;#39;s sad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No video&lt;/strong&gt;.
Most conferences don&amp;#39;t record videos and it&amp;#39;s a terrible mistake. They probably
think that their events are more important then us, their speakers. It&amp;#39;s not
true. I&amp;#39;m speaking in front of 50 people, video recording it on my iPhone, publishing
it in my &lt;a href=&quot;https://www.youtube.com/channel/UCr9qCdqXLm2SU0BIs6d_68Q&quot;&gt;YouTube channel&lt;/a&gt;
and getting 500 views in the first week. So, who is
more important, your event which was able to attract just 50 people or my
YouTube channel that attracted 500? Thus, I would strongly recommend paying
a lot of attention to video recording and its quality. Preferrably, you should
record from two cameras (the speaker and the room) and do video editing afterwards.
It&amp;#39;s expensive, but very important.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad Equipment&lt;/strong&gt;.
I mean sound, light, projectors, screens, microphones, etc. It&amp;#39;s very annoying
to see how speakers and the audience suffer from all that technical problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Too small&lt;/strong&gt;.
It&amp;#39;s very difficult to present when there is less than 100 people in the room.
According to my experience, only one out of 10-15 people is actually listening
and understanding. It&amp;#39;s an average number. Of course, it depends on the subject,
but not too much. This means that if there are 30 people in the room, only
a few of them are my active listeners. It&amp;#39;s very difficult to present to just
a few people. You simply can&amp;#39;t afford to lose their attention, even for a second.
With a hundred people, the situation becomes more manageable. There are 8-12 people
who are actively listening. Even if I lose a few of them, it&amp;#39;s not a big deal.
The best size of the room is 250 people. That&amp;#39;s the ideal audience for
a technical talk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Too big&lt;/strong&gt;.
A very big audience (over 500 people in the room) causes another problem &amp;mdash;
I completely lose any contact with my listeners. I don&amp;#39;t see their eyes any more.
I can&amp;#39;t see their reaction, I don&amp;#39;t understand whether they follow me or not.
I&amp;#39;m not a technical speaker any more, but a rock singer. All I can do is turn
my presentation into a show and play with their emotions, not their brains.
This is actually what most &lt;a href=&quot;/2016/05/10/keynote-clowns.html&quot;&gt;keynote speakers&lt;/a&gt;
are usually doing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Too many tracks&lt;/strong&gt;.
Honestly, I think that the very idea of having multiple tracks is very bad.
I want the entire conference to attend my talk. I don&amp;#39;t want to lose anyone.
Moreover, I don&amp;#39;t want to compete with some
&lt;a href=&quot;/2016/05/10/keynote-clowns.html&quot;&gt;clown&lt;/a&gt; (no offense to clowns)
just because he is speaking at the same time. It&amp;#39;s a very demotivating competition,
since I can&amp;#39;t do anything to win.
I want to feel that I&amp;#39;m speaking here because there is some value in my
information. I want to know that I&amp;#39;m the chosen one. And I want to feel that
conference attendees feel the same. A perfect conference must have one
track, a room for 250-300 listeners, and a very well selected list of
speakers. I believe that most conferences are shooting themselves in the
foot trying to please the audience by inviting too many speakers. Instead,
do your homework right &amp;mdash; select the best speakers and don&amp;#39;t make listeners
walk from track to track cursing you for the mediocre speeches.
Choosing speakers is your job! Don&amp;#39;t delegate it to your audience.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;Did I forget anything? Please, post below in the comments!&lt;/p&gt;</content><category term="mood" /><summary>I was talking yesterday with a few friends who were software conference
organizers. They were asking about my opinion of the conferences I&amp;#39;ve recently
attended. Basically, they were interested to know what I would suggest for
improvement. So, I decided to summarize it in a list of the most typical
mistakes all conferences keep making and give them some ideas.
Remember, I&amp;#39;m judging from a speaker&amp;#39;s position.
The most serious mistakes and pieces of advice are at the bottom.</summary></entry><entry><title>Who Is a Project Manager?</title><link href="http://www.yegor256.com/2016/05/24/who-is-project-manager.html" rel="alternate" type="text/html" title="Who Is a Project Manager?" /><published>2016-05-24T00:00:00+00:00</published><updated>2016-05-24T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/05/24/who-is-project-manager</id><content type="html" xml:base="http://www.yegor256.com/2016/05/24/who-is-project-manager.html">&lt;p&gt;A project manager is very often confused with a leader. However, they are two
very different things. A project manager is the one who predicts the future,
while a leader is the one who builds it. And, in my opinion, a perfect
project manager is much more valuable for a project than a leader. If a
leader is valuable at all...&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F05%2Fschindlers-list.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Schindler&amp;amp;apos;s List (1993) by Steven Spielberg&#39;/&gt;&lt;figcaption&gt;Schindler&amp;#39;s List (1993) by Steven Spielberg&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;There are three things I want to define: project, project
management, and project manager. Once they are clear, my previous statement
will become obvious.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;project&lt;/strong&gt; is a vector from &lt;i&gt;W&lt;sub&gt;1&lt;/sub&gt;&lt;/i&gt; to &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt;,
where &lt;i&gt;W&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt; is a set of all &lt;em&gt;resources and risks&lt;/em&gt; in the world at
some defined point in time &lt;i&gt;t&lt;/i&gt;. &lt;i&gt;W&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt; &lt;em&gt;is the world&lt;/em&gt;,
at the moment &lt;i&gt;t&lt;/i&gt;. A project transforms the world, moving it from one
state to another.
&lt;a href=&quot;http://www.pmi.org/PMBOK-Guide-and-Standards.aspx&quot;&gt;PMBOK&lt;/a&gt; defines projects as
&amp;quot;temporary endeavors undertaken to create unique products, services, or results,&amp;quot;
which is just a specific case of my definition. Mine is more abstract, I believe.&lt;/p&gt;

&lt;p&gt;Consider this example. You woke up in the morning and made yourself a cup of coffee.
That was a project.
When you woke up, the world was in &lt;i&gt;W&lt;sub&gt;1&lt;/sub&gt;&lt;/i&gt; state.
There were some coffee beans in the bag, some water in the tap and
some electricity in the power station. And there were you standing in front
of the coffee machine. These were the &lt;em&gt;resources&lt;/em&gt; (including yourself).
There were also risks. The electricity black out could have happened, right?
The machine could have broken, right?
In theory, there was an unlimited amount of risks, including a zombie riot.
However, the majority of them had very low &lt;em&gt;probabilities&lt;/em&gt;, that&amp;#39;s why you
managed to make that cup of coffee.&lt;/p&gt;

&lt;p&gt;When the coffee was ready, the world appeared to be in &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt; state.
There were no coffee beans in the bag any more, the water was
used, and so was the electricity. However, a cup of coffee was created. We may
call that project a success, but that&amp;#39;s not really important and is not correct. What&amp;#39;s important
is that it&amp;#39;s &lt;em&gt;finished&lt;/em&gt;. We successfully transformed the world from state
&lt;i&gt;W&lt;sub&gt;1&lt;/sub&gt;&lt;/i&gt; to state &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt;. You may be surprised to
hear that the project was not a success. Indeed, it was not. It was a success
only for you, one of its &lt;em&gt;stakeholders&lt;/em&gt;. How about your roommate, the
owner of that bag of coffee beans, who asked you yesterday not to use them
because he is waiting for a date tonight? How much of a success was your project
to him?&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;A project is either dead or alive, that&amp;#39;s it&lt;/aside&gt;

&lt;p&gt;So, a project is never a &amp;quot;success&amp;quot; or a &amp;quot;failure.&amp;quot; A project is either
dead or alive, that&amp;#39;s it. Success is a subjective category and can only
be measured per stakeholder. And even a small project has many stakeholders.
Think about that electricity company who sold you a few kW/h and made some
profit out of it? The project was definitely a success for them. What about
mother nature? Your project was definitely a failure for it, since you
produced a few kilograms of CO&lt;sub&gt;2&lt;/sub&gt; while making that damn coffee. As you
see, success is very subjective.&lt;/p&gt;

&lt;p&gt;And we&amp;#39;re in line with the PMBOK definition. Our coffee making project was indeed
a temporary endeavor undertaken to create a unique product, which was a cup of
coffee.&lt;/p&gt;

&lt;p&gt;Did we have a project manager? No. Were we doing any project management? No.
Well, not explicitly. Obviously, you were the project manager, but you didn&amp;#39;t
realize that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project management&lt;/strong&gt; is a set of tools to &lt;em&gt;predict&lt;/em&gt; the outcome
of a project. Planning is one of those tools. Guessing is another one. Expert
judgement is yet another one, which you were using while making that coffee.
You were an expert and knew how to use the machine, the electricity, and the water
tap. You didn&amp;#39;t need any other tools except your expert judgement. And it
worked. In bigger projects, we would need more powerful instruments and methods.
For example, we could use some scheduling software to plan when to put the beans
into the machine, when to put that cup under the dipping point and when to
press the button. You might also need a budgeting software to calculate how
much money you will owe to the roommate. You might use a few risk identification
and planning algorithms, etc.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;You must try to predict the future with as much accuracy and precision as possible&lt;/aside&gt;

&lt;p&gt;Most of such tools are mentioned and explained in the PMBOK. They are even
groupped there into so called &amp;quot;knowledge areas:&amp;quot; for predicting
time, money, risks, people, etc. It&amp;#39;s not important how exactly you predict
the future, how many tools you&amp;#39;re using or what knowledge areas you break them
into. What&amp;#39;s important is that you must try to do it with as much accuracy
and precision as possible. Here comes the definition of the main guy.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;project manager&lt;/strong&gt; (PM) is the one who predicts the future.
The PM knows in what state &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt; the world will be when
the project is finished. If the PM doesn&amp;#39;t know or is in doubt &amp;mdash; it&amp;#39;s a bad PM. If
the PM knows and is certain about it &amp;mdash; it&amp;#39;s a good PM. That&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;And I have to say, in that coffee making project you were a lousy PM. Did you
know what was the probability of the project being finished without a cup of coffee
made? A good PM would say that &amp;quot;after an analysis of 230 risks I predict
the probability of that coffee being tasteful as 87.4%.&amp;quot; Obviously, you didn&amp;#39;t
have that information. Next, did you know what would be the total monetary value of
the project after its completion? Did you calculate all incurred costs, including
the price of environmental damage your coffee machine made? A good PM would
say that &amp;quot;the total cost of the project is expected to be $1.09.&amp;quot; Were you
able to predict the duration of the project precisely? Well, maybe that one
you were rather good at.&lt;/p&gt;

&lt;p&gt;There is only one reason why we want to put a project manager on top of
the project. I&amp;#39;m sure you will be surprised to hear it: the only purpose of
a PM in a project is to help its key stakeholders (also known as sponsors) to
make a decision: to kill the project right now or to let it stay alive for a bit more.
That&amp;#39;s it.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Project sponsors need to know whether the project is worth going forward&lt;/aside&gt;

&lt;p&gt;You didn&amp;#39;t need a PM in your coffee making project because you, as its key
stakeholder, were fully committed to finish it only when the coffee is ready.
But imagine another situation. The coffee machine suddenly breaks, the water
stops, the electricity is blacked out and some zombies are knocking at your door.
And you still want that cup of coffee. Well, you&amp;#39;re not entirely sure what&amp;#39;s
more important now, the coffee or simply finding a way to survive. You will need
a more or less accurate prediction of how much that coffee will cost you and
when will it be ready. If it&amp;#39;s just a few minutes and everything will be
fine again, you will keep waiting for it. However, if the prediction is
five hours and a risk of failure rate is 93%, you had better terminate this
project and do something else.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s exactly what is happening in software development projects and all
other projects. Project sponsors need to know whether the project is worth
going forward or it&amp;#39;s time to stop it and do something else. That&amp;#39;s what
they hire project managers for. This is the only reason of that millions
of PMs existence &amp;mdash; to predict the future so that we were able to
kill our projects before they kill us (read &amp;quot;eat all our resources&amp;quot;).&lt;/p&gt;

&lt;p&gt;You may ask &amp;mdash; what about the coordinating part? What about
&lt;a href=&quot;/2015/01/08/morning-standup-meetings.html&quot;&gt;morning standups&lt;/a&gt;?
What about walking around the office and motivating all the
&lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;office slaves&lt;/a&gt;
so that they don&amp;#39;t get lazy? Isn&amp;#39;t it the primary responsibility of a PM?&lt;/p&gt;

&lt;p&gt;Not really. This is what a PM does in order to better understand the situation
and predict the future. But it&amp;#39;s not what a PM is paid for.
Indeed, a bad PM goes around the office and calls
&lt;a href=&quot;/2015/07/13/meetings-are-legalized-robbery.html&quot;&gt;multiple meetings&lt;/a&gt;
a day. This is also known as &amp;quot;staying on top of things&amp;quot; &amp;mdash;
a perfect term to define an amateur PM. A bad PM &lt;em&gt;becomes&lt;/em&gt; the future, instead
of predicting it. He &lt;a href=&quot;/2015/09/22/micromanagement.html&quot;&gt;micromanages&lt;/a&gt;
the team by telling everybody what to do, since this is the easiest way to
know what will happen and when, in the short-term. But the long-term future
stays absolutely unclear. A bad PM mostly relies on expert judgement, just
like you did while making that coffee.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;A good PM finds a way to organize resources in such a way that their future becomes predictable&lt;/aside&gt;

&lt;p&gt;A good project manager is a completely different creature. A good PM
finds a way to &lt;em&gt;organize&lt;/em&gt; resources in such a way that their future
becomes &lt;em&gt;predictable&lt;/em&gt;. The key word here is &amp;quot;organize.&amp;quot; A good PM organizes
people, money, time, risks, stakeholders, and many other things. He uses
planning and budgeting software in order to better see the future. But he
doesn&amp;#39;t become the future and he doesn&amp;#39;t &lt;em&gt;build&lt;/em&gt; the future. His people do that,
he just &lt;em&gt;observes&lt;/em&gt;. He only collects information from many possible sources
and estimates what will happen, how much it will cost and who will
suffer most and least. At any moment in time, he &lt;em&gt;knows&lt;/em&gt; exactly when the project
will be finished, how much it will spend, how many results it will produce,
what the quality will be, and what the accuracy of that prediction is.&lt;/p&gt;

&lt;p&gt;A good PM doesn&amp;#39;t personally give orders to the team and
doesn&amp;#39;t meet people to tell them what to do. Instead, he makes sure
that all communication is happening through
a &lt;strong&gt;project management information system&lt;/strong&gt; (PMIS). Moreover, in a perfectly
organized project, a PM won&amp;#39;t even need to give any orders to the team. Work
orders will be created, approved, assigned and verified by the team itself.
The PM will make sure that the workflow is seamless and disciplined. But he
won&amp;#39;t be personally responsible for telling people what to do.&lt;/p&gt;

&lt;p&gt;A perfect PM won&amp;#39;t even be visible to the team. Everything will be obvious
and clear: plans will be available, work orders explicitly defined,
risks identified and documented, concerns properly reported, stakeholders
informed in time, etc. This may sound like utopia, but that&amp;#39;s the
true meaning of a &amp;quot;project manager&amp;quot; role.&lt;/p&gt;

&lt;p&gt;I believe it&amp;#39;s already obvious that project management has very little to do
with leadership. They are just two &lt;em&gt;orthogonal&lt;/em&gt; skill sets. I would say that
a perfect PM won&amp;#39;t even need any leadership skills, while a lousy PM will need
a lot of them. As far as I understand, being a leader means having enough
inner power (also known as &amp;quot;charisma&amp;quot;) to make people do what you need. But that&amp;#39;s
totally against what we just discussed. A project manager doesn&amp;#39;t want people
do what&amp;#39;s needed because of his charisma. Instead, he wants people to be
leaders of their own tasks. They have to move forward driven by their own
motivation and selfish interests, according to the plans and rules defined
by the PM. A charismatic project manager will inevitably replace the rules
by his or her own personality and the entire idea of project management will
be ruined.&lt;/p&gt;

&lt;p&gt;This is my understanding of project management.&lt;/p&gt;</content><category term="management" /><summary>A project manager is very often confused with a leader. However, they are two
very different things. A project manager is the one who predicts the future,
while a leader is the one who builds it. And, in my opinion, a perfect
project manager is much more valuable for a project than a leader. If a
leader is valuable at all...</summary></entry><entry><title>What to Worry About in Convertible Notes</title><link href="http://www.yegor256.com/2016/05/17/convertible-notes.html" rel="alternate" type="text/html" title="What to Worry About in Convertible Notes" /><published>2016-05-17T00:00:00+00:00</published><updated>2016-05-17T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/05/17/convertible-notes</id><content type="html" xml:base="http://www.yegor256.com/2016/05/17/convertible-notes.html">&lt;p&gt;&amp;quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Convertible_bond&quot;&gt;Convertible Notes&lt;/a&gt;&amp;quot;
is what you most likely will hear the first
time you get money for your first startup. They will give you
cash asking to give them the convertible notes (or SAFE,
which is very similar). Convertible notes are just a few pages of paper
with two signatures at the bottom. Not too much to worry about.
It&amp;#39;s basically a contract between your startup and an investor.
Let&amp;#39;s see what exactly it says and what you, as a founder,
should pay attention to.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F05%2Fthe-godfather-iii.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;The Godfather: Part III (1990) by Francis Ford Coppola&#39;/&gt;&lt;figcaption&gt;The Godfather: Part III (1990) by Francis Ford Coppola&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;why-not-equity&quot;&gt;Why Not Equity?&lt;/h2&gt;

&lt;p&gt;The first question is why convertible notes? Why not just shares of stock?
And what the hell are &amp;quot;shares of stock&amp;quot; in the first place, right? Basically,
there are two questions in each business or in any group activity, be it
a new mobile app, a multi-national corporation or a bank robbery:
1) who is the boss, and 2) who gets the profit. To regulate that process
&amp;quot;shares of stock&amp;quot; were invented
(if you know who invented them and when, let me know).&lt;/p&gt;

&lt;p&gt;Say we&amp;#39;re planning to &lt;del&gt;rob a bank&lt;/del&gt; create a Facebook killer. There are three
of us. We print three papers, each of which says: &amp;quot;whoever holds this paper
has one vote and will get an equal part of the profit.&amp;quot; How does that sound? Each of us
has the same paper. When it&amp;#39;s time to decide whether we use Java or PHP,
we sit together, show our papers and vote. One vote for Java, two for PHP &amp;mdash;
the decision is made, we will use PHP. When our startup finally dies
and it&amp;#39;s time to decide what to do with the domain name, we sell it for
$300 and give $100 to each holder of that paper, since there are just three
papers and they have equal rights.&lt;/p&gt;

&lt;p&gt;Thus, basically, each share of stock (this is an official name of that piece
of paper) is a &lt;strong&gt;promise&lt;/strong&gt;. A promise of some rights to vote and to make
profit. The company (our startup) is making us a promise.&lt;/p&gt;

&lt;p&gt;By the way, I can sell my share of stock to my friend. When it&amp;#39;s time to
decide whether it&amp;#39;s Java or PHP, he will show up and vote. You may not like
that, since you are seeing this dude for the first time, but you will have to obey &amp;mdash;
he&amp;#39;s got that paper in his hands. That&amp;#39;s why shares of stock are also
called &lt;strong&gt;equity&lt;/strong&gt;. I can sell them just like I can sell my car. No matter who
owns them, he or she has exactly the same rights as the original or the
previous owner. They are assets.&lt;/p&gt;

&lt;p&gt;Usually, there are millions or billions of shares of stock. When a company
starts, it prints, say, a million of them, giving 200,000 to each co-founder
and leaving 400,000 in the so-called &amp;quot;pool.&amp;quot; Later, an investor shows up
and says: &amp;quot;I will put $500,000 to the bank account of the company and the
company will print 300,000 more shares of stock for me.&amp;quot; The amount of shares
&amp;quot;issued&amp;quot; is growing. For example, at the time of writing there are
&lt;a href=&quot;https://www.google.com/finance?cid=358464&quot;&gt;7.91 billion&lt;/a&gt;
shares with Microsoft name of them. Microsoft Corporation has
been printing extra shares &lt;a href=&quot;https://www.microsoft.com/en-us/Investor/FAQ.aspx&quot;&gt;nine times&lt;/a&gt; after their IPO in 1986.
When Bill Gates founded the company in April 1975, he had 500K shares, which were equal
to 50% (I&amp;#39;m guessing, do you know exact numbers?).
Now he holds &lt;a href=&quot;http://www.investopedia.com/articles/investing/122215/top-4-microsoft-shareholders.asp&quot;&gt;nearly 223M&lt;/a&gt;,
which is just 2.8% of the total.&lt;/p&gt;

&lt;p&gt;Now, the most annoying part. In reality, shares are not just pieces of paper
with a few sentences on them, like in our example above. They are big legal
documents that explain exactly how their holder can vote and exactly when and how
he or she will get the profit. There are tons of legal clauses, which
usually take weeks or months of discussions, between the company and
investors. In reality, an investor says: &amp;quot;I will put $500,000 to the bank
account of the company and the company will print 300,000 more shares of stock for me,
&lt;em&gt;terms and conditions of which my lawyer will discuss with you&lt;/em&gt;.&amp;quot;&lt;/p&gt;

&lt;p&gt;If we&amp;#39;re talking about $500K, you will have no problem meeting that lawyers.
However, if it&amp;#39;s just $25K... To make life easier for smaller investments,
convertible notes were invented (well, there were
&lt;a href=&quot;http://techcrunch.com/2012/04/07/convertible-note-seed-financings/&quot;&gt;a few other reasons&lt;/a&gt;).
They are &lt;strong&gt;not equity&lt;/strong&gt;. Investors that
have convertible notes can&amp;#39;t vote. They can&amp;#39;t sell convertible notes and they
can&amp;#39;t get any profit from the company. So, what they are for then? I&amp;#39;ll explain
in a minute. My goal so far was to show why young companies don&amp;#39;t want
to deal with shares of stock &amp;mdash; because of greedy lawyers and, of
course, the complexity of terms and conditions.&lt;/p&gt;

&lt;h2 id=&quot;what-are-convertible-notes&quot;&gt;What are Convertible Notes?&lt;/h2&gt;

&lt;p&gt;They are just debts. They are not real investments. The company simply
borrows money from an investor, promising to return them back. Why not
just call them &amp;quot;money borrowing notes?&amp;quot; Because investors don&amp;#39;t want their
money back. They want equity.&lt;/p&gt;

&lt;p&gt;So here is how it works. Say I&amp;#39;m an investor, giving you $25K. You give
me convertible notes. Then we wait. We wait until a more serious investor
shows up and gives you a bigger sum of money. And it&amp;#39;s not just a matter
of amount. What&amp;#39;s important is that this investor must get shares of stock
from you. This will be called &amp;quot;equity financing.&amp;quot; You get finance and give
away equity. When this happens, I show up, give you the convertible notes
and you give me equity. On the same terms as you gave to that investor.
I won&amp;#39;t send you my lawyers, you won&amp;#39;t discuss terms and conditions. You will
just &lt;strong&gt;convert&lt;/strong&gt; my notes to equity, on the same terms as agreed with that
investor. Plain and simple.&lt;/p&gt;

&lt;p&gt;A practical example. There is you and your co-founder. You guys have
1,000,000 shares of stock, 500K issued to each of you. I give you $25K, you give
me convertible notes. In a few months, an investor comes in and
your company issues 100,000 shares and sells them for $400,000
(your post a $400K check to the bank account of your company).
This means that now there are 1,100,000 shares in total. You just sold 100K of them
with the price of $4 per share. Now it&amp;#39;s time to convert my convertible notes.
You will have to give me 6,250 shares and I&amp;#39;ll return you the notes.
Thus, in the end, there will be 1,106,250 shares total and your company&amp;#39;s post-money
valuation will be $4,425,000. Got the math?&lt;/p&gt;

&lt;p&gt;My shares will have exacty the same
&amp;quot;rights, privileges, preferences and restrictions&amp;quot; as the shares you
gave to the investor. And I won&amp;#39;t have an option to negotiate. I will just
receive them and accept.&lt;/p&gt;

&lt;p&gt;One more thing. If that investor will never show up, you still owe me $25K.
A debt is a debt.&lt;/p&gt;

&lt;p&gt;Now, since we know what convertible notes are for and how they work, let&amp;#39;s
see what is important to pay attention to. There are just a few things, but
they are really important.&lt;/p&gt;

&lt;h2 id=&quot;the-valuation-cap&quot;&gt;The Valuation Cap&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s take a look again at the example above. You are selling 100,000 shares
for $4. This technically means that the shares the two of you had, before the
investor showed up, suddenly got some value, right? They were just papers,
but now someone is ready to pay $4 for each of them.&lt;/p&gt;

&lt;p&gt;This means that each of you, being a holder of 500K shares, owns equity for
$2,000,000 (I&amp;#39;m just multiplying 500K by $4). Also, this means that the
valuation of the company is $4M. I&amp;#39;m just multiplying the total amount
of shares, which is a million, by the price of each share. This valuation
is also called &lt;strong&gt;pre-money valuation&lt;/strong&gt; (the valuation before that $400K
landed at your bank account).&lt;/p&gt;

&lt;p&gt;There is also a post-money valuation, which, as you can imagine, is calculated
by multiplying total amount of shares after the investment, by their price. In
this case, it&amp;#39;s $4.4M (1,100,000 by $4).&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s see what happeed in our example with my $25K. I gave them to you when
your company was very young. Your valuation was rather low, because you
barely had any results. You needed small cash to pay your bills and fill
your car with gas. The valuation was definitely lower than $4M. So why are
you converting my notes as if at the time of my investment the valuation
was already that high. It&amp;#39;s not fair. I want to get more than 6,250 shares.
I want my part to be calculated as if your valuation was, say, $500K. In that
case, I will get 20,000 shares. That&amp;#39;s fair. The investor will pay $400K to get
100K shares, but I paid just $25K to get 20K of them. I earned more equity,
because my risk was way higher.&lt;/p&gt;

&lt;p&gt;To make that math happen, we put a &amp;quot;valuation cap&amp;quot; into the convertible notes.
There will be a clause that guarantees that no matter what will be that
pre-money valuation at the moment of &amp;quot;equity financing&amp;quot;, in my formula
it will stay $500K.&lt;/p&gt;

&lt;p&gt;Obviously, for you as a founder, an ideal situation would be to have &amp;quot;no cap&amp;quot;
convertible notes. That&amp;#39;s the first thing you should try to insist on:
no cap! Most investors will smile back and disagree. It&amp;#39;s only logical. Then,
try to negotiate the value of the cap. Try to make it as big as possible.&lt;/p&gt;

&lt;p&gt;But remember, it&amp;#39;s better to have money and a small cap than
a big cap and no money. Does it sound too obvious?&lt;/p&gt;

&lt;h2 id=&quot;the-discount&quot;&gt;The Discount&lt;/h2&gt;

&lt;p&gt;Here is the same problem, but a different instrument. Again, as an investor,
I don&amp;#39;t like that you&amp;#39;re selling me shares for $4. This is the price you
are giving to the investor who came way later than myself. Their risks
are way lower. I want a discount!&lt;/p&gt;

&lt;p&gt;We can put a clause into convertible notes, which will say that the price
for me will be same as for the investor at the moment of &amp;quot;equity financing&amp;quot;,
minus, say, a 50% &lt;strong&gt;discount&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Again, as a founder, you should insist on &amp;quot;no discount&amp;quot; convertible notes. Will
I agree? Probably not. Especially if there is no cap. Try to negotiate
a smaller discount. Maybe 10%, just to give me a feeling of appreciation.&lt;/p&gt;

&lt;h2 id=&quot;the-interest&quot;&gt;The Interest&lt;/h2&gt;

&lt;p&gt;Remember that by signing convertible notes and sending you cash, investors
are basically &lt;strong&gt;lending&lt;/strong&gt; you money. You owe that $25K to them. And some
of them will ask for an interest. And the interest may be payable annually.
Say, 5% per year. That means that you will have to send them a check
for $1,250 every year, no matter how your startup is doing.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s only logical for them, but is totally against you. Do not agree
to pay any interest.&lt;/p&gt;

&lt;h2 id=&quot;the-maturity-date&quot;&gt;The Maturity Date&lt;/h2&gt;

&lt;p&gt;Some investors are ready to wait until that &amp;quot;equity financing&amp;quot; moment for
as much as necessary. Others may demand you to pay them back on a so called
&amp;quot;maturity date.&amp;quot; Pay cash, with the interest. This date will usually be somewhere
far ahead, like &amp;quot;three years from now.&amp;quot; But don&amp;#39;t feel too relaxed, this
day will come faster than you expect.&lt;/p&gt;

&lt;p&gt;Try not to give convertible notes with a maturity date to anyone.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.ycombinator.com/announcing-the-safe-a-replacement-for-convertible-notes&quot;&gt;SAFE&lt;/a&gt;
is a form of convertible notes, introduced by &lt;a href=&quot;http://www.ycombinator.com&quot;&gt;YC&lt;/a&gt;,
which doesn&amp;#39;t have a maturity date at all. This technically means that
you don&amp;#39;t have to pay them anything back. Well, there is only one situation
when you have to pay &amp;mdash; in case your startup dies. In that case, you will
have to pay investors as much as you can, using the cash you still have
in your bank account. Most likely there will be nothing, so don&amp;#39;t worry.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;There are other less usual or less important elements of convertible notes, which
you most likely won&amp;#39;t ever see or should not worry about, like pro-data rights,
for example. Just focus on the things listed above and you will be good.&lt;/p&gt;</content><category term="management" /><category term="startup" /><summary>&amp;quot;Convertible Notes&amp;quot;
is what you most likely will hear the first
time you get money for your first startup. They will give you
cash asking to give them the convertible notes (or SAFE,
which is very similar). Convertible notes are just a few pages of paper
with two signatures at the bottom. Not too much to worry about.
It&amp;#39;s basically a contract between your startup and an investor.
Let&amp;#39;s see what exactly it says and what you, as a founder,
should pay attention to.</summary></entry><entry><title>Keynote Clowns</title><link href="http://www.yegor256.com/2016/05/10/keynote-clowns.html" rel="alternate" type="text/html" title="Keynote Clowns" /><published>2016-05-10T00:00:00+00:00</published><updated>2016-05-10T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/05/10/keynote-clowns</id><content type="html" xml:base="http://www.yegor256.com/2016/05/10/keynote-clowns.html">&lt;p&gt;Over the last six months, I&amp;#39;ve attended 18 conferences and heard over 30
keynote sessions, mostly about software development and management.
I think I now know all the secrets of a successful keynote speaker.
It doesn&amp;#39;t look so difficult to become one. Here are my thoughts.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F05%2Fbean.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Bean (1997) by Mel Smith&#39;/&gt;&lt;figcaption&gt;Bean (1997) by Mel Smith&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Be obvious!&lt;/strong&gt;
Don&amp;#39;t take a chance by suggesting something new. It&amp;#39;s risky and
some people may disagree with you. That&amp;#39;s not good. The goal is to have
everybody in the room completely agree with what you&amp;#39;re saying. That&amp;#39;s how
you make a good speech. The audience will be comfortable and relaxed, and you
will have no risk of being questioned afterwards. A few safe headline examples:
&amp;quot;trust is very important&amp;quot; or &amp;quot;software must be stable.&amp;quot;
Everybody will be nodding their heads &amp;mdash; that&amp;#39;s all you need.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Joke!&lt;/strong&gt;
You must make them laugh. You must open with a joke and continue with many
of them. Prepare them carefully. Just google &amp;quot;good keynote jokes&amp;quot; and use
what smart people recommend. A well-prepared collection of jokes is much
more valuable than the content you will be talking about. Nobody will remember
the content, but the jokes will definitely be re-tweeted. When a good speaker
is talking, the room is laughing every 60 seconds.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Swear!&lt;/strong&gt;
Don&amp;#39;t be too formal and boring, show a slide with a picture of
a naked butt every once in a while. Everybody will understand that you&amp;#39;re not only a
speaker but also a good friend. Also, your language should be rather loose.
Pretent you&amp;#39;re talking to a friend over a pint of beer. Remember, the goal
is to be funny.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Repeat!&lt;/strong&gt;
Always bring the same content with you, to all
&lt;a href=&quot;/2016/06/03/conference-mistakes.html&quot;&gt;conferences&lt;/a&gt;. It&amp;#39;s easier for
everybody. First, conference organizers will know for sure what will you be
talking about. They can even watch your 4-year-old video-recorded
presentation and see exactly what words and slides you&amp;#39;re planning to use.
Second, you won&amp;#39;t be nervous, since you&amp;#39;ll be saying the same jokes
over and over again. Everybody wins.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kitties!&lt;/strong&gt;
Cute kitties. We all love them! Attach them somehow to your content. It is
not really important whether they are related or not. You must show love.
Instead of cats you can use a picture of your 2-y.o. daugther or yourself
in a primary school. It has to be something sweet and adorable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keep talking!&lt;/strong&gt;
A good keynote speech fills the entire 60 minutes, leaving
absolutely no time for questions. Actually, a perfect speaker will be interrupted
after the 145th slide and will say that if anyone wants to know more, there
is always a place near the restroom, let&amp;#39;s go there and continue. Thus, be
focused on your slides and try to avoid questions at the end &amp;mdash; they may create
a negative impression of you if you mess up answering their questions. They came to
listen to you, not to ask questions &amp;mdash; keep talking.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;On a more serious note, I&amp;#39;m very disappointed by what I&amp;#39;ve seen
in almost all conferences so far. These keynote speakers are in most
cases just making money, delivering the same &amp;quot;fun&amp;quot; again and again.
They make $2-3K a speech and we, the listeners, get absolutely
nothing new out of them.&lt;/p&gt;

&lt;p&gt;Conference organizers keep inviting them, just
because of the names. And we keep attending that conferences also just
because of the names. But do these names really mean anything? I don&amp;#39;t think
so. These guys are, in most cases, just retired losers
with good presentation skills.&lt;/p&gt;

&lt;p&gt;It would be much better to spend the money conferences waste on the big-names
for training practical speakers from the trenches, with really fresh and
interesting content. As far as I understand, conference organizers are just too
lazy to do that. It&amp;#39;s just easier to buy a &amp;quot;proven&amp;quot; clown.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s sad.&lt;/p&gt;</content><category term="mood" /><category term="sarcasm" /><summary>Over the last six months, I&amp;#39;ve attended 18 conferences and heard over 30
keynote sessions, mostly about software development and management.
I think I now know all the secrets of a successful keynote speaker.
It doesn&amp;#39;t look so difficult to become one. Here are my thoughts.</summary></entry></feed>
