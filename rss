<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator><link href="http://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="http://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2016-05-25T11:38:46+00:00</updated><id>http://www.yegor256.com/</id><title>Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor@teamed.io</email></author><entry><title>Who Is a Project Manager?</title><link href="http://www.yegor256.com/2016/05/24/who-is-project-manager.html" rel="alternate" type="text/html" title="Who Is a Project Manager?" /><published>2016-05-24T00:00:00+00:00</published><updated>2016-05-24T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/05/24/who-is-project-manager</id><content type="html" xml:base="http://www.yegor256.com/2016/05/24/who-is-project-manager.html">&lt;p&gt;A project manager is very often confused with a leader. However, they are two
very different things. A project manager is the one who predicts the future,
while a leader is the one who builds it. And, in my opinion, a perfect
project manager is much more valuable for a project than a leader. If a
leader is valuable at all...&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F05%2Fschindlers-list.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Schindler&amp;amp;apos;s List (1993) by Steven Spielberg&#39;/&gt;&lt;figcaption&gt;Schindler&amp;#39;s List (1993) by Steven Spielberg&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;There are three things I want to define: project, project
management, and project manager. Once they are clear, my previous statement
will become obvious.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;project&lt;/strong&gt; is a vector from &lt;i&gt;W&lt;sub&gt;1&lt;/sub&gt;&lt;/i&gt; to &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt;,
where &lt;i&gt;W&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt; is a set of all &lt;em&gt;resources and risks&lt;/em&gt; in the world at
some defined point in time &lt;i&gt;t&lt;/i&gt;. &lt;i&gt;W&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt; &lt;em&gt;is the world&lt;/em&gt;,
at the moment &lt;i&gt;t&lt;/i&gt;. A project transforms the world, moving it from one
state to another.
&lt;a href=&quot;http://www.pmi.org/PMBOK-Guide-and-Standards.aspx&quot;&gt;PMBOK&lt;/a&gt; defines projects as
&amp;quot;temporary endeavors undertaken to create unique products, services, or results,&amp;quot;
which is just a specific case of my definition. Mine is more abstract, I believe.&lt;/p&gt;

&lt;p&gt;Consider this example. You woke up in the morning and made yourself a cup of coffee.
That was a project.
When you woke up, the world was in &lt;i&gt;W&lt;sub&gt;1&lt;/sub&gt;&lt;/i&gt; state.
There were some coffee beans in the bag, some water in the tap and
some electricity in the power station. And there were you standing in front
of the coffee machine. These were the &lt;em&gt;resources&lt;/em&gt; (including yourself).
There were also risks. The electricity black out could have happened, right?
The machine could have broken, right?
In theory, there was an unlimited amount of risks, including a zombie riot.
However, the majority of them had very low &lt;em&gt;probabilities&lt;/em&gt;, that&amp;#39;s why you
managed to make that cup of coffee.&lt;/p&gt;

&lt;p&gt;When the coffee was ready, the world appeared to be in &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt; state.
There were no coffee beans in the bag any more, the water was
used, and so was the electricity. However, a cup of coffee was created. We may
call that project a success, but that&amp;#39;s not really important and is not correct. What&amp;#39;s important
is that it&amp;#39;s &lt;em&gt;finished&lt;/em&gt;. We successfully transformed the world from state
&lt;i&gt;W&lt;sub&gt;1&lt;/sub&gt;&lt;/i&gt; to state &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt;. You may be surprised to
hear that the project was not a success. Indeed, it was not. It was a success
only for you, one of its &lt;em&gt;stakeholders&lt;/em&gt;. How about your roommate, the
owner of that bag of coffee beans, who asked you yesterday not to use them
because he is waiting for a date tonight? How much of a success was your project
to him?&lt;/p&gt;

&lt;p&gt;So, a project is never a &amp;quot;success&amp;quot; or a &amp;quot;failure.&amp;quot; A project is either
dead or alive, that&amp;#39;s it. Success is a subjective category and can only
be measured per stakeholder. And even a small project has many stakeholders.
Think about that electricity company who sold you a few kW/h and made some
profit out of it? The project was definitely a success for them. What about
mother nature? Your project was definitely a failure for it, since you
produced a few kilograms of CO&lt;sub&gt;2&lt;/sub&gt; while making that damn coffee. As you
see, success is very subjective.&lt;/p&gt;

&lt;p&gt;And we&amp;#39;re in line with the PMBOK definition. Our coffee making project was indeed
a temporary endeavor undertaken to create a unique product, which was a cup of
coffee.&lt;/p&gt;

&lt;p&gt;Did we have a project manager? No. Were we doing any project management? No.
Well, not explicitly. Obviously, you were the project manager, but you didn&amp;#39;t
realize that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project management&lt;/strong&gt; is a set of tools to &lt;em&gt;predict&lt;/em&gt; the outcome
of a project. Planning is one of those tools. Guessing is another one. Expert
judgement is yet another one, which you were using while making that coffee.
You were an expert and knew how to use the machine, the electricity, and the water
tap. You didn&amp;#39;t need any other tools except your expert judgement. And it
worked. In bigger projects, we would need more powerful instruments and methods.
For example, we could use some scheduling software to plan when to put the beans
into the machine, when to put that cup under the dipping point and when to
press the button. You might also need a budgeting software to calculate how
much money you will owe to the roommate. You might use a few risk identification
and planning algorithms, etc.&lt;/p&gt;

&lt;p&gt;Most of such tools are mentioned and explained in the PMBOK. They are even
groupped there into so called &amp;quot;knowledge areas:&amp;quot; for predicting
time, money, risks, people, etc. It&amp;#39;s not important how exactly you predict
the future, how many tools you&amp;#39;re using or what knowledge areas you break them
into. What&amp;#39;s important is that you must try to do it with as much accuracy
and precision as possible. Here comes the definition of the main guy.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;project manager&lt;/strong&gt; (PM) is the one who predicts the future.
The PM knows in what state &lt;i&gt;W&lt;sub&gt;2&lt;/sub&gt;&lt;/i&gt; the world will be when
the project is finished. If the PM doesn&amp;#39;t know or is in doubt &amp;mdash; it&amp;#39;s a bad PM. If
the PM knows and is certain about it &amp;mdash; it&amp;#39;s a good PM. That&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;And I have to say, in that coffee making project you were a lousy PM. Did you
know what was the probability of the project being finished without a cup of coffee
made? A good PM would say that &amp;quot;after an analysis of 230 risks I predict
the probability of that coffee being tasteful as 87.4%.&amp;quot; Obviously, you didn&amp;#39;t
have that information. Next, did you know what would be the total monetary value of
the project after its completion? Did you calculate all incurred costs, including
the price of environmental damage your coffee machine made? A good PM would
say that &amp;quot;the total cost of the project is expected to be $1.09.&amp;quot; Were you
able to predict the duration of the project precisely? Well, maybe that one
you were rather good at.&lt;/p&gt;

&lt;p&gt;There is only one reason why we want to put a project manager on top of
the project. I&amp;#39;m sure you will be surprised to hear it: the only purpose of
a PM in a project is to help its key stakeholders (also known as sponsors) to
make a decision: to kill the project right now or to let it stay alive for a bit more.
That&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;You didn&amp;#39;t need a PM in your coffee making project because you, as its key
stakeholder, were fully committed to finish it only when the coffee is ready.
But imagine another situation. The coffee machine suddenly breaks, the water
stops, the electricity is blacked out and some zombies are knocking at your door.
And you still want that cup of coffee. Well, you&amp;#39;re not entirely sure what&amp;#39;s
more important now, the coffee or simply finding a way to survive. You will need
a more or less accurate prediction of how much that coffee will cost you and
when will it be ready. If it&amp;#39;s just a few minutes and everything will be
fine again, you will keep waiting for it. However, if the prediction is
five hours and a risk of failure rate is 93%, you had better terminate this
project and do something else.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s exactly what is happening in software development projects and all
other projects. Project sponsors need to know whether the project is worth
going forward or it&amp;#39;s time to stop it and do something else. That&amp;#39;s what
they hire project managers for. This is the only reason of that millions
of PMs existence &amp;mdash; to predict the future so that we were able to
kill our projects before they kill us (read &amp;quot;eat all our resources&amp;quot;).&lt;/p&gt;

&lt;p&gt;You may ask &amp;mdash; what about the coordinating part? What about
&lt;a href=&quot;/2015/01/08/morning-standup-meetings.html&quot;&gt;morning standups&lt;/a&gt;?
What about walking around the office and motivating all the
&lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;office slaves&lt;/a&gt;
so that they don&amp;#39;t get lazy? Isn&amp;#39;t it the primary responsibility of a PM?&lt;/p&gt;

&lt;p&gt;Not really. This is what a PM does in order to better understand the situation
and predict the future. But it&amp;#39;s not what a PM is paid for.
Indeed, a bad PM goes around the office and calls
&lt;a href=&quot;/2015/07/13/meetings-are-legalized-robbery.html&quot;&gt;multiple meetings&lt;/a&gt;
a day. This is also known as &amp;quot;staying on top of things&amp;quot; &amp;mdash;
a perfect term to define an amateur PM. A bad PM &lt;em&gt;becomes&lt;/em&gt; the future, instead
of predicting it. He &lt;a href=&quot;/2015/09/22/micromanagement.html&quot;&gt;micromanages&lt;/a&gt;
the team by telling everybody what to do, since this is the easiest way to
know what will happen and when, in the short-term. But the long-term future
stays absolutely unclear. A bad PM mostly relies on expert judgement, just
like you did while making that coffee.&lt;/p&gt;

&lt;p&gt;A good project manager is a completely different creature. A good PM
finds a way to &lt;em&gt;organize&lt;/em&gt; resources in such a way that their future
becomes &lt;em&gt;predictable&lt;/em&gt;. The key word here is &amp;quot;organize.&amp;quot; A good PM organizes
people, money, time, risks, stakeholders, and many other things. He uses
planning and budgeting software in order to better see the future. But he
doesn&amp;#39;t become the future and he doesn&amp;#39;t &lt;em&gt;build&lt;/em&gt; the future. His people do that,
he just &lt;em&gt;observes&lt;/em&gt;. He only collects information from many possible sources
and estimates what will happen, how much it will cost and who will
suffer most and least. At any moment in time, he &lt;em&gt;knows&lt;/em&gt; exactly when the project
will be finished, how much it will spend, how many results it will produce,
what the quality will be, and what the accuracy of that prediction is.&lt;/p&gt;

&lt;p&gt;A good PM doesn&amp;#39;t personally give orders to the team and
doesn&amp;#39;t meet people to tell them what to do. Instead, he makes sure
that all communication is happening through
a &lt;strong&gt;project management information system&lt;/strong&gt; (PMIS). Moreover, in a perfectly
organized project, a PM won&amp;#39;t even need to give any orders to the team. Work
orders will be created, approved, assigned and verified by the team itself.
The PM will make sure that the workflow is seamless and disciplined. But he
won&amp;#39;t be personally responsible for telling people what to do.&lt;/p&gt;

&lt;p&gt;A perfect PM won&amp;#39;t even be visible to the team. Everything will be obvious
and clear: plans will be available, work orders explicitly defined,
risks identified and documented, concerns properly reported, stakeholders
informed in time, etc. This may sound like utopia, but that&amp;#39;s the
true meaning of a &amp;quot;project manager&amp;quot; role.&lt;/p&gt;

&lt;p&gt;I believe it&amp;#39;s already obvious that project management has very little to do
with leadership. They are just two &lt;em&gt;orthogonal&lt;/em&gt; skill sets. I would say that
a perfect PM won&amp;#39;t even need any leadership skills, while a lousy PM will need
a lot of them. As far as I understand, being a leader means having enough
inner power (also known as &amp;quot;charisma&amp;quot;) to make people do what you need. But that&amp;#39;s
totally against what we just discussed. A project manager doesn&amp;#39;t want people
do what&amp;#39;s needed because of his charisma. Instead, he wants people to be
leaders of their own tasks. They have to move forward driven by their own
motivation and selfish interests, according to the plans and rules defined
by the PM. A charismatic project manager will inevitably replace the rules
by his or her own personality and the entire idea of project management will
be ruined.&lt;/p&gt;

&lt;p&gt;This is my understanding of project management.&lt;/p&gt;</content><category term="management" /><summary>A project manager is very often confused with a leader. However, they are two
very different things. A project manager is the one who predicts the future,
while a leader is the one who builds it. And, in my opinion, a perfect
project manager is much more valuable for a project than a leader. If a
leader is valuable at all...</summary></entry><entry><title>What to Worry About in Convertible Notes</title><link href="http://www.yegor256.com/2016/05/17/convertible-notes.html" rel="alternate" type="text/html" title="What to Worry About in Convertible Notes" /><published>2016-05-17T00:00:00+00:00</published><updated>2016-05-17T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/05/17/convertible-notes</id><content type="html" xml:base="http://www.yegor256.com/2016/05/17/convertible-notes.html">&lt;p&gt;&amp;quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Convertible_bond&quot;&gt;Convertible Notes&lt;/a&gt;&amp;quot;
is what you most likely will hear the first
time you get money for your first startup. They will give you
cash asking to give them the convertible notes (or SAFE,
which is very similar). Convertible notes are just a few pages of paper
with two signatures at the bottom. Not too much to worry about.
It&amp;#39;s basically a contract between your startup and an investor.
Let&amp;#39;s see what exactly it says and what you, as a founder,
should pay attention to.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F05%2Fthe-godfather-iii.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;The Godfather: Part III (1990) by Francis Ford Coppola&#39;/&gt;&lt;figcaption&gt;The Godfather: Part III (1990) by Francis Ford Coppola&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;why-not-equity&quot;&gt;Why Not Equity?&lt;/h2&gt;

&lt;p&gt;The first question is why convertible notes? Why not just shares of stock?
And what the hell are &amp;quot;shares of stock&amp;quot; in the first place, right? Basically,
there are two questions in each business or in any group activity, be it
a new mobile app, a multi-national corporation or a bank robbery:
1) who is the boss, and 2) who gets the profit. To regulate that process
&amp;quot;shares of stock&amp;quot; were invented
(if you know who invented them and when, let me know).&lt;/p&gt;

&lt;p&gt;Say we&amp;#39;re planning to &lt;del&gt;rob a bank&lt;/del&gt; create a Facebook killer. There are three
of us. We print three papers, each of which says: &amp;quot;whoever holds this paper
has one vote and will get an equal part of the profit.&amp;quot; How does that sound? Each of us
has the same paper. When it&amp;#39;s time to decide whether we use Java or PHP,
we sit together, show our papers and vote. One vote for Java, two for PHP &amp;mdash;
the decision is made, we will use PHP. When our startup finally dies
and it&amp;#39;s time to decide what to do with the domain name, we sell it for
$300 and give $100 to each holder of that paper, since there are just three
papers and they have equal rights.&lt;/p&gt;

&lt;p&gt;Thus, basically, each share of stock (this is an official name of that piece
of paper) is a &lt;strong&gt;promise&lt;/strong&gt;. A promise of some rights to vote and to make
profit. The company (our startup) is making us a promise.&lt;/p&gt;

&lt;p&gt;By the way, I can sell my share of stock to my friend. When it&amp;#39;s time to
decide whether it&amp;#39;s Java or PHP, he will show up and vote. You may not like
that, since you are seeing this dude for the first time, but you will have to obey &amp;mdash;
he&amp;#39;s got that paper in his hands. That&amp;#39;s why shares of stock are also
called &lt;strong&gt;equity&lt;/strong&gt;. I can sell them just like I can sell my car. No matter who
owns them, he or she has exactly the same rights as the original or the
previous owner. They are assets.&lt;/p&gt;

&lt;p&gt;Usually, there are millions or billions of shares of stock. When a company
starts, it prints, say, a million of them, giving 200,000 to each co-founder
and leaving 400,000 in the so-called &amp;quot;pool.&amp;quot; Later, an investor shows up
and says: &amp;quot;I will put $500,000 to the bank account of the company and the
company will print 300,000 more shares of stock for me.&amp;quot; The amount of shares
&amp;quot;issued&amp;quot; is growing. For example, at the time of writing there are
&lt;a href=&quot;https://www.google.com/finance?cid=358464&quot;&gt;7.91 billion&lt;/a&gt;
shares with Microsoft name of them. Microsoft Corporation has
been printing extra shares &lt;a href=&quot;https://www.microsoft.com/en-us/Investor/FAQ.aspx&quot;&gt;nine times&lt;/a&gt; after their IPO in 1986.
When Bill Gates founded the company in April 1975, he had 500K shares, which were equal
to 50% (I&amp;#39;m guessing, do you know exact numbers?).
Now he holds &lt;a href=&quot;http://www.investopedia.com/articles/investing/122215/top-4-microsoft-shareholders.asp&quot;&gt;nearly 223M&lt;/a&gt;,
which is just 2.8% of the total.&lt;/p&gt;

&lt;p&gt;Now, the most annoying part. In reality, shares are not just pieces of paper
with a few sentences on them, like in our example above. They are big legal
documents that explain exactly how their holder can vote and exactly when and how
he or she will get the profit. There are tons of legal clauses, which
usually take weeks or months of discussions, between the company and
investors. In reality, an investor says: &amp;quot;I will put $500,000 to the bank
account of the company and the company will print 300,000 more shares of stock for me,
&lt;em&gt;terms and conditions of which my lawyer will discuss with you&lt;/em&gt;.&amp;quot;&lt;/p&gt;

&lt;p&gt;If we&amp;#39;re talking about $500K, you will have no problem meeting that lawyers.
However, if it&amp;#39;s just $25K... To make life easier for smaller investments,
convertible notes were invented (well, there were
&lt;a href=&quot;http://techcrunch.com/2012/04/07/convertible-note-seed-financings/&quot;&gt;a few other reasons&lt;/a&gt;).
They are &lt;strong&gt;not equity&lt;/strong&gt;. Investors that
have convertible notes can&amp;#39;t vote. They can&amp;#39;t sell convertible notes and they
can&amp;#39;t get any profit from the company. So, what they are for then? I&amp;#39;ll explain
in a minute. My goal so far was to show why young companies don&amp;#39;t want
to deal with shares of stock &amp;mdash; because of greedy lawyers and, of
course, the complexity of terms and conditions.&lt;/p&gt;

&lt;h2 id=&quot;what-are-convertible-notes&quot;&gt;What are Convertible Notes?&lt;/h2&gt;

&lt;p&gt;They are just debts. They are not real investments. The company simply
borrows money from an investor, promising to return them back. Why not
just call them &amp;quot;money borrowing notes?&amp;quot; Because investors don&amp;#39;t want their
money back. They want equity.&lt;/p&gt;

&lt;p&gt;So here is how it works. Say I&amp;#39;m an investor, giving you $25K. You give
me convertible notes. Then we wait. We wait until a more serious investor
shows up and gives you a bigger sum of money. And it&amp;#39;s not just a matter
of amount. What&amp;#39;s important is that this investor must get shares of stock
from you. This will be called &amp;quot;equity financing.&amp;quot; You get finance and give
away equity. When this happens, I show up, give you the convertible notes
and you give me equity. On the same terms as you gave to that investor.
I won&amp;#39;t send you my lawyers, you won&amp;#39;t discuss terms and conditions. You will
just &lt;strong&gt;convert&lt;/strong&gt; my notes to equity, on the same terms as agreed with that
investor. Plain and simple.&lt;/p&gt;

&lt;p&gt;A practical example. There is you and your co-founder. You guys have
1,000,000 shares of stock, 500K issued to each of you. I give you $25K, you give
me convertible notes. In a few months, an investor comes in and
your company issues 100,000 shares and sells them for $400,000
(your post a $400K check to the bank account of your company).
This means that now there are 1,100,000 shares in total. You just sold 100K of them
with the price of $4 per share. Now it&amp;#39;s time to convert my convertible notes.
You will have to give me 6,250 shares and I&amp;#39;ll return you the notes.
Thus, in the end, there will be 1,106,250 shares total and your company&amp;#39;s post-money
valuation will be $4,425,000. Got the math?&lt;/p&gt;

&lt;p&gt;My shares will have exacty the same
&amp;quot;rights, privileges, preferences and restrictions&amp;quot; as the shares you
gave to the investor. And I won&amp;#39;t have an option to negotiate. I will just
receive them and accept.&lt;/p&gt;

&lt;p&gt;One more thing. If that investor will never show up, you still owe me $25K.
A debt is a debt.&lt;/p&gt;

&lt;p&gt;Now, since we know what convertible notes are for and how they work, let&amp;#39;s
see what is important to pay attention to. There are just a few things, but
they are really important.&lt;/p&gt;

&lt;h2 id=&quot;the-valuation-cap&quot;&gt;The Valuation Cap&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s take a look again at the example above. You are selling 100,000 shares
for $4. This technically means that the shares the two of you had, before the
investor showed up, suddenly got some value, right? They were just papers,
but now someone is ready to pay $4 for each of them.&lt;/p&gt;

&lt;p&gt;This means that each of you, being a holder of 500K shares, owns equity for
$2,000,000 (I&amp;#39;m just multiplying 500K by $4). Also, this means that the
valuation of the company is $4M. I&amp;#39;m just multiplying the total amount
of shares, which is a million, by the price of each share. This valuation
is also called &lt;strong&gt;pre-money valuation&lt;/strong&gt; (the valuation before that $400K
landed at your bank account).&lt;/p&gt;

&lt;p&gt;There is also a post-money valuation, which, as you can imagine, is calculated
by multiplying total amount of shares after the investment, by their price. In
this case, it&amp;#39;s $4.4M (1,100,000 by $4).&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s see what happeed in our example with my $25K. I gave them to you when
your company was very young. Your valuation was rather low, because you
barely had any results. You needed small cash to pay your bills and fill
your car with gas. The valuation was definitely lower than $4M. So why are
you converting my notes as if at the time of my investment the valuation
was already that high. It&amp;#39;s not fair. I want to get more than 6,250 shares.
I want my part to be calculated as if your valuation was, say, $500K. In that
case, I will get 20,000 shares. That&amp;#39;s fair. The investor will pay $400K to get
100K shares, but I paid just $25K to get 20K of them. I earned more equity,
because my risk was way higher.&lt;/p&gt;

&lt;p&gt;To make that math happen, we put a &amp;quot;valuation cap&amp;quot; into the convertible notes.
There will be a clause that guarantees that no matter what will be that
pre-money valuation at the moment of &amp;quot;equity financing&amp;quot;, in my formula
it will stay $500K.&lt;/p&gt;

&lt;p&gt;Obviously, for you as a founder, an ideal situation would be to have &amp;quot;no cap&amp;quot;
convertible notes. That&amp;#39;s the first thing you should try to insist on:
no cap! Most investors will smile back and disagree. It&amp;#39;s only logical. Then,
try to negotiate the value of the cap. Try to make it as big as possible.&lt;/p&gt;

&lt;p&gt;But remember, it&amp;#39;s better to have money and a small cap than
a big cap and no money. Does it sound too obvious?&lt;/p&gt;

&lt;h2 id=&quot;the-discount&quot;&gt;The Discount&lt;/h2&gt;

&lt;p&gt;Here is the same problem, but a different instrument. Again, as an investor,
I don&amp;#39;t like that you&amp;#39;re selling me shares for $4. This is the price you
are giving to the investor who came way later than myself. Their risks
are way lower. I want a discount!&lt;/p&gt;

&lt;p&gt;We can put a clause into convertible notes, which will say that the price
for me will be same as for the investor at the moment of &amp;quot;equity financing&amp;quot;,
minus, say, a 50% &lt;strong&gt;discount&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Again, as a founder, you should insist on &amp;quot;no discount&amp;quot; convertible notes. Will
I agree? Probably not. Especially if there is no cap. Try to negotiate
a smaller discount. Maybe 10%, just to give me a feeling of appreciation.&lt;/p&gt;

&lt;h2 id=&quot;the-interest&quot;&gt;The Interest&lt;/h2&gt;

&lt;p&gt;Remember that by signing convertible notes and sending you cash, investors
are basically &lt;strong&gt;lending&lt;/strong&gt; you money. You owe that $25K to them. And some
of them will ask for an interest. And the interest may be payable annually.
Say, 5% per year. That means that you will have to send them a check
for $1,250 every year, no matter how your startup is doing.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s only logical for them, but is totally against you. Do not agree
to pay any interest.&lt;/p&gt;

&lt;h2 id=&quot;the-maturity-date&quot;&gt;The Maturity Date&lt;/h2&gt;

&lt;p&gt;Some investors are ready to wait until that &amp;quot;equity financing&amp;quot; moment for
as much as necessary. Others may demand you to pay them back on a so called
&amp;quot;maturity date.&amp;quot; Pay cash, with the interest. This date will usually be somewhere
far ahead, like &amp;quot;three years from now.&amp;quot; But don&amp;#39;t feel too relaxed, this
day will come faster than you expect.&lt;/p&gt;

&lt;p&gt;Try not to give convertible notes with a maturity date to anyone.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.ycombinator.com/announcing-the-safe-a-replacement-for-convertible-notes&quot;&gt;SAFE&lt;/a&gt;
is a form of convertible notes, introduced by &lt;a href=&quot;http://www.ycombinator.com&quot;&gt;YC&lt;/a&gt;,
which doesn&amp;#39;t have a maturity date at all. This technically means that
you don&amp;#39;t have to pay them anything back. Well, there is only one situation
when you have to pay &amp;mdash; in case your startup dies. In that case, you will
have to pay investors as much as you can, using the cash you still have
in your bank account. Most likely there will be nothing, so don&amp;#39;t worry.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;There are other less usual or less important elements of convertible notes, which
you most likely won&amp;#39;t ever see or should not worry about, like pro-data rights,
for example. Just focus on the things listed above and you will be good.&lt;/p&gt;</content><category term="management" /><category term="startup" /><summary>&amp;quot;Convertible Notes&amp;quot;
is what you most likely will hear the first
time you get money for your first startup. They will give you
cash asking to give them the convertible notes (or SAFE,
which is very similar). Convertible notes are just a few pages of paper
with two signatures at the bottom. Not too much to worry about.
It&amp;#39;s basically a contract between your startup and an investor.
Let&amp;#39;s see what exactly it says and what you, as a founder,
should pay attention to.</summary></entry><entry><title>Keynote Clowns</title><link href="http://www.yegor256.com/2016/05/10/keynote-clowns.html" rel="alternate" type="text/html" title="Keynote Clowns" /><published>2016-05-10T00:00:00+00:00</published><updated>2016-05-10T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/05/10/keynote-clowns</id><content type="html" xml:base="http://www.yegor256.com/2016/05/10/keynote-clowns.html">&lt;p&gt;Over the last six months, I&amp;#39;ve attended 18 conferences and heard over 30
keynote sessions, mostly about software development and management.
I think I now know all the secrets of a successful keynote speaker.
It doesn&amp;#39;t look so difficult to become one. Here are my thoughts.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F05%2Fbean.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Bean (1997) by Mel Smith&#39;/&gt;&lt;figcaption&gt;Bean (1997) by Mel Smith&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Be obvious!&lt;/strong&gt;
Don&amp;#39;t take a chance by suggesting something new. It&amp;#39;s risky and
some people may disagree with you. That&amp;#39;s not good. The goal is to have
everybody in the room completely agree with what you&amp;#39;re saying. That&amp;#39;s how
you make a good speech. The audience will be comfortable and relaxed, and you
will have no risk of being questioned afterwards. A few safe headline examples:
&amp;quot;trust is very important&amp;quot; or &amp;quot;software must be stable.&amp;quot;
Everybody will be nodding their heads &amp;mdash; that&amp;#39;s all you need.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Joke!&lt;/strong&gt;
You must make them laugh. You must open with a joke and continue with many
of them. Prepare them carefully. Just google &amp;quot;good keynote jokes&amp;quot; and use
what smart people recommend. A well-prepared collection of jokes is much
more valuable than the content you will be talking about. Nobody will remember
the content, but the jokes will definitely be re-tweeted. When a good speaker
is talking, the room is laughing every 60 seconds.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Swear!&lt;/strong&gt;
Don&amp;#39;t be too formal and boring, show a slide with a picture of
a naked butt every once in a while. Everybody will understand that you&amp;#39;re not only a
speaker but also a good friend. Also, your language should be rather loose.
Pretent you&amp;#39;re talking to a friend over a pint of beer. Remember, the goal
is to be funny.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Repeat!&lt;/strong&gt;
Always bring the same content with you, to all conferences. It&amp;#39;s easier for
everybody. First, conference organizers will know for sure what will you be
talking about. They can even watch your 4-year-old video-recorded
presentation and see exactly what words and slides you&amp;#39;re planning to use.
Second, you won&amp;#39;t be nervous, since you&amp;#39;ll be saying the same jokes
over and over again. Everybody wins.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kitties!&lt;/strong&gt;
Cute kitties. We all love them! Attach them somehow to your content. It is
not really important whether they are related or not. You must show love.
Instead of cats you can use a picture of your 2-y.o. daugther or yourself
in a primary school. It has to be something sweet and adorable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keep talking!&lt;/strong&gt;
A good keynote speech fills the entire 60 minutes, leaving
absolutely no time for questions. Actually, a perfect speaker will be interrupted
after the 145th slide and will say that if anyone wants to know more, there
is always a place near the restroom, let&amp;#39;s go there and continue. Thus, be
focused on your slides and try to avoid questions at the end &amp;mdash; they may create
a negative impression of you if you mess up answering their questions. They came to
listen to you, not to ask questions &amp;mdash; keep talking.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;On a more serious note, I&amp;#39;m very disappointed by what I&amp;#39;ve seen
in almost all conferences so far. These keynote speakers are in most
cases just making money, delivering the same &amp;quot;fun&amp;quot; again and again.
They make $2-3K a speech and we, the listeners, get absolutely
nothing new out of them.&lt;/p&gt;

&lt;p&gt;Conference organizers keep inviting them, just
because of the names. And we keep attending that conferences also just
because of the names. But do these names really mean anything? I don&amp;#39;t think
so. These guys are, in most cases, just retired losers
with good presentation skills.&lt;/p&gt;

&lt;p&gt;It would be much better to spend the money conferences waste on the big-names
for training practical speakers from the trenches, with really fresh and
interesting content. As far as I understand, conference organizers are just too
lazy to do that. It&amp;#39;s just easier to buy a &amp;quot;proven&amp;quot; clown.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s sad.&lt;/p&gt;</content><category term="mood" /><category term="sarcasm" /><summary>Over the last six months, I&amp;#39;ve attended 18 conferences and heard over 30
keynote sessions, mostly about software development and management.
I think I now know all the secrets of a successful keynote speaker.
It doesn&amp;#39;t look so difficult to become one. Here are my thoughts.</summary></entry><entry><title>Test Methods Must Share Nothing</title><link href="http://www.yegor256.com/2016/05/03/test-methods-must-share-nothing.html" rel="alternate" type="text/html" title="Test Methods Must Share Nothing" /><published>2016-05-03T00:00:00+00:00</published><updated>2016-05-03T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/05/03/test-methods-must-share-nothing</id><content type="html" xml:base="http://www.yegor256.com/2016/05/03/test-methods-must-share-nothing.html">&lt;p&gt;Constants... I wrote about them
&lt;a href=&quot;/2015/07/06/public-static-literals.html&quot;&gt;some time ago&lt;/a&gt;, mostly
saying that they are a bad thing, if being public. They reduce duplication,
but introduce coupling. A much better way to get rid of duplication is
by creating new classes or methods &amp;mdash; a traditional OOP method. This seems to make
sense and in our projects I see less and less public constants. In
some projects we don&amp;#39;t have them at all. But one thing still bothers me:
unit tests. Most programmers seem to think that when static analysis says
that there are too many similar literals in the same file, the best way
to get rid of them is via a private static literal. This is just wrong.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Unit tests, naturally, duplicate a lot of code. Test methods contain
similar or almost identical functionality and this is almost inevitable. Well,
we can use more of that &lt;a href=&quot;http://junit.sourceforge.net/javadoc/org/junit/Before.html&quot;&gt;&lt;code&gt;@Before&lt;/code&gt;&lt;/a&gt;
and &lt;a href=&quot;http://junit.sourceforge.net/javadoc/org/junit/Before.html&quot;&gt;&lt;code&gt;@BeforeClass&lt;/code&gt;&lt;/a&gt; features,
but sometimes it&amp;#39;s just not possible. We may have, say, 20 test methods
in one &lt;code&gt;FooTest.java&lt;/code&gt; file. Preparing all objects in one &amp;quot;before&amp;quot; is not
possible. So we have to do certain things again and again in our test
methods.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s take a look at one of the classes in our &lt;a href=&quot;http://www.takes.org&quot;&gt;Takes Framework&lt;/a&gt;:
&lt;a href=&quot;https://github.com/yegor256/takes/blob/0.32.7/src/test/java/org/takes/misc/VerboseListTest.java&quot;&gt;&lt;code&gt;VerboseListTest&lt;/code&gt;&lt;/a&gt;.
It&amp;#39;s a unit test and it has a problem, which I&amp;#39;m trying to tell you about.
Look at that &lt;a href=&quot;https://github.com/yegor256/takes/blob/0.32.7/src/test/java/org/takes/misc/VerboseListTest.java#L54&quot;&gt;&lt;code&gt;MSG&lt;/code&gt;&lt;/a&gt;
private literal. It is used for the first time in
&lt;a href=&quot;https://github.com/yegor256/takes/blob/0.32.7/src/test/java/org/takes/misc/VerboseListTest.java#L77-L80&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; method
as an argument of an object constructor and then in a few
test methods to check how that object behaves. Let me simplify that
code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MSG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;something&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Before&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FooTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MSG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simplyWorks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FooTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MSG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simplyWorksAgain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FooTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MSG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is basically what is happening in
&lt;a href=&quot;https://github.com/yegor256/takes/blob/0.32.7/src/test/java/org/takes/misc/VerboseListTest.java&quot;&gt;&lt;code&gt;VerboseListTest&lt;/code&gt;&lt;/a&gt;
and it&amp;#39;s very wrong. Why? Because this shared literal &lt;code&gt;MSG&lt;/code&gt;
introduced an unnatural coupling between these two test methods.
They have nothing in common, because they test different behaviors
of class &lt;code&gt;Foo&lt;/code&gt;. But this private constant ties them together. Now they are
somehow related.&lt;/p&gt;

&lt;p&gt;If and when I want to modify one of the test methods, I may need
to modify the other one too. Say I want to see how &lt;code&gt;doSomethingElse()&lt;/code&gt;
behaves if the encapsulated message is an empty string. What do I do?
I change the value of the constant &lt;code&gt;FooTest.MSG&lt;/code&gt;, which is used by
another test method. This is called coupling. And it&amp;#39;s a bad thing.&lt;/p&gt;

&lt;p&gt;What do we do? Well, we can use that &lt;code&gt;&amp;quot;something&amp;quot;&lt;/code&gt; string literal in
both test methods:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simplyWorks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;something&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;something&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simplyWorksAgain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;something&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;something&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you see, I got rid of that &lt;code&gt;setUp()&lt;/code&gt; method and the private static
literal &lt;code&gt;MSG&lt;/code&gt;. What do we have now? Code duplication. String &lt;code&gt;&amp;quot;something&amp;quot;&lt;/code&gt;
shows up four times in the test class. No static analyzers will tolerate that.
Moreover, there are seven (!) test methods in
&lt;a href=&quot;https://github.com/yegor256/takes/blob/0.32.7/src/test/java/org/takes/misc/VerboseListTest.java&quot;&gt;&lt;code&gt;VerboseListTest&lt;/code&gt;&lt;/a&gt;,
which are using &lt;code&gt;MSG&lt;/code&gt;. Thus, we will have 14 occurences of &lt;code&gt;&amp;quot;something&amp;quot;&lt;/code&gt;, right?
Yes, that&amp;#39;s right and that&amp;#39;s most likely why one of authors of this
test case introduced the constant &amp;mdash; to get rid of duplication.
BTW, &lt;a href=&quot;https://github.com/Happy-Neko&quot;&gt;@Happy-Neko&lt;/a&gt; did that in pull request
&lt;a href=&quot;https://github.com/yegor256/takes/pull/513&quot;&gt;#513&lt;/a&gt;,
[@carlosmiranda](&lt;a href=&quot;https://github.com/carlosmiranda&quot;&gt;https://github.com/carlosmiranda&lt;/a&gt;] did reviewed the code and I
approved the changes. So, three people made/approved that mistake, including myself.&lt;/p&gt;

&lt;p&gt;So what is the right approach that will avoid code duplication and
at the same time won&amp;#39;t introduce coupling? Here it is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simplyWorks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;something&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simplyWorksAgain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;something else&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These literals must be different. This is what any static analyzer is
saying when it sees &lt;code&gt;&amp;quot;something&amp;quot;&lt;/code&gt; in so many places. It questions us &amp;mdash;
why are they the same? Is it really so important to use &lt;code&gt;&amp;quot;something&amp;quot;&lt;/code&gt; everywhere?
Why can&amp;#39;t you use different literals? Of course we can. And we should.&lt;/p&gt;

&lt;p&gt;The bottom line is that each test method must have its own set of data and objects. They must
not be shared between test methods ever. Test methods must always be
independent, having nothing in common.&lt;/p&gt;

&lt;p&gt;Having that in mind, we can easily conclude that methods like &lt;code&gt;setUp()&lt;/code&gt; or
any shared variables in test classes are &lt;strong&gt;evil&lt;/strong&gt;. They must not be used
and simply must not exist. I think that their invention in JUnit caused
a lot of harm to Java code.&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>Constants... I wrote about them
some time ago, mostly
saying that they are a bad thing, if being public. They reduce duplication,
but introduce coupling. A much better way to get rid of duplication is
by creating new classes or methods &amp;mdash; a traditional OOP method. This seems to make
sense and in our projects I see less and less public constants. In
some projects we don&amp;#39;t have them at all. But one thing still bothers me:
unit tests. Most programmers seem to think that when static analysis says
that there are too many similar literals in the same file, the best way
to get rid of them is via a private static literal. This is just wrong.</summary></entry><entry><title>Why InputStream Design Is Wrong</title><link href="http://www.yegor256.com/2016/04/26/why-inputstream-design-is-wrong.html" rel="alternate" type="text/html" title="Why InputStream Design Is Wrong" /><published>2016-04-26T00:00:00+00:00</published><updated>2016-04-26T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/26/why-inputstream-design-is-wrong</id><content type="html" xml:base="http://www.yegor256.com/2016/04/26/why-inputstream-design-is-wrong.html">&lt;p&gt;It&amp;#39;s not just about &lt;code&gt;InputSteam&lt;/code&gt;, this class is a good
example of a bad design. I&amp;#39;m talking about three overloaded
methods &lt;code&gt;read()&lt;/code&gt;. I&amp;#39;ve mentioned this problem in Section 2.9
of &lt;a href=&quot;/elegant-objects.html&quot;&gt;Elegant Objects&lt;/a&gt;. In a few words,
I strongly believe that interfaces must be &amp;quot;functionality poor.&amp;quot;
&lt;code&gt;InputStream&lt;/code&gt; should have been an interface in the first place
and it should have had a single method &lt;code&gt;read(byte[])&lt;/code&gt;. Then if
its authors wanted to give us extra functionality, they should have
created supplementary &amp;quot;smart&amp;quot; classes.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F04%2Fa-serious-man.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;A Serious Man (2009) by Coen Brothers&#39;/&gt;&lt;figcaption&gt;A Serious Man (2009) by Coen Brothers&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This is how it looks now:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What&amp;#39;s wrong? It&amp;#39;s very convenient to have the ability to read
a single byte, an array of bytes or even an array of bytes
with a direct positioning into a specific place in the buffer!&lt;/p&gt;

&lt;p&gt;However, we are still lacking a few methods: for reading the bytes and
immediately saving into a file, converting to a text with a selected
encoding, sending them by email and posting on Twitter. It would be
great to have the features too, right in the poor &lt;code&gt;InputStream&lt;/code&gt;.
I hope the Oracle Java team is working on them now.&lt;/p&gt;

&lt;p&gt;In the mean time, let&amp;#39;s see what exactly is wrong with what these
bright engineers designed for us already. Or maybe let me show
how I would design &lt;code&gt;InputStream&lt;/code&gt; and we&amp;#39;ll compare:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is my design. The &lt;code&gt;InputStream&lt;/code&gt; is responsible for reading
bytes from the stream. There is one single method for this
feature. Is it convenient for everybody? Does it read and post
on Twitter? Not yet. Do we need that functionality? Of course we do,
but it doesn&amp;#39;t mean that we will add it to the interface. Instead,
we will create supplementary &amp;quot;smart&amp;quot; class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Smart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Smart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we want to read a single byte from the stream. Here is how:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/a.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Smart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The functionality of reading a single byte is outside of &lt;code&gt;InputStream&lt;/code&gt;,
because this is not its business. The stream doesn&amp;#39;t need to know
how to manage the data after it is read. All the stream
is &lt;strong&gt;responsible&lt;/strong&gt; for is reading, not parsing or manipulating afterwards.&lt;/p&gt;

&lt;p&gt;Interfaces must be small.&lt;/p&gt;

&lt;p&gt;Obviously, method overloading in interfaces is a code smell. An interface
with more than &lt;strong&gt;three methods&lt;/strong&gt; is a good candidate for refactoring. If methods
overload each other &amp;mdash; it&amp;#39;s serious trouble.&lt;/p&gt;

&lt;p&gt;Interfaces must be small!&lt;/p&gt;

&lt;p&gt;You may say that the creators of &lt;code&gt;InputStream&lt;/code&gt; cared about performance, that&amp;#39;s
why allowed us to implement &lt;code&gt;read()&lt;/code&gt; in three different forms. Then I have
to ask again, why not create a method for reading and immediately post it
on Twitter? That would be fantastically fast. Isn&amp;#39;t it what we all want?
A fast software which nobody has any desire to read or maintain.&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>It&amp;#39;s not just about InputSteam, this class is a good
example of a bad design. I&amp;#39;m talking about three overloaded
methods read(). I&amp;#39;ve mentioned this problem in Section 2.9
of Elegant Objects. In a few words,
I strongly believe that interfaces must be &amp;quot;functionality poor.&amp;quot;
InputStream should have been an interface in the first place
and it should have had a single method read(byte[]). Then if
its authors wanted to give us extra functionality, they should have
created supplementary &amp;quot;smart&amp;quot; classes.</summary></entry><entry><title>Object Behavior Must Not Be Configurable</title><link href="http://www.yegor256.com/2016/04/19/object-must-not-be-configurable.html" rel="alternate" type="text/html" title="Object Behavior Must Not Be Configurable" /><published>2016-04-19T00:00:00+00:00</published><updated>2016-04-19T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/19/object-must-not-be-configurable</id><content type="html" xml:base="http://www.yegor256.com/2016/04/19/object-must-not-be-configurable.html">&lt;p&gt;Using object properties as configuration parameters is a very common mistake we keep making mostly because our objects
are mutable &amp;mdash; we &lt;strong&gt;configure&lt;/strong&gt; them. We change their behavior by
injecting parameters or even entire settings/configuration objects
into them. Do I have to say that it&amp;#39;s abusive and disrespectful
from a &lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;philosophical&lt;/a&gt;
point of view? I can, but let&amp;#39;s take a look at
it from a practical perspective.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F04%2Fthe-take.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;The Take (2009) by David Drury&#39;/&gt;&lt;figcaption&gt;The Take (2009) by David Drury&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let&amp;#39;s say there is a class that is supposed to read a web page and
return its content:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Looks simple and straight-forward, right? Yes, it&amp;#39;s a rather cohesive
and solid class. Here is how we use it to read the content of Google
front page:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.google.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Everything is fine until we start making this class more powerful.
Let&amp;#39;s say we want to configure the encoding. We don&amp;#39;t always want to use &lt;code&gt;&amp;quot;UTF-8&amp;quot;&lt;/code&gt;.
We want it to be configurable. Here is what we do:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Done, the encoding is encapsulated and configurable. Now, let&amp;#39;s say we
want to change the behavior of the class for the situation of an empty
page. If an empty page is loaded, we want to return &lt;code&gt;&amp;quot;&amp;lt;html/&amp;gt;&amp;quot;&lt;/code&gt;. But not
always. We want this to be configurable. Here is what we do:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alwaysHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alwaysHtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alwaysHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;html/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The class is getting bigger, huh? It&amp;#39;s great, we&amp;#39;re good programmers and our
code must be complex, right? The more complex it is, the better programmers
we are! I&amp;#39;m being sarcastic. Definitely
&lt;a href=&quot;/2015/06/29/simple-diagrams.html&quot;&gt;not&lt;/a&gt;! But let&amp;#39;s move on. Now
we want our class to proceed anyway, even if the encoding is not
supported on the current platform:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alwaysHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encodeAnyway&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alwaysHtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encodeAnyway&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toByteArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encodeAnyway&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alwaysHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;html/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The class is growing and becoming more and more powerful! Now it&amp;#39;s time
to introduce a new class, which we will call &lt;code&gt;PageSettings&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PageSettings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PageSettings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toByteArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEncoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEncodeAnyway&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isAlwaysHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;html/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Class &lt;code&gt;PageSettings&lt;/code&gt; is basically a holder of parameters, without any
behavior. It has getters, which give us access to the parameters:
&lt;code&gt;isEncodeAnyway()&lt;/code&gt;, &lt;code&gt;isAlwaysHtml()&lt;/code&gt;, and &lt;code&gt;getEncoding()&lt;/code&gt;. If we keep
going in this direction, there could be a few dozen configuration settings
in that class. This may look very convenient and
is a very typical pattern in Java world. For example,
look at
&lt;a href=&quot;https://hadoop.apache.org/docs/r2.4.1/api/org/apache/hadoop/mapred/JobConf.html&quot;&gt;&lt;code&gt;JobConf&lt;/code&gt;&lt;/a&gt;
from Hadoop.
This is how we will call our highly configurable &lt;code&gt;Page&lt;/code&gt;
(I&amp;#39;m assuming &lt;code&gt;PageSettings&lt;/code&gt; is immutable):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.google.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PageSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withEncoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ISO_8859_1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withAlwaysHtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withEncodeAnyway&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;{However, no matter how convenient it may look at first glance,
this approach is &lt;strong&gt;very wrong&lt;/strong&gt;. Mostly because it encourages us
to make big and non-cohesive objects. They grow in size and become less
testable, less maintainable and less readable.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Encapsulated properties must not be used to change the behavior of an object&lt;/aside&gt;

&lt;p&gt;To prevent that from happening,
I would suggest a simple rule here:
object behaviour should not be configurable.
Or, more technically, encapsulated properties must not be used to
change the behavior of an object.&lt;/p&gt;

&lt;p&gt;Object properties are there only to coordinate the location
of a real-world entity, which the object is representing. The &lt;code&gt;uri&lt;/code&gt; is the
coordinate, while the &lt;code&gt;alwaysHtml&lt;/code&gt; boolean property is a behavior changing
trigger. See the difference?&lt;/p&gt;

&lt;p&gt;So, what should we do instead? What is the right design? We must
use &lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;composable decorators&lt;/a&gt;.
Here is how:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NeverEmptyPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DefaultPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.google.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AlwaysTextPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TextPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;ISO_8859_1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here is how our &lt;code&gt;DefaultPage&lt;/code&gt; would look (yes, I had to change
its design a bit):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DefaultPage&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;DefaultPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toByteArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you see, I&amp;#39;m making it implement interface &lt;code&gt;Page&lt;/code&gt;.
Now &lt;code&gt;TextPage&lt;/code&gt; decorator, which converts an array of bytes to a text using
provided encoding:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TextPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TextPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;encoding&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now the &lt;code&gt;NeverEmptyPage&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NeverEmptyPage&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;NeverEmptyPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;html/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And finally the &lt;code&gt;AlwaysTextPage&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AlwaysTextPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextPage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;AlwaysTextPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextPage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TextPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You may say that &lt;code&gt;AlwaysTextPage&lt;/code&gt; will make two calls to the encapsulated
&lt;code&gt;origin&lt;/code&gt;, in case of an unsupported encoding, which will lead to a duplicated
HTTP request. That&amp;#39;s true and this is by design. We don&amp;#39;t want this
duplicated HTTP roundtrip to happen. Let&amp;#39;s introduce one more class,
which will cache the page fetched (not thread-safe, but it&amp;#39;s not important now):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OncePage&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AtomicReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AtomicReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;OncePage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, our code should look like this (pay attention, I&amp;#39;m now using &lt;code&gt;OncePage&lt;/code&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NeverEmptyPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OncePage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DefaultPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.google.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AlwaysTextPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TextPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;ISO_8859_1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is probably the most code-intensive post on this site so far, but I
hope it&amp;#39;s readable and I managed to convey the idea. Now we have five
classes, each of which is rather small, easy to read and easy to reuse.&lt;/p&gt;

&lt;p&gt;Just follow the rule: never make classes configurable!&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>Using object properties as configuration parameters is a very common mistake we keep making mostly because our objects
are mutable &amp;mdash; we configure them. We change their behavior by
injecting parameters or even entire settings/configuration objects
into them. Do I have to say that it&amp;#39;s abusive and disrespectful
from a philosophical
point of view? I can, but let&amp;#39;s take a look at
it from a practical perspective.</summary></entry><entry><title>Java Annotations Are a Big Mistake</title><link href="http://www.yegor256.com/2016/04/12/java-annotations-are-evil.html" rel="alternate" type="text/html" title="Java Annotations Are a Big Mistake" /><published>2016-04-12T00:00:00+00:00</published><updated>2016-04-12T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/12/java-annotations-are-evil</id><content type="html" xml:base="http://www.yegor256.com/2016/04/12/java-annotations-are-evil.html">&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_annotation&quot;&gt;Annotations&lt;/a&gt;
were introduced in Java 5, and we all got excited. Such a great
instrument to make code shorter! No more Hibernate/Spring XML configuration
files! Just annotations, right there in the code where we need them. No more
&lt;a href=&quot;https://en.wikipedia.org/wiki/Marker_interface_pattern&quot;&gt;marker interfaces&lt;/a&gt;,
just a &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Retention.html&quot;&gt;runtime-retained&lt;/a&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/4296910/&quot;&gt;reflection-discoverable&lt;/a&gt; annotation!
I was excited too. Moreover, I&amp;#39;ve made a few open source libraries which
use annotations heavily. Take &lt;a href=&quot;https://github.com/jcabi/jcabi-aspects&quot;&gt;jcabi-aspects&lt;/a&gt;,
for example. However, I&amp;#39;m not excited any more. Moreover, I believe that
annotations are a big mistake in Java design.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Long story short, there is one big problem with annotations &amp;mdash;
they encourage us to implement
&lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;object&lt;/a&gt;
functionality &lt;strong&gt;outside&lt;/strong&gt; of an object,
which is against the very principle of
&lt;a href=&quot;https://en.wikipedia.org/wiki/Encapsulation_%28computer_programming%29&quot;&gt;encapsulation&lt;/a&gt;.
The object is not solid any more, since its behavior is not defined entirely by its own
methods &amp;mdash; some of its functionality stays elsewhere. Why is it bad? Let&amp;#39;s
see in a few examples.&lt;/p&gt;

&lt;h2 id=&quot;inject&quot;&gt;&lt;code&gt;@Inject&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Say we annotate a property with &lt;code&gt;@Inject&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.inject.Inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Inject&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// some methods here, which use this.db&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we have an injector that knows what to inject:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Injector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;injector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Guice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createInjector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AbstractModule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;jdbc:postgresql:5740/main&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we&amp;#39;re making an instance of class &lt;code&gt;Books&lt;/code&gt; via the container:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;injector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The class &lt;code&gt;Books&lt;/code&gt; has no idea how and who will inject an instance
of class &lt;code&gt;DB&lt;/code&gt; into it. This will happen behind the scenes and outside
of its control. The injection will do it. It may look convenient,
but this attitude causes a lot of damage to the entire code base. The
control is lost (not inverted, but lost!). The object is not in charge
any more. It can&amp;#39;t be responsible for what&amp;#39;s happening to it.&lt;/p&gt;

&lt;p&gt;Instead, here is how this should be done:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// some methods here, which use this.db&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This article explains why Dependency Injection containers are
a wrong idea in the first place:
&lt;a href=&quot;/2014/10/03/di-containers-are-evil.html&quot;&gt;Dependency Injection Containers are Code Polluters&lt;/a&gt;.
Annotations basically provoke us to make the containers and use them.
We move functionality outside of our objects and put it into
containers, or somewhere else. That&amp;#39;s because we don&amp;#39;t want to duplicate the
same code over and over again, right? That&amp;#39;s correct, duplication is
bad, but tearing an object apart is even worse. Way worse. The same is
true about ORM (JPA/Hibernate), where annotations are being actively used.
Check this post, it explains what is wrong about ORM:
&lt;a href=&quot;/2014/12/01/orm-offensive-anti-pattern.html&quot;&gt;ORM Is an Offensive Anti-Pattern&lt;/a&gt;.
Annotations by themselves are not the key motivator, but they help us
and encourage us by tearing objects apart and keeping parts in different
places. They are containers, sessions, managers, controllers, etc.&lt;/p&gt;

&lt;h2 id=&quot;xmlelement&quot;&gt;&lt;code&gt;@XmlElement&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;This is how JAXB
&lt;a href=&quot;/2015/03/26/jaxb-vs-xembly.html&quot;&gt;works&lt;/a&gt;, when you want to convert your
&lt;a href=&quot;https://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt; to XML. First,
you attach the &lt;code&gt;@XmlElement&lt;/code&gt; annotation to the getter:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlRootElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@XmlRootElement&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@XmlElement&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, you create a marshaller and ask it to convert an instance of class
&lt;code&gt;Book&lt;/code&gt; into XML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0132350882&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Clean Code&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JAXBContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JAXBContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Marshaller&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marshaller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jaxbContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createMarshaller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;marshaller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;marshal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Who is creating the XML? Not the &lt;code&gt;book&lt;/code&gt;. Someone else, outside of the
class &lt;code&gt;Book&lt;/code&gt;. This is very wrong. Instead, this is how this should have
been done. First, the class that has no idea about XML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DefaultBook&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;DefaultBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, the
&lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;decorator&lt;/a&gt;
that prints it to the XML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XmlBook&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;XmlBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;book&amp;gt;&amp;lt;title&amp;gt;%s&amp;lt;/title&amp;gt;&amp;lt;/book&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, in order to &lt;a href=&quot;/2016/04/05/printers-instead-of-getters.html&quot;&gt;print&lt;/a&gt;
the book in XML we do the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;XmlBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DefaultBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Elegant Objects&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The XML printing functionality is inside &lt;code&gt;XmlBook&lt;/code&gt;. If you don&amp;#39;t like the
decorator idea, you can move the &lt;code&gt;toXML()&lt;/code&gt; method to the &lt;code&gt;DefaultBook&lt;/code&gt; class. It&amp;#39;s
not important. What is important is that the functionality always stays
where it belongs &amp;mdash; inside the object. Only the object knows how
to
&lt;a href=&quot;/2016/04/05/printers-instead-of-getters.html&quot;&gt;print itself&lt;/a&gt;
to the XML. Nobody else!&lt;/p&gt;

&lt;h2 id=&quot;retryonfailure&quot;&gt;&lt;code&gt;@RetryOnFailure&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Here is an example
(from &lt;a href=&quot;/2014/08/15/retry-java-method-on-exception.html&quot;&gt;my own library&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.jcabi.aspects.RetryOnFailure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@RetryOnFailure&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After compilation, we run a so called
&lt;a href=&quot;/2014/06/01/aop-aspectj-java-method-logging.html&quot;&gt;AOP weaver&lt;/a&gt;
that technically turns our code into something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ignore it&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;_Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I simplified the actual algorithm of retrying a method call on failure, but I&amp;#39;m
sure you get the idea. &lt;a href=&quot;http://www.aspectj.org&quot;&gt;AspectJ&lt;/a&gt;,
the &lt;a href=&quot;http://en.wikipedia.org/wiki/Aspect-oriented_programming&quot;&gt;AOP&lt;/a&gt;
engine, uses
&lt;a href=&quot;http://aspects.jcabi.com/annotation-retryonfailure.html&quot;&gt;&lt;code&gt;@RetryOnFailure&lt;/code&gt;&lt;/a&gt;
annotation as a signal, informing us that the class
has to be wrapped into another one. This is happening behind the scenes. We don&amp;#39;t
see that supplementary class, which implements the retrying algorithm.
But the bytecode produced by the AspectJ weaver contains a modified
version of class &lt;code&gt;Foo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That is exactly what is wrong with this approach &amp;mdash; we don&amp;#39;t see
and don&amp;#39;t control the instantiation of that supplementary object. Object
composition, which is the most important process in object design, is
hidden somewhere behind the scenes. You may say that we don&amp;#39;t need
to see it since it&amp;#39;s supplementary. I disagree. We must see how
our objects are composed. We may not care about how they work, but we
must see the entire composition process.&lt;/p&gt;

&lt;p&gt;A much better design would look like this (instead of annotations):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FooThatRetries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then, the implementation of &lt;code&gt;FooThatRetries&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooThatRetries&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FooThatRetries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Algorithm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooThatRetries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And now, the implementation of &lt;code&gt;Retry&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Retry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Algorithm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ignore it&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Algorithm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Is the code longer? Yes. Is it cleaner? A lot more. I regret that I
didn&amp;#39;t understand it two years ago, when I started to work with
&lt;a href=&quot;https://github.com/jcabi/jcabi-aspects&quot;&gt;jcabi-aspects&lt;/a&gt;.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;The bottom line is that annotations are bad. Don&amp;#39;t use them. What should be used
instead? Object &lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;composition&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What could be worse than annotations? &lt;a href=&quot;/2016/04/19/object-must-not-be-configurable.html&quot;&gt;Configurations&lt;/a&gt;.
For example, XML configurations. Spring XML configuration mechanisms is a perfect
example of terrible design. I&amp;#39;ve said it many times before. Let
me repeat it again &amp;mdash; Spring Framework is one of the worst
software products in the Java world. If you can stay away from it, you will
do yourself a big favor.&lt;/p&gt;

&lt;p&gt;There should not be any &amp;quot;configurations&amp;quot; in OOP. We can&amp;#39;t configure our
objects if they are real objects. We can only instantiate them. And the
best method of instantiation is operator &lt;code&gt;new&lt;/code&gt;. This operator is the key
instrument for an OOP developer. Taking it away from us and giving us
&amp;quot;configuration mechanisms&amp;quot; is an unforgivable
&lt;a href=&quot;/2015/11/24/imprisonment-for-irresponsible-coding.html&quot;&gt;crime&lt;/a&gt;.&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>Annotations
were introduced in Java 5, and we all got excited. Such a great
instrument to make code shorter! No more Hibernate/Spring XML configuration
files! Just annotations, right there in the code where we need them. No more
marker interfaces,
just a runtime-retained
reflection-discoverable annotation!
I was excited too. Moreover, I&amp;#39;ve made a few open source libraries which
use annotations heavily. Take jcabi-aspects,
for example. However, I&amp;#39;m not excited any more. Moreover, I believe that
annotations are a big mistake in Java design.</summary></entry><entry><title>Growing Revenue May Kill Your Startup</title><link href="http://www.yegor256.com/2016/04/08/revenue-may-kill-startup.html" rel="alternate" type="text/html" title="Growing Revenue May Kill Your Startup" /><published>2016-04-08T00:00:00+00:00</published><updated>2016-04-08T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/08/revenue-may-kill-startup</id><content type="html" xml:base="http://www.yegor256.com/2016/04/08/revenue-may-kill-startup.html">&lt;p&gt;Revenue means &lt;strong&gt;cash&lt;/strong&gt; that is coming into your bank account every month
from your customers. Not investors. Customers, those who are buying
your products or services. You are doing everything you can
to make sure this number grows, mostly because you use this money
to pay your rent, buy food, and settle that graphic designer&amp;#39;s invoices.
Without revenue, your startup will die, right? Yes, maybe. But in my experience,
growing revenue may kill it even faster.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F04%2Fblow.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Blow (2001) by Ted Demme&#39;/&gt;&lt;figcaption&gt;Blow (2001) by Ted Demme&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I see this rather typical pattern in many startups we interview
at &lt;a href=&quot;http://www.seedramp.com&quot;&gt;SeedRamp&lt;/a&gt;. The idea is great, the prototype
works, the first customers are on board, and the first payments are coming in.
The founders are excited. They spend all their energy to make sure those
first paying customers are happy by creating new features, fixing bugs, and employing
new CRMs. They also try to acquire new
buyers and pay for marketing, promotion, and Google AdWords. The numbers
grow every month and ... they don&amp;#39;t realize they are
actually &lt;strong&gt;killing&lt;/strong&gt; their own startup.&lt;/p&gt;

&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.seedramp.com&#39;&gt;&lt;img src=&#39;http://www.seedramp.com/images/logo.svg&#39; style=&#39;width:128px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;If you&amp;#39;re building a cafe, a bakery, a web development studio,
or a bicycle repair shop, a growing customer base with stable revenue
must be your main objective. Because your main source of income is the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Profit_%28accounting%29&quot;&gt;profit&lt;/a&gt;
you will get from the business, in the form of
&lt;a href=&quot;https://en.wikipedia.org/wiki/Dividend&quot;&gt;dividends&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How rich you will become depends on many factors, but usually such a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Lifestyle_business&quot;&gt;lifestyle business&lt;/a&gt;
takes years to really take off and start making millions of dollars, which
you&amp;#39;re obviously looking for.&lt;/p&gt;

&lt;p&gt;In that type of business, almost everything depends on your energy,
your management skills, and your ability to work non-stop and motivate others
to do the same. If you have all that in place, you most certainly will
get what you deserve sooner or later. In most cases, later.
But you will get it.&lt;/p&gt;

&lt;p&gt;The concept of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Startup_company&quot;&gt;startup company&lt;/a&gt;
is completely different. A startup is a &lt;strong&gt;wild bet&lt;/strong&gt; you&amp;#39;re making on some
crazy idea that makes &amp;quot;the world a better place&amp;quot;. You&amp;#39;re building
a new Facebook, a Google killer, or a Snapchat replacement. Your goal
is huge, while the investment is very small. Just a few years of work
and you&amp;#39;ll score hundreds of millions. This money will come not from
happy customers and steadily growing revenue. Not at all. You will
become filthy rich only when someone buys your startup.&lt;/p&gt;

&lt;p&gt;These two strategies contradict each other:
a traditional business vs. a startup.&lt;/p&gt;

&lt;p&gt;Customers and revenue are not the goal of a startup, but rather
an &lt;strong&gt;instrument&lt;/strong&gt; that helps you achieve the real goal:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Business_valuation&quot;&gt;valuation&lt;/a&gt;. You are
supposed to use your revenue to convince investors
that the prototype works and your valuation is already high enough.
Your steadily growing cash flow right now must be used as a demonstration of a future
&lt;a href=&quot;https://en.wikipedia.org/wiki/Customer_acquisition_management&quot;&gt;customer acquisition&lt;/a&gt;
model. But it is not the result by itself. It is just a tool in your hands.&lt;/p&gt;

&lt;p&gt;Your valuation is what makes you rich, &lt;strong&gt;not&lt;/strong&gt; your revenue or your happy
customers. Of course, the revenue is important, but only as long as
it serves the main goal &amp;mdash; increase valuation at an extremely
fast pace. The revenue is not the goal; it&amp;#39;s the way to achieve it. The valuation
is the goal.&lt;/p&gt;

&lt;p&gt;Startup valuation must grow fast, ideally doubling itself every few months.
If that&amp;#39;s not happening, close the business and start something else. The
valuation must &lt;strong&gt;skyrocket&lt;/strong&gt; or you have to abandon the startup and try your
hand on another one as soon as possible.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;The revenue is good for you but not really good for investors&lt;/aside&gt;

&lt;p&gt;One of the biggest mistakes a startup founder can make is to forget
about this &amp;quot;skyrocketing valuation&amp;quot; principle and focus on making
customers happy and grow revenue. You will most likely kill your
startup and maybe turn it into a lifestyle business.&lt;/p&gt;

&lt;p&gt;Savvy investors will avoid you, mostly because they
understand that growing revenue is just one of many other
&lt;strong&gt;elements&lt;/strong&gt; of a growing valuation. If you&amp;#39;re focused on just one element,
you most likely won&amp;#39;t multiply your valuation a hundred times over the
next year. Maybe you will multiply revenue a few times, but who cares?
The revenue is good for you but not really good for investors.&lt;/p&gt;

&lt;p&gt;What is good for investors? What do they want to see you doing
to convince them that you&amp;#39;re working hard on making the valuation
grow? I&amp;#39;ll try to cover that in one of the next articles.&lt;/p&gt;</content><category term="startup" /><summary>Revenue means cash that is coming into your bank account every month
from your customers. Not investors. Customers, those who are buying
your products or services. You are doing everything you can
to make sure this number grows, mostly because you use this money
to pay your rent, buy food, and settle that graphic designer&amp;#39;s invoices.
Without revenue, your startup will die, right? Yes, maybe. But in my experience,
growing revenue may kill it even faster.</summary></entry><entry><title>Printers Instead of Getters</title><link href="http://www.yegor256.com/2016/04/05/printers-instead-of-getters.html" rel="alternate" type="text/html" title="Printers Instead of Getters" /><published>2016-04-05T00:00:00+00:00</published><updated>2016-04-05T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/04/05/printers-instead-of-getters</id><content type="html" xml:base="http://www.yegor256.com/2016/04/05/printers-instead-of-getters.html">&lt;p&gt;Getters and setters &lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;are evil&lt;/a&gt;.
No need to argue about this, it&amp;#39;s settled. You disagree?
Let&amp;#39;s discuss that later. For now, let&amp;#39;s say, we want to get rid of getters.
The key question is how is it possible at all? We do need to get
the data out of an object, right? Nope. Wrong.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F04%2Famelie.jpg&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Le fabuleux destin d&amp;amp;apos;Amélie Poulain (2001) by Jean-Pierre Jeunet&#39;/&gt;&lt;figcaption&gt;Le fabuleux destin d&amp;#39;Amélie Poulain (2001) by Jean-Pierre Jeunet&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I&amp;#39;m suggesting to use &amp;quot;printers&amp;quot; instead. Instead of exposing
data via getters, an object will have a functionality of &lt;strong&gt;printing&lt;/strong&gt;
itself to some media.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say this is our class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We need it to be transferred into XML format. A more
or less traditional way to do it is via getters and
&lt;a href=&quot;/2015/03/26/jaxb-vs-xembly.html&quot;&gt;JAXB&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.xml.bind.annotation.XmlRootElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@XmlRootElement&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@XmlElement&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getIsbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@XmlElement&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is a very &lt;a href=&quot;/2014/12/01/orm-offensive-anti-pattern.html&quot;&gt;offensive&lt;/a&gt;
way of treating the
&lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;object&lt;/a&gt;. We&amp;#39;re basically
exposing everything that&amp;#39;s inside to the public. It was a nice
little self-sufficient solid object and we turned it into a bag of data,
which anyone can access in many possible ways. We can access it for reading, of course.&lt;/p&gt;

&lt;p&gt;It is convenient to have these getters, you may say. We are all used to them.
If we want to convert it into
&lt;a href=&quot;/2015/11/16/json-vs-xml.html&quot;&gt;JSON&lt;/a&gt;,
they will be very helpful. If we want
to use this poor object as a data object in JSP, getters will help us. There
are many examples in Java, where getters are being actively used.&lt;/p&gt;

&lt;p&gt;This is &lt;strong&gt;not&lt;/strong&gt; because they are so effective. This is because we&amp;#39;re so
&lt;a href=&quot;/2015/02/20/utility-classes-vs-functional-programming.html&quot;&gt;&lt;strong&gt;procedural&lt;/strong&gt;&lt;/a&gt;
in our way of thinking. We &lt;strong&gt;don&amp;#39;t trust&lt;/strong&gt; our objects. We only trust
the data they store. We don&amp;#39;t want this &lt;code&gt;Book&lt;/code&gt; object to generate the XML. We
want it to give us the data. We will build the XML. The &lt;code&gt;Book&lt;/code&gt; is too stupid
to do that job. We&amp;#39;re way smarter!&lt;/p&gt;

&lt;p&gt;I&amp;#39;m suggesting to stop thinking this way. Instead, let&amp;#39;s try to give
this poor &lt;code&gt;Book&lt;/code&gt; a chance, and equip it with a &amp;quot;printer&amp;quot;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;book&amp;gt;&amp;lt;isbn&amp;gt;%s&amp;lt;/isbn&amp;gt;&amp;lt;title&amp;gt;%s&amp;lt;/title&amp;gt;&amp;lt;/book&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This isn&amp;#39;t the &lt;a href=&quot;/2015/03/26/jaxb-vs-xembly.html&quot;&gt;best&lt;/a&gt;
implementation, but you got the idea. The object is not
exposing its internals any more. We can&amp;#39;t get its ISBN and its title. We
can only ask it to print itself in XML format.&lt;/p&gt;

&lt;p&gt;We can add an additional printer, if another format is required:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;{\&amp;quot;isbn\&amp;quot;:\&amp;quot;%s\&amp;quot;, \&amp;quot;title\&amp;quot;:\&amp;quot;%s\&amp;quot;}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, not the best implementation, but you see what I&amp;#39;m trying to show.
Each time we need a new format, we create a new printer.&lt;/p&gt;

&lt;p&gt;You may say that the object will be rather big if there will be many formats.
That&amp;#39;s true, but a big object is a bad design in the first place. I would
say that if there is more than one printer &amp;mdash; it&amp;#39;s a problem.&lt;/p&gt;

&lt;p&gt;So, what to do if we need multiple formats? Use &amp;quot;media&amp;quot;, where that printers
will be able to print to. Say, we have an object that represents a
record in MySQL. We want it to be printable to XML, HTML, JSON, some binary
format and God knows what else. We can add that many printers to it, but
the object will be big and ugly. To avoid that, introduce a new object,
that represents the media where the data will be printed to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;0735619654&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;Object Thinking&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;isbn&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, it&amp;#39;s a very primitive design of that
&lt;a href=&quot;/2014/06/09/objects-should-be-immutable.html&quot;&gt;immutable&lt;/a&gt;
&lt;code&gt;Media&lt;/code&gt; class, but you got
the idea &amp;mdash; the &lt;code&gt;media&lt;/code&gt; accepts the data.
Now, we want to print our object to JSON
(this design is not really perfect, since &lt;code&gt;JsonObjectBuilder&lt;/code&gt; is not immutable,
even though it looks like one...):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JsonMedia&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonObjectBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createObjectBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonObjectBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we make an instance of &lt;code&gt;JsonMedia&lt;/code&gt; and ask our book to print
itself there:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;JsonMedia&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonMedia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;book&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Voilà! The JSON object is ready and the book has no idea about what
exactly what printed just now. We need to print the book to XML? We
create &lt;code&gt;XmlMedia&lt;/code&gt;, which will print the book to XML. The &lt;code&gt;Book&lt;/code&gt; class
stays small, while the complexity of &amp;quot;media&amp;quot; objects is unlimited.&lt;/p&gt;

&lt;p&gt;My point here is simple &amp;mdash; no
&lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;getters&lt;/a&gt;,
just printers!&lt;/p&gt;</content><category term="java" /><category term="oop" /><summary>Getters and setters are evil.
No need to argue about this, it&amp;#39;s settled. You disagree?
Let&amp;#39;s discuss that later. For now, let&amp;#39;s say, we want to get rid of getters.
The key question is how is it possible at all? We do need to get
the data out of an object, right? Nope. Wrong.</summary></entry><entry><title>Jare.io, an Instant and Free CDN</title><link href="http://www.yegor256.com/2016/03/30/jare-instant-free-cdn.html" rel="alternate" type="text/html" title="Jare.io, an Instant and Free CDN" /><published>2016-03-30T00:00:00+00:00</published><updated>2016-03-30T00:00:00+00:00</updated><id>http://www.yegor256.com/2016/03/30/jare-instant-free-cdn</id><content type="html" xml:base="http://www.yegor256.com/2016/03/30/jare-instant-free-cdn.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.jare.io&#39;&gt;&lt;img src=&#39;http://www.jare.io/images/logo.svg&#39; style=&#39;width:92px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;CDN stands for a Content Delivery Network. Technically, it is a bunch
of servers located in different countries and continents. You give them
your &lt;code&gt;logo.gif&lt;/code&gt; and they give you a URL, which resolves to a different
server depending on who is trying to resolve it. As a result, the
file is always close to the end-user and your website loads much faster
than without a CDN. Sounds good, but all CDN providers want money
for their service and usually a rather complex setup and registration
procedure. My pet project &lt;a href=&quot;http://www.jare.io&quot;&gt;jare.io&lt;/a&gt; is a free
CDN that is simple to configure. It utilizes AWS CloudFront resources.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;First, let me show how it works and then, if you&amp;#39;re interested in
the details, I will explain how it&amp;#39;s done internally. Say you have
this HTML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.teamed.io/image/logo.svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I want this &lt;code&gt;logo.svg&lt;/code&gt; to be delivered via a CDN. There are two steps.
First, I register my domain at &lt;a href=&quot;http://www.jare.io&quot;&gt;jare.io&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&#39;unprintable&#39;&gt;&lt;img src=&#39;http://cf.jare.io/?u=http%3A%2F%2Fwww.yegor256.com%2Fimages%2F2016%2F03%2Fjare-1.png&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;figure&#39;/&gt;&lt;/figure&gt;

&lt;p&gt;Second, I change my HTML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://cf.jare.io/?u=http://www.teamed.io/images/logo.svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;Try it with your own resources and you will see how
much faster they will be loaded.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s absolutely free, but I ask you to be reasonable. If your traffic
is huge, you need your own account in CloudFront or somewhere else. My
service is for small projects.&lt;/p&gt;

&lt;p&gt;Now for more technical details, if you want to know how technically
this solution works. First, let&amp;#39;s discuss what CDN is and how it works.&lt;/p&gt;

&lt;h2 id=&quot;url-dns-tcp-http&quot;&gt;URL, DNS, TCP, HTTP&lt;/h2&gt;

&lt;p&gt;When your browser wants to load an image, it has a &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator&quot;&gt;URL&lt;/a&gt;
for that, like in the example above. This is the URL: &lt;code&gt;http://www.teamed.io/image/logo.svg&lt;/code&gt;.
There are three important parts in this address. First is &lt;code&gt;http&lt;/code&gt;, the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Communications_protocol&quot;&gt;protocol&lt;/a&gt;.
Second is &lt;code&gt;www.teamed.io&lt;/code&gt;, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Host_%28network%29&quot;&gt;host&lt;/a&gt; name,
and the tail &lt;code&gt;/images/logo.svg&lt;/code&gt;, which is the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Syntax&quot;&gt;path&lt;/a&gt;.
To load the image, the browser has to open a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Network_socket&quot;&gt;socket&lt;/a&gt;,
connecting your computer and the server, which has the image. To open a
socket, the browser needs to know the
&lt;a href=&quot;https://en.wikipedia.org/wiki/IP_address&quot;&gt;IP address&lt;/a&gt; of the server.&lt;/p&gt;

&lt;p&gt;There is no such address in that URL. In order to find the IP address,
the browser is doing what is called a lookup. It connects to the
nearest &lt;a href=&quot;https://en.wikipedia.org/wiki/Name_server&quot;&gt;name server&lt;/a&gt;
and asks &amp;quot;what is the IP address of &lt;a href=&quot;http://www.teamed.io?&quot;&gt;www.teamed.io?&lt;/a&gt;&amp;quot;
The answer usually contains a single IP address:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ nslookup www.teamed.io
Server:   172.16.0.1
Address:  172.16.0.1#53

Non-authoritative answer:
www.teamed.io canonical name = teamed.github.io.
teamed.github.io  canonical name = github.map.fastly.net.
Name: github.map.fastly.net
Address: 199.27.79.133&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;IP address of &lt;code&gt;www.teamed.io&lt;/code&gt; is &lt;code&gt;199.27.79.133&lt;/code&gt;, at the time of writing.&lt;/p&gt;

&lt;p&gt;When the address is known, the browser opens a new socket and sends
an &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_message&quot;&gt;HTTP request&lt;/a&gt;
through it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;GET /images/logo.svg HTTP/1.1
Host: www.teamed.io
Accept: image/*&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The server responds with an
&lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Response_message&quot;&gt;HTTP response&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;HTTP/1.1 200 OK
Content-Type: image/svg+xml

[SVG image content goes here, over 1000 bytes]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Scalable_Vector_Graphics&quot;&gt;SVG&lt;/a&gt;
image we&amp;#39;re looking for. The browser renders it on the web page
and that&amp;#39;s it.&lt;/p&gt;

&lt;h2 id=&quot;the-network-of-edge-servers&quot;&gt;The Network of Edge Servers&lt;/h2&gt;

&lt;p&gt;So far so good, but if the distance between your browser and that IP address
is rather large, loading the image will take a lot of time. Well, hundreds
of milliseconds. Try to load this image, which is located on a server
that is hosted in Prague, Czech Republic (I&amp;#39;m using &lt;code&gt;curl&lt;/code&gt; as suggested
&lt;a href=&quot;https://josephscott.org/archives/2011/10/timing-details-with-curl/&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl -w &amp;quot;@f.txt&amp;quot; -o /dev/null -s \
  http://www.vlada.cz/images/vlada/vlada-ceske-republiky_en.gif
    time_namelookup:  0.005
       time_connect:  0.376
   time_pretransfer:  0.377
 time_starttransfer:  0.566
                    ----------
         time_total:  0.567&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I&amp;#39;m trying to do it from Palo Alto, California, which is about half a globe
away from Prague. As you can see, it takes over 500ms. That&amp;#39;s too much, especially
if a web page contains many images. Overall, page loading may take seconds,
just because the server is too far away from me. Well, it will inevitably be
too far away from some users, no matter where we host it. If we host it here
in California, it will be close enough to me and the image will be loaded
instantly (less than 50ms). But then it will be too slow for users in Prague.&lt;/p&gt;

&lt;p&gt;This problem has no solutions if the server generates images or pages
on the fly in some unique way and if we can&amp;#39;t install a number of servers
in different countries and continents. But in most cases, such as our logo example, this is not a problem.
This logo doesn&amp;#39;t need to be unique for
each user. It is a very &lt;em&gt;static&lt;/em&gt; resource, which needs to be created only once
and be delivered to everybody, without any changes.&lt;/p&gt;

&lt;p&gt;So, how about we install a server somewhere here in California and let
Californian users connect to it. When a request for &lt;code&gt;logo.gif&lt;/code&gt; comes
to one of the &lt;em&gt;edge&lt;/em&gt; servers, it will connect to the central server
in Prague and load the file. This will happen only once. After that, the
edge server will not request the file
from the central server. It will return it immediately, from its internal cache.&lt;/p&gt;

&lt;p&gt;We need to have many edge servers, preferably in all countries where
our users may be located. The first request will take longer, but all others
will be much faster because they will be served from the closest edge server.&lt;/p&gt;

&lt;p&gt;Now, the question is how the browser will know which edge server is the closest, right?
We simply trick the domain name resolution process. Depending on who is asking,
the DNS will give different answers. Let&amp;#39;s take &lt;code&gt;cf.jare.io&lt;/code&gt;, for example (it
is the name of all edge servers responsible for delivering our content
in AWS CloudFront, a CNAME for &lt;code&gt;djk1be5eatcae.cloudfront.net&lt;/code&gt;).
If I&amp;#39;m looking it up from California, I&amp;#39;m getting the following answer:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ nslookup cf.jare.io
Server:   192.168.1.1
Address:  192.168.1.1#53

Non-authoritative answer:
cf.jare.io  canonical name = djk1be5eatcae.cloudfront.net.
Name: djk1be5eatcae.cloudfront.net
Address: 54.230.141.211&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An edge server with IP address &lt;code&gt;54.230.141.211&lt;/code&gt; is located in
&lt;a href=&quot;https://db-ip.com/54.230.141.211&quot;&gt;San Francisco&lt;/a&gt;. This
is rather close to me, less than fifty miles. If I do the same operation
from a server in Virginia, I get a different response:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ nslookup cf.jare.io
Server:   172.16.0.23
Address:  172.16.0.23#53

Non-authoritative answer:
cf.jare.io  canonical name = djk1be5eatcae.cloudfront.net.
Name: djk1be5eatcae.cloudfront.net
Address: 52.85.131.217&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An edge server with IP address &lt;code&gt;52.85.131.217&lt;/code&gt; is located in
&lt;a href=&quot;https://db-ip.com/52.85.131.217&quot;&gt;Washington&lt;/a&gt;, which is far away from
me, but very close to the server I was making the lookup from.&lt;/p&gt;

&lt;p&gt;There are thousands of name servers around the world and all of them
have different information about where that edge server &lt;code&gt;cf.jare.io&lt;/code&gt;
is physically located. Depending on who is asking, the answer will be different.&lt;/p&gt;

&lt;h2 id=&quot;aws-cloudfront&quot;&gt;AWS CloudFront&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/cloudfront/&quot;&gt;CloudFront&lt;/a&gt; is one of the simplest
CDN solutions. All you have to do to start delivering your content
through their edge nodes is to create a &amp;quot;distribution&amp;quot; and configure it.
A distribution is basically a connector between content origin and
edge servers:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/uml/b5d40b6498ca48f6d2efc8671dd6d1e6.svg&#39;
        alt=&#39;PlantUML diagram&#39; class=&#39;plantuml&#39;/&gt;&lt;/p&gt;

&lt;p&gt;One of edge servers receives an HTTP request. If it already has that
&lt;code&gt;logo.svg&lt;/code&gt; in its cache, it immediately returns an HTTP response with its
content inside. If its cache is empty, the edge server makes an HTTP
request to the central server. This server knows about the &amp;quot;distribution&amp;quot;
and its configuration. It makes an HTTP connection to the origin server,
which is &lt;code&gt;www.teamed.io&lt;/code&gt; and asks it to return &lt;code&gt;logo.svg&lt;/code&gt;. When done,
the image is returned to the edge server, where it is cached.&lt;/p&gt;

&lt;p&gt;This looks rather simple, but it&amp;#39;s not free and it&amp;#39;s not that quick to configure.
You have to create an account with CloudFront, register your credit card
there, and get an approval. Then you have to create a distribution and configure it.
You should then create that CNAME in your name server. If you&amp;#39;re doing it
for a single website, it&amp;#39;s not a big deal. If you have a dozen websites,
it&amp;#39;s a time consuming operation.&lt;/p&gt;

&lt;h2 id=&quot;jare-io-a-middle-man&quot;&gt;Jare.io, a Middle Man&lt;/h2&gt;

&lt;p&gt;Jare.io is an extra component in that diagram, which makes your
life easier:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/uml/aecf8b3862f82e6d5d8d27e948d45c83.svg&#39;
        alt=&#39;PlantUML diagram&#39; class=&#39;plantuml&#39;/&gt;&lt;/p&gt;

&lt;p&gt;Jare.io has a &amp;quot;relay&amp;quot;, which acts as an origin server for CloudFront. All
requests that arrive to &lt;code&gt;cf.jare.io&lt;/code&gt; are dispatched to the relay. The relay
decides what to do with them. The decision is based on the information
from the HTTP request URI. For example, the request from the browser
has this URI path:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/?u=http://www.teamed.io/images/logo.svg&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Remember, the request is made to &lt;code&gt;cf.jare.io&lt;/code&gt;, which is the address of
the edge server. This exact URI arrives at &lt;code&gt;relay.jare.io&lt;/code&gt;. The URI contains
enough information to make a decision about which file has to be returned.
The relay makes a new HTTP request to &lt;code&gt;www.teamed.io&lt;/code&gt; and retrieves the image.&lt;/p&gt;

&lt;p&gt;The beauty of this solution is that it&amp;#39;s easy. For small websites,
it is a free and quick CDN.&lt;/p&gt;

&lt;p&gt;By the way, when we query the same image through jare.io (and CloudFront),
it comes back much faster:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl -w &amp;quot;@f.txt&amp;quot; -o /dev/null -s \
  http://cf.jare.io/?u=www.vlada.cz/images/vlada/vlada-ceske-republiky_en.gif
    time_namelookup:  0.005
       time_connect:  0.021
   time_pretransfer:  0.021
 time_starttransfer:  0.041
                    ----------
         time_total:  0.041&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Most of the work is done by AWS CloudFront, while jare.io is just a
relay that makes its configuration more convenient. Besides, it makes
it free, because jare.io is sponsored by
&lt;a href=&quot;http://www.teamed.io&quot;&gt;Teamed.io&lt;/a&gt;. In other words, my company will
pay for your usage of CloudFront. I would appreciate if you kept that in
mind and didn&amp;#39;t use jare.io for traffic-intensive resources.&lt;/p&gt;</content><category term="cdn" /><summary>CDN stands for a Content Delivery Network. Technically, it is a bunch
of servers located in different countries and continents. You give them
your logo.gif and they give you a URL, which resolves to a different
server depending on who is trying to resolve it. As a result, the
file is always close to the end-user and your website loads much faster
than without a CDN. Sounds good, but all CDN providers want money
for their service and usually a rather complex setup and registration
procedure. My pet project jare.io is a free
CDN that is simple to configure. It utilizes AWS CloudFront resources.</summary></entry></feed>
