<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://www.yegor256.com/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator><link href="http://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="http://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2017-06-25T21:29:54+00:00</updated><id>http://www.yegor256.com/</id><title type="html">Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><entry><title type="html">Object-Oriented Declarative Input/Output in Cactoos</title><link href="http://www.yegor256.com/2017/06/22/object-oriented-input-output-in-cactoos.html" rel="alternate" type="text/html" title="Object-Oriented Declarative Input/Output in Cactoos" /><published>2017-06-22T00:00:00+00:00</published><updated>2017-06-22T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/06/22/object-oriented-input-output-in-cactoos</id><content type="html" xml:base="http://www.yegor256.com/2017/06/22/object-oriented-input-output-in-cactoos.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.cactoos.org&#39;&gt;&lt;img src=&#39;http://www.yegor256.com/images/books/elegant-objects/cactus.svg&#39; style=&#39;width:92px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt; is a library of object-oriented
Java primitives
&lt;a href=&quot;https://github.com/yegor256/cactoos#contributors&quot;&gt;we&lt;/a&gt;
started to work on just a few weeks ago. The intent was to
propose a clean and more declarative alternative to
&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_Development_Kit&quot;&gt;JDK&lt;/a&gt;,
&lt;a href=&quot;https://github.com/google/guava&quot;&gt;Guava&lt;/a&gt;,
&lt;a href=&quot;https://commons.apache.org/&quot;&gt;Apache Commons&lt;/a&gt;,
and others. Instead of calling static
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;procedures&lt;/a&gt;
we want to use &lt;a href=&quot;/2016/07/14/who-is-object.html&quot;&gt;objects&lt;/a&gt;,
the way they are supposed to be used. Let&amp;#39;s see how input/output works in a &lt;em&gt;pure&lt;/em&gt;
&lt;a href=&quot;/2016/08/15/what-is-wrong-object-oriented-programming.html&quot;&gt;object-oriented&lt;/a&gt;
fashion.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Let&amp;#39;s say you want to read a file. This is how you would do it with the static method
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllBytes%28java.nio.file.Path%29&quot;&gt;&lt;code&gt;readAllBytes()&lt;/code&gt;&lt;/a&gt; from the
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;utility class&lt;/a&gt;
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt;
in JDK7:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readAllBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/photo.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This code is very imperative&amp;mdash;it reads the file content right here and now,
placing it into the array.&lt;/p&gt;

&lt;p&gt;This is how you do it with &lt;a href=&quot;https://github.com/yegor256/cactoos&quot;&gt;Cactoos&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bytes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputAsBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileAsInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/photo.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pay attention&amp;mdash;there are no method calls yet. Just three constructors
of three classes that compose a bigger object. The object &lt;code&gt;source&lt;/code&gt; is of type
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/Bytes.html&quot;&gt;&lt;code&gt;Bytes&lt;/code&gt;&lt;/a&gt;
and represents the content of the file. To get that content
out of it we call its method &lt;code&gt;asBytes()&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is the moment when the file system is touched. This approach, as you
can see, is absolutely declarative and thanks to that possesses all the
benefits of object orientation.&lt;/p&gt;

&lt;p&gt;Here is another example. Say you want to write some text into a file. Here
is how you do it in Cactoos. First you need the
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/Input.html&quot;&gt;&lt;code&gt;Input&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BytesAsInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextAsBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringAsText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you need the &lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/Output.html&quot;&gt;&lt;code&gt;Output&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileAsOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/hello.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we want to copy the input to the output. There is no &amp;quot;copy&amp;quot; operation
in &lt;em&gt;pure&lt;/em&gt; OOP. Moreover, there must be no operations at all. Just objects. We
have a class named
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/io/TeeInput.html&quot;&gt;&lt;code&gt;TeeInput&lt;/code&gt;&lt;/a&gt;,
which is an &lt;code&gt;Input&lt;/code&gt; that copies everything
you read from it to the
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/Output.html&quot;&gt;&lt;code&gt;Output&lt;/code&gt;&lt;/a&gt;,
similar to what
&lt;a href=&quot;https://commons.apache.org/proper/commons-io/javadocs/api-1.4/org/apache/commons/io/input/TeeInputStream.html&quot;&gt;&lt;code&gt;TeeInputStream&lt;/code&gt;&lt;/a&gt;
from &lt;a href=&quot;https://commons.apache.org/&quot;&gt;Apache Commons&lt;/a&gt; does, but encapsulated. So we don&amp;#39;t copy, we create an
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/Input.html&quot;&gt;&lt;code&gt;Input&lt;/code&gt;&lt;/a&gt;
that will copy if you &lt;em&gt;touch&lt;/em&gt; it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeeInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we have to &amp;quot;touch&amp;quot; it. And we have to touch every single byte of it,
in order to make sure they all are copied. If we just &lt;code&gt;read()&lt;/code&gt; the first
byte, only one byte will be copied to the file. The best way to touch them
all is to calculate the size of the &lt;code&gt;tee&lt;/code&gt; object, going byte by byte. We
have an object for it, called
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/io/LengthOfInput.html&quot;&gt;&lt;code&gt;LengthOfInput&lt;/code&gt;&lt;/a&gt;.
It encapsulates an
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/Input.html&quot;&gt;&lt;code&gt;Input&lt;/code&gt;&lt;/a&gt;
and behaves like its length in bytes:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scalar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LengthOfInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we take the value out of it and the file writing operation takes place:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thus, the entire operation of writing the string to the file will
look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LengthOfInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeeInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BytesAsInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextAsBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringAsText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileAsOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/hello.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// happens here&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is its procedural alternative from
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#write%28java.nio.file.Path,%20byte%5B%5D,%20java.nio.file.OpenOption...%29&quot;&gt;JDK7&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/hello.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&amp;quot;Why is object-oriented better, even though it&amp;#39;s longer?&amp;quot; I hear you ask.
Because it perfectly &lt;strong&gt;decouples&lt;/strong&gt; concepts, while the procedural one keeps
them together.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say, you are designing a class that is supposed
to encrypt some text and save it to a file. Here is how you would
design it the procedural way (not a real encryption, of course):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Encoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Encoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-z]&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Works fine, but what will happen when you decide to extend it to also write to
an &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;?
How will you modify this class? How ugly will it look after that?
That&amp;#39;s because the design is not object-oriented.&lt;/p&gt;

&lt;p&gt;This is how you would do the same design, in an object-oriented way,
with &lt;a href=&quot;http://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Encoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Encoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileAsOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Encoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LengthOfInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeeInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BytesAsInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextAsBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringAsText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-z]&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What do we do with this design if we want
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;
to be accepted? We just add one
&lt;a href=&quot;/2015/05/28/one-primary-constructor.html&quot;&gt;secondary&lt;/a&gt; constructor:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Encoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Encoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStreamAsOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Done. That&amp;#39;s how easy and elegant it is.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s because concepts are perfectly separated and functionality
is encapsulated. In the procedural example the behavior of the object is
located outside of it, in the method &lt;code&gt;encode()&lt;/code&gt;. The file itself doesn&amp;#39;t know
how to write, some outside procedure
&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#write%28java.nio.file.Path,%20byte%5B%5D,%20java.nio.file.OpenOption...%29&quot;&gt;&lt;code&gt;Files.write()&lt;/code&gt;&lt;/a&gt;
knows that instead.&lt;/p&gt;

&lt;p&gt;To the contrary, in the object-oriented design the
&lt;a href=&quot;http://static.javadoc.io/org.cactoos/cactoos/0.2/org/cactoos/io/FileAsOutput.html&quot;&gt;&lt;code&gt;FileAsOutput&lt;/code&gt;&lt;/a&gt;
knows how to write, and nobody else does.
The file writing functionality is encapsulated and this makes it
possible to decorate the objects in any possible way, creating
reusable and replaceable composite objects.&lt;/p&gt;

&lt;p&gt;Do you see the beauty of OOP now?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="java" /><category term="oop" /><summary type="html">Cactoos is a library of object-oriented
Java primitives
we
started to work on just a few weeks ago. The intent was to
propose a clean and more declarative alternative to
JDK,
Guava,
Apache Commons,
and others. Instead of calling static
procedures
we want to use objects,
the way they are supposed to be used. Let&amp;#39;s see how input/output works in a pure
object-oriented
fashion.</summary></entry><entry><title type="html">DynamoDB + Rake + Maven + Rack::Test</title><link href="http://www.yegor256.com/2017/06/13/dynamodb-rack-maven.html" rel="alternate" type="text/html" title="DynamoDB + Rake + Maven + Rack::Test" /><published>2017-06-13T00:00:00+00:00</published><updated>2017-06-13T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/06/13/dynamodb-rack-maven</id><content type="html" xml:base="http://www.yegor256.com/2017/06/13/dynamodb-rack-maven.html">&lt;p&gt;In
&lt;a href=&quot;/2017/04/25/sixnines.html&quot;&gt;SixNines.io&lt;/a&gt;,
one of my Ruby pet web apps, I&amp;#39;m using
&lt;a href=&quot;https://aws.amazon.com/dynamodb/&quot;&gt;DynamoDB&lt;/a&gt;, a NoSQL cloud database
by &lt;a href=&quot;https://aws.amazon.com/&quot;&gt;AWS&lt;/a&gt;. It works like a charm, but the problem
is that it&amp;#39;s not so easy to create an integration test, to make sure
my code works together with the &amp;quot;real&amp;quot; DynamoDB server and tables. Let me
show you how it was solved. The code is open source and you can see it
in the &lt;a href=&quot;https://github.com/yegor256/sixnines&quot;&gt;yegor256/sixnines&lt;/a&gt; GitHub repo.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;how-to-bootstrap-dynamodb-local&quot;&gt;How to bootstrap DynamoDB Local&lt;/h2&gt;

&lt;p&gt;First, you need to use
&lt;a href=&quot;https://aws.amazon.com/blogs/aws/dynamodb-local-for-desktop-development/&quot;&gt;DynamoDB Local&lt;/a&gt;,
a command line tool created by AWS exactly for the
purposes of testing. You need to start it before your integration
tests and stop it afterwards.&lt;/p&gt;

&lt;p&gt;To make things simpler
I suggest you use &lt;a href=&quot;http://dynamodb.jcabi.com/&quot;&gt;&lt;code&gt;jcabi-dynamodb-maven-plugin&lt;/code&gt;&lt;/a&gt;,
a &lt;a href=&quot;https://maven.apache.org/&quot;&gt;Maven&lt;/a&gt; plugin that I
&lt;a href=&quot;/2014/05/01/dynamodb-local-maven-plugin.html&quot;&gt;made&lt;/a&gt; a few years ago.
You will need to add
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/pom.xml&quot;&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;/a&gt; to your
repository and start/stop Maven from a
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile&quot;&gt;&lt;code&gt;Rakefile&lt;/code&gt;&lt;/a&gt;,
just like I&amp;#39;m doing &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L50-L67&quot;&gt;here&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:dynamo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rm_rf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;dynamodb-local/target&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mvn&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;install&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;dynamodb-local&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;at_exit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;sb&quot;&gt;`kill -TERM &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Dynamo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sn-endpoints&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;retry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First, I&amp;#39;m removing &lt;code&gt;dynamodb-local/target&lt;/code&gt;, the directory where Maven keeps
its temporary files, to make sure we always start from scratch.&lt;/p&gt;

&lt;p&gt;Then, I&amp;#39;m starting &lt;code&gt;mvn install&lt;/code&gt;, using &lt;code&gt;Process.spawn&lt;/code&gt;, as a background
process with &lt;code&gt;pid&lt;/code&gt; as its process ID (this won&amp;#39;t work in Windows, only Linux/Mac).
Then I immediately register an
&lt;a href=&quot;https://ruby-doc.org/core-2.2.3/Kernel.html#method-i-at_exit&quot;&gt;&lt;code&gt;at_exit&lt;/code&gt;&lt;/a&gt;
Ruby hook, which will be executed if Ruby dies for any reason. I&amp;#39;m sure
it&amp;#39;s obvious why I have to do that&amp;mdash;in order to avoid garbage running
in the background after Rake is finished or terminated.&lt;/p&gt;

&lt;p&gt;Pay attention, I&amp;#39;m using &lt;code&gt;kill -TERM&lt;/code&gt; instead of &lt;code&gt;kill -KILL&lt;/code&gt;, in order to
give Maven a chance to wrap everything up, terminate DynamoDB Local correctly,
close its TCP port and exit.&lt;/p&gt;

&lt;h2 id=&quot;how-to-check-that-its-running&quot;&gt;How to check that it&amp;#39;s running&lt;/h2&gt;

&lt;p&gt;Next I&amp;#39;m checking the status of &lt;code&gt;sn-endpoints&lt;/code&gt;, one of the tables in the
DynamoDB Local. It has to be there if the server is up and running. It will
be created by &lt;code&gt;jcabi-dynamodb-maven-plugin&lt;/code&gt; according to
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/tables/sn-endpoints.json&quot;&gt;&lt;code&gt;sn-endpoints.json&lt;/code&gt;&lt;/a&gt;,
its JSON configuration.&lt;/p&gt;

&lt;p&gt;Most probably the table won&amp;#39;t be ready immediately though, since it takes time to
bootstrap Maven, start the server, and create tables there. That&amp;#39;s why, if the
exception is thrown, I catch it, wait for 5 seconds and try again.
I keep trying many times, until the server is ready. Eventually it will be.
It takes about 12-15 seconds on my MacBook, which means 2-3 attempts/exceptions.&lt;/p&gt;

&lt;h2 id=&quot;how-to-connect-to-dynamodb-local&quot;&gt;How to connect to DynamoDB Local&lt;/h2&gt;

&lt;p&gt;My classes need to know how to connect to the server during integration tests.
In production they need to connect to AWS, in testing they have to
know about the DynamoDB Local instance I just started. This is what I have in my class
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/objects/dynamo.rb&quot;&gt;&lt;code&gt;Dynamo&lt;/code&gt;&lt;/a&gt;,
which is responsible for the very connection with DynamoDB. Its decision
on where to connect is based on the environment variable &lt;code&gt;RACK_ENV&lt;/code&gt;, which
is set to &lt;code&gt;&amp;quot;test&amp;quot;&lt;/code&gt; in
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/test/test__helper.rb#L25&quot;&gt;&lt;code&gt;test__helper.rb&lt;/code&gt;&lt;/a&gt;,
which is included by
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L39&quot;&gt;&lt;code&gt;rake/testtask&lt;/code&gt;&lt;/a&gt;
in front of all other tests, thanks to the double underscore in its name.&lt;/p&gt;

&lt;p&gt;If the environment variable is set to &lt;code&gt;&amp;quot;test&amp;quot;&lt;/code&gt;,
&lt;code&gt;Dynamo&lt;/code&gt; takes the connectivity parameters from the YAML file
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/objects/dynamo.rb#L37&quot;&gt;&lt;code&gt;dynamodb-local/target/dynamo.yml&lt;/code&gt;&lt;/a&gt;
created by
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/pom.xml#L79-L100&quot;&gt;&lt;code&gt;maven-resources-plugin:copy-resources&lt;/code&gt;&lt;/a&gt;.
The TCP port of the DynamoDB Local database will be
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/config/dynamo.yml&quot;&gt;there&lt;/a&gt;,
as well as the DynamoDB authentication key and secret.&lt;/p&gt;

&lt;h2 id=&quot;how-to-run-the-integration-tests&quot;&gt;How to run the integration tests&lt;/h2&gt;

&lt;p&gt;This is the easiest part. I just use my objects the way they are supposed
to be used in production and they connect to DynamoDB Local instead of AWS.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m using Rack::Test in order to test the entire application, via a set
of HTTP calls. For example,
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/test/test_sixnines.rb#L143-L147&quot;&gt;here&lt;/a&gt;
I&amp;#39;m trying to render Jeff&amp;#39;s user account page.
Its HTTP response code is supposed to be 200:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AppTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestCase&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Methods&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_user_account&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sixnines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jeff&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you can run the entire test from the command line. You can see how
&lt;a href=&quot;/2014/09/11/deployment-script-vs-rultor.html&quot;&gt;Rultor&lt;/a&gt;
runs it while releasing a new version: &lt;a href=&quot;http://www.rultor.com/t/11705-302080694&quot;&gt;full log&lt;/a&gt;.
Also, see how it works &lt;a href=&quot;https://travis-ci.org/yegor256/sixnines&quot;&gt;in Travis&lt;/a&gt;.
In a nutshell:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You call &lt;code&gt;rake&lt;/code&gt; in the command line and Rake starts;&lt;/li&gt;
&lt;li&gt;Rake attempts to run the &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L32&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; task,
which depends on &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L36&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Rake attempts to run &lt;code&gt;test&lt;/code&gt;, which depends on
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L50&quot;&gt;&lt;code&gt;dynamo&lt;/code&gt;&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Rake, inside &lt;code&gt;test&lt;/code&gt; task, runs &lt;code&gt;mvn install&lt;/code&gt; in the background
with this &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/pom.xml&quot;&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Maven &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/pom.xml#L38-L60&quot;&gt;unpacks&lt;/a&gt;
DynamoDB Local installation package;&lt;/li&gt;
&lt;li&gt;Maven &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/pom.xml#L61-L78&quot;&gt;reserves&lt;/a&gt;
a random TCP port and stores its value into &lt;code&gt;${dynamo.port}&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Maven &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/pom.xml#L79-L100&quot;&gt;saves&lt;/a&gt;
&lt;code&gt;${dynamo.port}&lt;/code&gt; and key/secret pair info;&lt;/li&gt;
&lt;li&gt;Maven &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/pom.xml#L101-L128&quot;&gt;starts&lt;/a&gt;
DynamoDB Local, binding it to the reserved TCP port;&lt;/li&gt;
&lt;li&gt;Rake &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L57-L65&quot;&gt;waits&lt;/a&gt;
for DynamoDB Local availability on the reserved port;&lt;/li&gt;
&lt;li&gt;Rake &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L38-L39&quot;&gt;imports&lt;/a&gt;
all &lt;a href=&quot;https://github.com/yegor256/sixnines/tree/0.17/test&quot;&gt;test classes&lt;/a&gt; starting from
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/test/test__helper.rb&quot;&gt;test__helper.rb&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Environment variable &lt;code&gt;RACK_ENV&lt;/code&gt; is &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/test/test__helper.rb#L25&quot;&gt;set&lt;/a&gt;
to &lt;code&gt;&amp;quot;test&amp;quot;&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Rack::Test &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/test/test_sixnines.rb#L145&quot;&gt;attempts&lt;/a&gt;
to dispatch a web page;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/objects/dynamo.rb&quot;&gt;&lt;code&gt;Dynamo&lt;/code&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/objects/dynamo.rb#L37-L39&quot;&gt;loads&lt;/a&gt; YAML config from
&lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/dynamodb-local/config/dynamo.yml&quot;&gt;&lt;code&gt;dynamo.yml&lt;/code&gt;&lt;/a&gt;
and connects to DynamoDB Local;&lt;/li&gt;
&lt;li&gt;Rake stops;&lt;/li&gt;
&lt;li&gt;Ruby &lt;a href=&quot;https://github.com/yegor256/sixnines/blob/0.17/Rakefile#L53-L56&quot;&gt;terminates&lt;/a&gt;
Maven and it stops DynamoDB Local.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;#39;s it.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="testing" /><category term="ruby" /><summary type="html">In
SixNines.io,
one of my Ruby pet web apps, I&amp;#39;m using
DynamoDB, a NoSQL cloud database
by AWS. It works like a charm, but the problem
is that it&amp;#39;s not so easy to create an integration test, to make sure
my code works together with the &amp;quot;real&amp;quot; DynamoDB server and tables. Let me
show you how it was solved. The code is open source and you can see it
in the yegor256/sixnines GitHub repo.</summary></entry><entry><title type="html">Gluten-Free Management Recipes</title><link href="http://www.yegor256.com/2017/06/06/gluten-free-management.html" rel="alternate" type="text/html" title="Gluten-Free Management Recipes" /><published>2017-06-06T00:00:00+00:00</published><updated>2017-06-06T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/06/06/gluten-free-management</id><content type="html" xml:base="http://www.yegor256.com/2017/06/06/gluten-free-management.html">&lt;p&gt;We live in the era of organic food, eco-friendly toilets, zero-emission cars,
and harassment-free offices. Our management practices have to keep up&amp;mdash;they
must be zero-stress, conflict-free, and idiot-friendly. If you&amp;#39;re still
stuck in the old carrot-and-stick, mediocrity-intolerant, primitive mentality,
these recipes will open your eyes.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Dogville (2003) by Lars von Trier&#39; src=&#39;/images/2017/06/dogville.jpg&#39; longdesc=&#39;#bc4a6c10&#39;/&gt;&lt;figcaption id=&#39;bc4a6c10&#39;&gt;Dogville (2003) by Lars von Trier&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Be Positive&lt;/strong&gt;.
You must remember that keeping people happy
is more important than their results, effectiveness and productivity.
As an organic manager you must never offend your team with any
negativity, finger-pointing, or
&lt;a href=&quot;/2015/01/05/how-to-be-honest-and-keep-customer.html&quot;&gt;honesty&lt;/a&gt;.
You must think positively and always find a balance somewhere between
&amp;quot;you guys are good&amp;quot; and &amp;quot;you&amp;#39;re just fantastic.&amp;quot;
You must be their full-hearted &lt;del&gt;clown&lt;/del&gt; cheerleader!
Truth hurts and modern management is not about hurting people, it&amp;#39;s about
making them happy. You must be a permanent source of good news, funny
stories, and smiles, shielding your &lt;del&gt;slaves&lt;/del&gt; people
from the reality and its threats.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Truth hurts and modern management is not about hurting people, it&amp;#39;s about making them happy.&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Be Politically Correct&lt;/strong&gt;.
How many &lt;a href=&quot;http://www.huffingtonpost.com/entry/why-people-are-using-the-term-latinx_us_57753328e4b0cc0fa136a159&quot;&gt;latinx&lt;/a&gt;
are in your team? What about gays and transsexuals?
You&amp;#39;re not sure? That&amp;#39;s wrong. You have to count. You don&amp;#39;t know how to
segregate bi-sexuals from &amp;quot;normal&amp;quot; people and black females from white males?
Well, do the research, there must be some &amp;quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mischling_Test&quot;&gt;mischling tests&lt;/a&gt;&amp;quot; you could do.
You have to learn how to count and pay attention to the numbers.
&lt;a href=&quot;https://techcrunch.com/2017/03/28/uber-first-diversity-report/&quot;&gt;Uber&lt;/a&gt;
and &lt;a href=&quot;https://techcrunch.com/2017/04/01/krablr-releases-first-diversity-report/&quot;&gt;others&lt;/a&gt;
already do. Diversity, equality, and tolerance: these metrics are
&lt;a href=&quot;https://www.youtube.com/watch?v=iKcWu0tsiZM&quot;&gt;quickly replacing&lt;/a&gt;
outdated performance and productivity appraisals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be Reward-Focused&lt;/strong&gt;.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Leon_Trotsky&quot;&gt;Trotsky&lt;/a&gt;
&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Revolution_Betrayed&quot;&gt;said&lt;/a&gt; in 1937
that people would eventually work not out of greed or poverty, but because
they just enjoy it. He would be happy to see
that his prophesy finally
&lt;a href=&quot;https://techbeacon.com/13-ways-motivate-software-engineers&quot;&gt;came true&lt;/a&gt;:
programmers don&amp;#39;t work for money any more.
They &lt;a href=&quot;https://www.verywell.com/what-is-intrinsic-motivation-2795385&quot;&gt;work&lt;/a&gt;
for challenge, respect, curiosity, recognition, cooperation, and free beer
on Fridays. As a modern eco-manager you must stop humiliating them
with old-fashioned
&lt;a href=&quot;/2014/09/24/why-monetary-awards-dont-work.html&quot;&gt;dollar bills&lt;/a&gt;
and start inspiring them with these
&lt;a href=&quot;/2015/03/02/team-morale-myths-and-reality.html&quot;&gt;intrinsic rewards&lt;/a&gt;
and free cookies.
You will &lt;a href=&quot;/2016/12/06/how-to-pay-programmers-less.html&quot;&gt;save some money&lt;/a&gt; too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be Equal&lt;/strong&gt;.
&lt;a href=&quot;/2016/02/18/holacracy-autocracy.html&quot;&gt;Holacracy&lt;/a&gt;
is quickly replacing military-style management hierarchies, which
proved to be depressing and hurtful to human feelings. Modern managers
don&amp;#39;t even like to be called &amp;quot;managers.&amp;quot; Instead, they
&lt;a href=&quot;https://www.forbes.com/sites/joshlinkner/2014/12/04/the-21-most-creative-job-titles/#2b863a112933&quot;&gt;demand&lt;/a&gt;
we call them ambassadors, curators, cheerleaders, and catalysts.
You must be very creative in hiding your actual
career ladder position, in order not to irritate and hurt your team.
Of course, you will still use fear and guilt to keep your
&lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;slaves&lt;/a&gt; under control,
but new eco-titles will help you keep them less aware of what&amp;#39;s going on.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;You still use fear and guilt to keep your slaves under control, but new eco-titles help you keep them less aware of what&amp;#39;s going on.&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Be a Leader&lt;/strong&gt;.
Traditional &lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;project management&lt;/a&gt;
with its critical path method,
contingency reserves, cause-and-effect diagrams,
work breakdown structures, policies, procedures, and plans, is dead.
&lt;a href=&quot;/2016/07/11/mistakes-in-agile-manifesto.html&quot;&gt;Agile&lt;/a&gt;,
Scrum, Kanban, and others, are dancing on its grave, with
motivational speeches, burndown rates, sprints,
&lt;a href=&quot;/2015/01/08/morning-standup-meetings.html&quot;&gt;standups&lt;/a&gt;, and smoothies.
The world doesn&amp;#39;t need managers anymore, it needs leaders. And you must be one.
PMBOK and RUP on your bookshelf must be replaced with
Elon Musk and Peter Thiel biographies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be a Committer&lt;/strong&gt;.
Not a &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;
committer, obviously&amp;mdash;that&amp;#39;s for junior programmers. You
have to commit yourself to the project, just like Tim Cook
&lt;a href=&quot;https://techcrunch.com/2016/12/19/apples-tim-cook-assures-employees-that-it-is-committed-to-the-mac-and-that-great-desktops-are-coming/&quot;&gt;committed&lt;/a&gt;
to MacBooks. Technically, this means:
staying in the office till late,
taking no vacations,
wearing a branded t-shirt,
never discussing a salary or any money at all, and
being a proud patriot, no matter how ugly the product is.
In other words, being a
&lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;good slave&lt;/a&gt;
and showing your team a good example.
Don&amp;#39;t worry about the future, when projects fail good committers
just commit &lt;del&gt;suicide&lt;/del&gt; themselves to new projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be a Friend&lt;/strong&gt;.
Explicit and non-ambiguous work orders are not
popular any more&amp;mdash;they create tension and destroy
&lt;a href=&quot;/2015/03/02/team-morale-myths-and-reality.html&quot;&gt;team morale&lt;/a&gt;.
Guilt-driven management is much more subtle and elegant:
you turn your subordinates into a family and then say:
&amp;quot;I count on you as a friend.&amp;quot;
Who can refuse a friend? And not even a friend, but a mom. This is
who they will associate you with when the guilt kicks in&amp;mdash;with their
mothers. They won&amp;#39;t disobey, won&amp;#39;t quit, and will never ask for more money.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Don&amp;#39;t worry about the future, when projects fail good committers just commit themselves to new projects.&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Be Responsible&lt;/strong&gt;.
In the brick-and-mortar management era responsibility was
&lt;a href=&quot;/2014/09/24/why-monetary-awards-dont-work.html&quot;&gt;measurable&lt;/a&gt;
by what you earn if you succeed and how you suffer if you fail.
Luckily, the world has recently learned that this
was a mistake we&amp;#39;d been making for
&lt;a href=&quot;/2016/09/27/command-control-innovate.html&quot;&gt;a hundreds years&lt;/a&gt;.
We don&amp;#39;t suffer any more.
Being responsible now means something completely different.
We wear stickers on our MacBooks,
we fall in love with &amp;quot;extremely talented people,&amp;quot;
we participate, engage, celebrate, and champion excellence.
And, of course, now it is
&lt;a href=&quot;/2015/11/21/ringelmann-effect-vs-agile.html&quot;&gt;always&lt;/a&gt; &amp;quot;We&amp;quot; instead of &amp;quot;I&amp;quot;:
&amp;quot;We are responsible,&amp;quot; &amp;quot;It is our project,&amp;quot;
&amp;quot;We can,&amp;quot; &amp;quot;Our goal is to do it together!&amp;quot;
Of course, when the project fails you find a new one, with a
&lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;bigger salary&lt;/a&gt;
and a new group of extremely talented people,
and become very responsible again. Nice, huh?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><category term="sarcasm" /><summary type="html">We live in the era of organic food, eco-friendly toilets, zero-emission cars,
and harassment-free offices. Our management practices have to keep up&amp;mdash;they
must be zero-stress, conflict-free, and idiot-friendly. If you&amp;#39;re still
stuck in the old carrot-and-stick, mediocrity-intolerant, primitive mentality,
these recipes will open your eyes.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/06/dogville.jpg" /></entry><entry><title type="html">Why Do You Contribute to Open Source?</title><link href="http://www.yegor256.com/2017/05/30/why-contribute-to-open-source.html" rel="alternate" type="text/html" title="Why Do You Contribute to Open Source?" /><published>2017-05-30T00:00:00+00:00</published><updated>2017-05-30T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/05/30/why-contribute-to-open-source</id><content type="html" xml:base="http://www.yegor256.com/2017/05/30/why-contribute-to-open-source.html">&lt;p&gt;You probably remember my half-a-year-old article:
&lt;a href=&quot;/2015/12/22/why-dont-you-contribute-to-open-source.html&quot;&gt;Why Don&amp;#39;t You Contribute to Open Source?&lt;/a&gt;.
I said there that if you don&amp;#39;t have your own OSS projects
or don&amp;#39;t give anything back to those you&amp;#39;re using&amp;mdash;something
is wrong with you. Now I&amp;#39;m talking to those who actually &lt;em&gt;do&lt;/em&gt; contribute
without demanding anything back&amp;mdash;guys, you&amp;#39;re doing it wrong!&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;The Untouchables (1987) by Brian De Palma&#39; src=&#39;/images/2017/05/the-untouchables.jpg&#39; longdesc=&#39;#93469771&#39;/&gt;&lt;figcaption id=&#39;93469771&#39;&gt;The Untouchables (1987) by Brian De Palma&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Open source &lt;del&gt;almost&lt;/del&gt; always means &lt;em&gt;free&lt;/em&gt;, as in beer&amp;mdash;nobody will
pay you anything for your pull requests. However, it doesn&amp;#39;t mean
you&amp;#39;re not allowed to make money.&lt;/p&gt;

&lt;p&gt;Of course, you will not earn any cash directly by fixing a bug in
&lt;a href=&quot;https://github.com/docker/docker&quot;&gt;docker/docker&lt;/a&gt;, but you &lt;em&gt;may&lt;/em&gt; earn
some intangible value, which will be converted to cash later.&lt;/p&gt;

&lt;p&gt;Moreover, you &lt;em&gt;must&lt;/em&gt; earn it&amp;mdash;this is my point. Otherwise, if you contribute
out of pure
&lt;a href=&quot;https://en.wikipedia.org/wiki/Altruism&quot;&gt;altruism&lt;/a&gt;,
you will lose the motivation very soon. Not because
you&amp;#39;re greedy and
&lt;a href=&quot;/2014/09/24/why-monetary-awards-dont-work.html&quot;&gt;only money&lt;/a&gt;
can motivate you, but because without
money you won&amp;#39;t feel your efforts are being truly appreciated.&lt;/p&gt;

&lt;p&gt;The intangible value I&amp;#39;m talking about is, of course, your
&lt;a href=&quot;/2016/03/08/pimp-up-your-resume.html&quot;&gt;resume&lt;/a&gt;. If you
are an active contributor to &lt;a href=&quot;https://github.com/docker/docker&quot;&gt;docker/docker&lt;/a&gt;,
your resume says so, and you&amp;#39;re in the list of contributors&amp;mdash;your
hourly rate or your salary will
&lt;a href=&quot;/2014/10/29/how-much-do-you-cost.html&quot;&gt;definitely&lt;/a&gt; be higher.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;If you contribute out of pure altruism, you will lose the motivation very soon.&lt;/aside&gt;

&lt;p&gt;I would recommend, before becoming a contributor, you ask yourself a question: How will
this affect my resume, my profile, and my reputation on the market? Will they
put me into the list of contributors? Will they promote me in exchange
for my pull requests? Will I be able to mention their name in my
next job interview?&lt;/p&gt;

&lt;p&gt;Most projects won&amp;#39;t do anything for you unless you &lt;em&gt;explicitly&lt;/em&gt; ask.
I&amp;#39;m a maintainer of over 40 GitHub repositories and at least six of them
have over 200 stars
(&lt;a href=&quot;https://github.com/yegor256/tacit&quot;&gt;yegor256/tacit&lt;/a&gt;,
&lt;a href=&quot;https://github.com/yegor256/takes&quot;&gt;yegor256/takes&lt;/a&gt;,
&lt;a href=&quot;https://github.com/yegor256/rultor&quot;&gt;yegor256/rultor&lt;/a&gt;,
&lt;a href=&quot;https://github.com/yegor256/eo&quot;&gt;yegor256/eo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/jcabi/jcabi-aspects&quot;&gt;jcabi/jcabi-aspects&lt;/a&gt;,
&lt;a href=&quot;https://github.com/teamed/qulice&quot;&gt;teamed/qulice&lt;/a&gt;).
If you submit a pull request to any of them, I will
just review it, merge and forget your name.
I won&amp;#39;t do anything else, simply because &lt;em&gt;you&lt;/em&gt; didn&amp;#39;t ask.&lt;/p&gt;

&lt;p&gt;However, if you ask me to put your name and a link to your blog
in the list of contributors, I will do it without any hesitation.
Moreover, if you do that right inside the pull request you are submitting,
I will merge it and your name will go right into the repo, into the very
place you find the most suitable.&lt;/p&gt;

&lt;p&gt;Over the last six years of my active participation in open source
development I&amp;#39;ve never seen anyone asking me that. Why? I don&amp;#39;t know.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="programming" /><summary type="html">You probably remember my half-a-year-old article:
Why Don&amp;#39;t You Contribute to Open Source?.
I said there that if you don&amp;#39;t have your own OSS projects
or don&amp;#39;t give anything back to those you&amp;#39;re using&amp;mdash;something
is wrong with you. Now I&amp;#39;m talking to those who actually do contribute
without demanding anything back&amp;mdash;guys, you&amp;#39;re doing it wrong!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/05/the-untouchables.jpg" /></entry><entry><title type="html">Any Program Has an Unlimited Number of Bugs</title><link href="http://www.yegor256.com/2017/05/23/unlimited-number-of-bugs.html" rel="alternate" type="text/html" title="Any Program Has an Unlimited Number of Bugs" /><published>2017-05-23T00:00:00+00:00</published><updated>2017-05-23T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/05/23/unlimited-number-of-bugs</id><content type="html" xml:base="http://www.yegor256.com/2017/05/23/unlimited-number-of-bugs.html">&lt;p&gt;This may sound strange, but I will prove it: no matter how big
or stable a piece of software is, it has an &lt;em&gt;unlimited&lt;/em&gt; number
of bugs not yet found. No matter how many of them we have already managed
to find and fix, there are still too many left to count.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;L&amp;#39;amico di famiglia (2006) by Paolo Sorrentino&#39; src=&#39;/images/2017/05/lamico-di-famiglia.jpg&#39; longdesc=&#39;#5232e494&#39;/&gt;&lt;figcaption id=&#39;5232e494&#39;&gt;L&amp;#39;amico di famiglia (2006) by Paolo Sorrentino&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let&amp;#39;s take this simple Java method that calculates a sum of two integers
as an example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This simple program has an &lt;em&gt;unlimited&lt;/em&gt; number of bugs.&lt;/p&gt;

&lt;p&gt;To prove this claim we just need to put two thoughts together:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First, a bug is something that compromises the quality of software,
which, according to
&lt;a href=&quot;https://standards.ieee.org/findstds/standard/610.12-1990.html&quot;&gt;IEEE&amp;nbsp;610.12-1990&lt;/a&gt;,
is &amp;quot;the degree to which
a system meets specified requirements or &lt;em&gt;user expectations&lt;/em&gt;.&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second, requirements and expectations may be functional and non-functional.
The latter include performance, resilience, robustness, &lt;em&gt;maintainability&lt;/em&gt;,
and a few dozen other
&lt;a href=&quot;https://en.wikipedia.org/wiki/Non-functional_requirement&quot;&gt;NFRs&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is obvious that there are at least two variables in this equation that
are ambiguous: user expectations and
&lt;a href=&quot;/2015/06/11/wikipedia-bug-definition.html&quot;&gt;maintainability&lt;/a&gt;.
We can&amp;#39;t be precise about them and that&amp;#39;s why the number of bugs
they will produce has no limit.&lt;/p&gt;

&lt;p&gt;Of course, only a very limited subset of the entire set of bugs has any
real business impact. Most of the bugs that exist in a program may
stay there even after it is shipped to its users&amp;mdash;nobody will ever
find them or else the damage they cause to the user experience will be
insignificant.&lt;/p&gt;

&lt;p&gt;Finally, take a look at the method &lt;code&gt;sum()&lt;/code&gt; one more time. How about these bugs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It doesn&amp;#39;t handle overflows&lt;/li&gt;
&lt;li&gt;It doesn&amp;#39;t have any user documentation&lt;/li&gt;
&lt;li&gt;Its design is not object-oriented&lt;/li&gt;
&lt;li&gt;It doesn&amp;#39;t sum three or more numbers&lt;/li&gt;
&lt;li&gt;It doesn&amp;#39;t sum &lt;code&gt;double&lt;/code&gt; numbers&lt;/li&gt;
&lt;li&gt;It doesn&amp;#39;t cast &lt;code&gt;long&lt;/code&gt; to &lt;code&gt;int&lt;/code&gt; automatically&lt;/li&gt;
&lt;li&gt;It doesn&amp;#39;t skip execution if one argument is zero&lt;/li&gt;
&lt;li&gt;It doesn&amp;#39;t cache results of previous calculations&lt;/li&gt;
&lt;li&gt;There is no logging&lt;/li&gt;
&lt;li&gt;Checkstyle would complain since arguments are not &lt;code&gt;final&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;#39;m sure you can find many more.&lt;/p&gt;

&lt;p&gt;BTW, Glenford J. Myers said something very similar in his book
&lt;a href=&quot;http://amzn.to/1Y3qAbN&quot;&gt;&amp;quot;The Art of Software Testing,&amp;quot;&lt;/a&gt; which I
&lt;a href=&quot;/2014/08/22/art-of-software-testing.html&quot;&gt;reviewed&lt;/a&gt;
earlier.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="testing" /><summary type="html">This may sound strange, but I will prove it: no matter how big
or stable a piece of software is, it has an unlimited number
of bugs not yet found. No matter how many of them we have already managed
to find and fix, there are still too many left to count.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/05/lamico-di-famiglia.jpg" /></entry><entry><title type="html">Single Statement Unit Tests</title><link href="http://www.yegor256.com/2017/05/17/single-statement-unit-tests.html" rel="alternate" type="text/html" title="Single Statement Unit Tests" /><published>2017-05-17T00:00:00+00:00</published><updated>2017-05-17T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/05/17/single-statement-unit-tests</id><content type="html" xml:base="http://www.yegor256.com/2017/05/17/single-statement-unit-tests.html">&lt;p&gt;Many articles and books have already been written about unit testing patterns
and anti-patterns. I want to add one more recommendation which, I believe,
can help us make our tests, &lt;em&gt;and&lt;/em&gt; our production code, more &lt;em&gt;object-oriented&lt;/em&gt;.
Here it is: a test method must contain nothing but a single &lt;code&gt;assert&lt;/code&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Bullet (1996) by Julien Temple&#39; src=&#39;/images/2017/05/bullet.jpg&#39; longdesc=&#39;#80ac9633&#39;/&gt;&lt;figcaption id=&#39;80ac9633&#39;&gt;Bullet (1996) by Julien Temple&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Look at this test method from &lt;code&gt;RandomStreamTest&lt;/code&gt; from OpenJDK&amp;nbsp;8,
created by Brian Goetz:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testIntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are two parts in this method: the algorithm and the assertion. The
algorithm prepares two arrays of integers and the assertion compares them
and throws &lt;code&gt;AssertionError&lt;/code&gt; if they are not equal.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m saying that the first part, the algorithm, is the one we should try
to avoid. The only thing we must have is the assertion. Here is
how I would re-design this test method:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testIntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayFromRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayFromRandom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ArrayFromRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If Java had &lt;a href=&quot;/2017/05/16/monikers.html&quot;&gt;monikers&lt;/a&gt;
this code would look even more elegant:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testIntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayFromRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see, there is only one &amp;quot;statement&amp;quot; in this method: &lt;code&gt;assertEquals()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hamcrest.org/&quot;&gt;Hamcrest&lt;/a&gt; with its
&lt;a href=&quot;http://hamcrest.org/JavaHamcrest/javadoc/2.0.0.0/org/hamcrest/MatcherAssert.html&quot;&gt;&lt;code&gt;assertThat()&lt;/code&gt;&lt;/a&gt;
and its
&lt;a href=&quot;http://hamcrest.org/JavaHamcrest/javadoc/2.0.0.0/allclasses-frame.html&quot;&gt;collection&lt;/a&gt;
of basic matchers is a perfect instrument to make our
single-statement test methods even more cohesive and readable.&lt;/p&gt;

&lt;p&gt;There are a number of practical benefits of this principle, if we
agree to follow it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reusability&lt;/strong&gt;. The classes we will have to create for test
assertions will be reusable in other test methods and test cases.
Just as, in the example above, &lt;code&gt;ArrayFromRandom&lt;/code&gt; could be used
somewhere else. Similarly, Hamcrest matchers may and will constitute
a library of reusable test components.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Brevity&lt;/strong&gt;. Since it will be rather difficult to create a long
test method when it only has a single &lt;code&gt;assert&lt;/code&gt;, you and your fellow programmers
will inevitably write shorter and more readable code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Readability&lt;/strong&gt;. With a single &lt;code&gt;assert&lt;/code&gt; it will always be obvious
what the intent of the test method is. It will start with the intent
declaration while all other lower level details will be indented.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Immutability&lt;/strong&gt;. It will be almost impossible to have
&lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;setters&lt;/a&gt; in the
production code if test methods have no place for algorithmic code. You
inevitably will create
&lt;a href=&quot;/2014/06/09/objects-should-be-immutable.html&quot;&gt;immutable objects&lt;/a&gt;
to make them testable with a single &lt;code&gt;assert&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The biggest benefit we get when this principle is applied to our tests
is that they become declarative and object-oriented, instead of being
algorithmic, imperative, and procedural.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="testing" /><category term="java" /><summary type="html">Many articles and books have already been written about unit testing patterns
and anti-patterns. I want to add one more recommendation which, I believe,
can help us make our tests, and our production code, more object-oriented.
Here it is: a test method must contain nothing but a single assert.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/05/bullet.jpg" /></entry><entry><title type="html">Monikers Instead of Variables</title><link href="http://www.yegor256.com/2017/05/16/monikers.html" rel="alternate" type="text/html" title="Monikers Instead of Variables" /><published>2017-05-16T00:00:00+00:00</published><updated>2017-05-16T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/05/16/monikers</id><content type="html" xml:base="http://www.yegor256.com/2017/05/16/monikers.html">&lt;p&gt;If we agree that all local variables &lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/48413&quot;&gt;must be&lt;/a&gt;
&lt;code&gt;final&lt;/code&gt;, multiple &lt;code&gt;return&lt;/code&gt;s must be avoided, and
temporal coupling between statements is evil&amp;mdash;we can get
rid of variables entirely and replace them with &lt;em&gt;inline values&lt;/em&gt;
and their &lt;em&gt;monikers&lt;/em&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;OSS 117: Cairo, Nest of Spies (2006) by Michel Hazanavicius&#39; src=&#39;/images/2017/05/oss-117.jpg&#39; longdesc=&#39;#fde99754&#39;/&gt;&lt;figcaption id=&#39;fde99754&#39;&gt;OSS 117: Cairo, Nest of Spies (2006) by Michel Hazanavicius&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Here is the code from Section 5.10 (&lt;em&gt;Algorithms&lt;/em&gt;) of my book
&lt;a href=&quot;http://amzn.to/2pjciUY&quot;&gt;&lt;em&gt;Elegant Objects&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Secret&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Farewell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Attempts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VerboseDiff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Guess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;say&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pay attention to the variable &lt;code&gt;secret&lt;/code&gt;. It exists here because we
need its value twice: first, as a constructor argument for the &lt;code&gt;Diff&lt;/code&gt;, second
as a constructor argument for the &lt;code&gt;Farewell&lt;/code&gt;. We can&amp;#39;t &lt;em&gt;inline&lt;/em&gt; the value by
creating two separate instances of class &lt;code&gt;Secret&lt;/code&gt;, because it really has
to be the same object&amp;mdash;it encapsulates the number that we hide
from the user in a number-guessing game.&lt;/p&gt;

&lt;p&gt;There could be many other situations where a &lt;em&gt;value&lt;/em&gt; needs to be used multiple
times while remaining unmodifiable. Why do we still call these values &lt;em&gt;variables&lt;/em&gt; if
technically they are constants?&lt;/p&gt;

&lt;p&gt;I&amp;#39;m suggesting we introduce &amp;quot;monikers&amp;quot; for these values, assigning them
through the &lt;code&gt;as&lt;/code&gt; keyword. For example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Farewell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Attempts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VerboseDiff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Guess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;say&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here &lt;code&gt;new Secret()&lt;/code&gt; is the inlined value and &lt;code&gt;secret&lt;/code&gt; is its &lt;em&gt;moniker&lt;/em&gt;, which
we use a few lines later.&lt;/p&gt;

&lt;p&gt;It would be great to have this feature in Java, right?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><summary type="html">If we agree that all local variables must be
final, multiple returns must be avoided, and
temporal coupling between statements is evil&amp;mdash;we can get
rid of variables entirely and replace them with inline values
and their monikers.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/05/oss-117.jpg" /></entry><entry><title type="html">How Does Inversion of Control Really Work?</title><link href="http://www.yegor256.com/2017/05/10/inversion-of-control.html" rel="alternate" type="text/html" title="How Does Inversion of Control Really Work?" /><published>2017-05-10T00:00:00+00:00</published><updated>2017-05-10T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/05/10/inversion-of-control</id><content type="html" xml:base="http://www.yegor256.com/2017/05/10/inversion-of-control.html">&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Inversion_of_control&quot;&gt;IoC&lt;/a&gt;
seems to have become the cornerstone concept of many frameworks
and object-oriented designs since it was described by
&lt;a href=&quot;https://martinfowler.com/bliki/InversionOfControl.html&quot;&gt;Martin Fowler&lt;/a&gt;,
&lt;a href=&quot;https://web.archive.org/web/20041221102842/http://www.objectmentor.com/resources/articles/dip.pdf&quot;&gt;Robert Martin&lt;/a&gt;
and
&lt;a href=&quot;http://www.laputan.org/drc/drc.html&quot;&gt;others&lt;/a&gt;
ten years ago. Despite its popularity IoC is
misunderstood and overcomplicated all too often.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Le conseguenze dell&amp;#39;amore (2004) by Paolo Sorrentino&#39; src=&#39;/images/2017/05/le-conseguenze-dellamore.jpg&#39; longdesc=&#39;#d072e2ac&#39;/&gt;&lt;figcaption id=&#39;d072e2ac&#39;&gt;Le conseguenze dell&amp;#39;amore (2004) by Paolo Sorrentino&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Look at this code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It is very straight forward: we retrieve the title from the book and
simply give it to the &lt;code&gt;print()&lt;/code&gt; procedure, or whatever else it might be. &lt;em&gt;We&lt;/em&gt; are in charge,
the &lt;em&gt;control&lt;/em&gt; is in our hands.&lt;/p&gt;

&lt;p&gt;In contrast to this, here is the &lt;em&gt;inversion&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We give the entire book to the procedure &lt;code&gt;print()&lt;/code&gt; and
it calls &lt;code&gt;title()&lt;/code&gt; when it feels like it. That is, we &lt;em&gt;delegate&lt;/em&gt; control.&lt;/p&gt;

&lt;p&gt;This is pretty much everything you need to know about IoC.&lt;/p&gt;

&lt;p&gt;Does it have anything to do with
&lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;dependency injection&lt;/a&gt; containers?
Well, of course, we &lt;em&gt;could&lt;/em&gt; put the book into a container, inject the entire
container into &lt;code&gt;print()&lt;/code&gt;, let it retrieve the book from the container and
then call &lt;code&gt;title()&lt;/code&gt;. But that&amp;#39;s not what IoC is really about&amp;mdash;it&amp;#39;s merely
one of its
&lt;a href=&quot;/2014/10/03/di-containers-are-evil.html&quot;&gt;perverted&lt;/a&gt; usage scenarios.&lt;/p&gt;

&lt;p&gt;The main point of IoC is exactly the same as I was proposing
in my previous posts about &lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;naked data&lt;/a&gt;
and &lt;a href=&quot;/2016/12/20/can-objects-be-friends.html&quot;&gt;object friends&lt;/a&gt;:
we must &lt;em&gt;not&lt;/em&gt; deal with &lt;em&gt;data&lt;/em&gt;, but instead only with
&lt;a href=&quot;https://en.wikipedia.org/wiki/Object_composition&quot;&gt;object composition&lt;/a&gt;. In the
given example the design would be even better if we got rid of the
&lt;code&gt;print()&lt;/code&gt; procedure altogether and replaced it with an object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrintedBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That would be pure &lt;a href=&quot;https://en.wikipedia.org/wiki/Object_composition&quot;&gt;object composition&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There is not much more to say on this subject; I hope I have cleared it up for you&amp;mdash;it
is just as simple as that.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><summary type="html">IoC
seems to have become the cornerstone concept of many frameworks
and object-oriented designs since it was described by
Martin Fowler,
Robert Martin
and
others
ten years ago. Despite its popularity IoC is
misunderstood and overcomplicated all too often.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/05/le-conseguenze-dellamore.jpg" /></entry><entry><title type="html">A Remote Slave Is Still a Slave</title><link href="http://www.yegor256.com/2017/05/02/remote-slaves.html" rel="alternate" type="text/html" title="A Remote Slave Is Still a Slave" /><published>2017-05-02T00:00:00+00:00</published><updated>2017-05-02T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/05/02/remote-slaves</id><content type="html" xml:base="http://www.yegor256.com/2017/05/02/remote-slaves.html">&lt;p&gt;Working remotely is definitely a trend, according to the
&lt;a href=&quot;https://www.bls.gov/opub/ted/2016/24-percent-of-employed-people-did-some-or-all-of-their-work-at-home-in-2015.htm&quot;&gt;BLS&lt;/a&gt;
and my personal observations.
&amp;quot;Let them work from home&amp;quot;
seems to be the silver bullet for
every second startup and even some big companies like
&lt;a href=&quot;https://open.bufferapp.com/remote-team-connect/&quot;&gt;Buffer&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/pulse/billion-dollar-tech-company-offices-email-glenn-leibowitz&quot;&gt;Automattic&lt;/a&gt;,
&lt;a href=&quot;https://www.groovehq.com/blog/remote-work-tips&quot;&gt;Groove&lt;/a&gt;,
and
&lt;a href=&quot;https://www.forbes.com/sites/laurashin/2017/01/31/work-from-home-in-2017-the-top-100-companies-offering-remote-jobs/&quot;&gt;many others&lt;/a&gt;.
However, in most cases, the replacement of a brick-and-mortar office with a virtual one
doesn&amp;#39;t help companies and their &lt;del&gt;slaves&lt;/del&gt; employees
become more productive.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Happiness (1998) by Todd Solondz&#39; src=&#39;/images/2017/05/happiness.jpg&#39; longdesc=&#39;#3770a056&#39;/&gt;&lt;figcaption id=&#39;3770a056&#39;&gt;Happiness (1998) by Todd Solondz&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Working from home, also known as working from anywhere,
working remotely, or simply telecommuting, usually leads to four
radical changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First, we replace office security cameras on the ceiling with screen
&lt;strong&gt;monitoring&lt;/strong&gt; software and/or web cameras that constantly watch us.
&lt;a href=&quot;https://support.upwork.com/hc/en-us/articles/211064098-Log-Time-with-the-Upwork-Desktop-App-&quot;&gt;Upwork does&lt;/a&gt;
it to its thousands of &lt;del&gt;monkeys&lt;/del&gt; freelancers,
requiring them to install a background screen capture utility
and make sure it is running during their entire working time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second, we replace meeting rooms with conference software
like &lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt; or good old &lt;a href=&quot;https://www.skype.com/en/&quot;&gt;Skype&lt;/a&gt;,
and &lt;a href=&quot;https://hbr.org/2015/03/how-to-run-a-great-virtual-meeting&quot;&gt;learn&lt;/a&gt;
how to make &lt;strong&gt;virtual meetings&lt;/strong&gt; productive. The main principle is similar to
the one we use for traditional meetings: Make it fun. Otherwise we will
switch to Facebook or PokerStars while the manager is
still &lt;del&gt;acting&lt;/del&gt; talking in her window.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Third, we replace Post-it stickies and Scrum boards with tickets and
tasks in &lt;a href=&quot;https://trello.com/&quot;&gt;Trello&lt;/a&gt;
or &lt;a href=&quot;https://www.quora.com/What-are-the-best-alternatives-to-Trello&quot;&gt;any other&lt;/a&gt;
&lt;strong&gt;task tracker&lt;/strong&gt;.
We keep everybody busy learning new tools and filling them with data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fourth, and most importantly, we replace office chit-chats with
&lt;a href=&quot;https://slack.com/&quot;&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/a&gt; channels or &lt;a href=&quot;https://www.hipchat.com/&quot;&gt;HipChat&lt;/a&gt; groups.
Instead of being in the office at 9 a.m.,
everybody will have the ability to demonstrate the level of their
&lt;a href=&quot;https://en.wikipedia.org/wiki/Presenteeism&quot;&gt;presenteeism&lt;/a&gt; using emojis.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your life, as a developer, will be very different on a team that
works remotely. It will be full of real freedom. However, there will be
certain problems:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It&amp;#39;s Harder to Prove Innocence&lt;/strong&gt;.
How does your
&lt;a href=&quot;/2017/06/06/gluten-free-management.html&quot;&gt;manager&lt;/a&gt; know you&amp;#39;re actually working,
not watching TV, playing with your kids, or grooming your favorite
open-source pets? In the office, it&amp;#39;s easier; you just sit in front of the monitor
and the boss is happy. At home or in a coffee shop, you are guilty by
default until you prove the opposite by creating new tickets,
posting emojis to Slack, and sending emails with multiple CCs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It&amp;#39;s Harder to Find Information&lt;/strong&gt;.
In the office, you can always ask your question out loud for
the most knowledgeable person to help you. Remotely, however, you will have
to search Wiki pages, Google Docs,
and, god forbid, Git logs. Be prepared for almost nobody
to be interested in sharing knowledge or teaching you remotely&amp;mdash;what
is the point if nobody sees him doing it? You will be on your own
in front of that year-old documentation made by someone fired
right after writing it up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It&amp;#39;s Harder to Avoid Overtime&lt;/strong&gt;.
In the office, you just walk away with everybody else when time is up. Remotely,
you will have phone calls and Slack discussions in the middle of the night on Sunday,
especially if the team is distributed across multiple time zones. Everybody
will expect 24-7 availability because you&amp;#39;re working from home. And changing
the status to &amp;quot;Do not disturb&amp;quot; in Skype will only offend them and seriously
damage your reputation. In a work-from-home environment, good programmers are
those who are always online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It&amp;#39;s Harder to Defend Yourself&lt;/strong&gt;.
You won&amp;#39;t know where to expect the next bout of trouble from. In the office,
you can visually observe the territory, smell conflict in the air, see
how people move, what they talk about, and who is the next victim. Remotely,
you&amp;#39;re sitting in isolation, extracting pieces of information from Slack.
You can easily become the next victim without even noticing it. Simply put,
they will stab you in the back while you&amp;#39;re writing Java and thinking
about a new unit test.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It&amp;#39;s Harder Not to Waste Time&lt;/strong&gt;.
It sounds counter-intuitive, but while sitting at home, you waste much more time
than in the office. Meetings will be called more frequently, and they will
be less effective, thanks to constant issues with scheduling, quality of
connection, software failure, and of course a lack of online communication
skills. The manager will call more meetings largely in order to convince
himself that the team is actually working; hearing your voice many times a day is
a perfect confirmation that you are busy and he is a good manager.&lt;/p&gt;

&lt;aside class=&#39;quote&#39;&gt;Remote work will happen automatically as soon as everybody starts getting their paychecks for the results they deliver, not the time they spend.&lt;/aside&gt;

&lt;p&gt;On a more serious note, I believe that working remotely
only makes things &lt;em&gt;worse&lt;/em&gt; when the motivation of the team
is still based on &lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;hourly pay&lt;/a&gt;.
A slave working remotely is still a slave. Moreover, this slave
is harder to manage and control. First, we have to switch to a results-based
payment model and then go remote. Actually, remote work will happen automatically
as soon as everybody starts getting their paychecks for the results they
deliver, not the time they spend. They will simply stop showing up at the office,
but their results will keep coming to the project,
without any web cameras or Slack channels.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s no surprise that many big companies have already decided to stop this telecommuting
nonsense and put their slaves back behind closed doors; take
&lt;a href=&quot;http://www.tbray.org/ongoing/When/201x/2014/02/19/Leaving-Google&quot;&gt;Google&lt;/a&gt;,
&lt;a href=&quot;http://money.cnn.com/2013/02/25/technology/yahoo-work-from-home/index.html?iid=EL&quot;&gt;Yahoo&lt;/a&gt;, and
&lt;a href=&quot;http://money.cnn.com/2013/03/05/technology/best-buy-work-from-home/index.html&quot;&gt;Best Buy&lt;/a&gt;
for example.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><category term="sarcasm" /><summary type="html">Working remotely is definitely a trend, according to the
BLS
and my personal observations.
&amp;quot;Let them work from home&amp;quot;
seems to be the silver bullet for
every second startup and even some big companies like
Buffer,
Automattic,
Groove,
and
many others.
However, in most cases, the replacement of a brick-and-mortar office with a virtual one
doesn&amp;#39;t help companies and their slaves employees
become more productive.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/05/happiness.jpg" /></entry><entry><title type="html">SixNines.io, Your Website Availability Monitor</title><link href="http://www.yegor256.com/2017/04/25/sixnines.html" rel="alternate" type="text/html" title="SixNines.io, Your Website Availability Monitor" /><published>2017-04-25T00:00:00+00:00</published><updated>2017-04-25T00:00:00+00:00</updated><id>http://www.yegor256.com/2017/04/25/sixnines</id><content type="html" xml:base="http://www.yegor256.com/2017/04/25/sixnines.html">&lt;figure class=&#39;badge&#39;&gt;&lt;a href=&#39;http://www.sixnines.io&#39;&gt;&lt;img src=&#39;http://www.sixnines.io/images/logo.png&#39; style=&#39;width:64px;max-width:100%;&#39; alt=&#39;badge&#39;/&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Availability is a metric that demonstrates how often your website
is available to its users. Technically, it&amp;#39;s a ratio between the number of successful
attempts to open the website and the number of failed ones. If one out of a hundred
attempts failed, we can say the availability is 99 percent. High-quality
websites aim for so-called &amp;quot;six nines&amp;quot;
&lt;a href=&quot;https://en.wikipedia.org/wiki/High_availability&quot;&gt;high availability&lt;/a&gt;, so named by the
number of 9s in the ratio: 99.9999 percent. We created a service that helps
you measure this metric and demonstrate its value to your users:
&lt;a href=&quot;http://www.sixnines.io&quot;&gt;SixNines&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&#39;jb_picture&#39;&gt;&lt;img itemprop=&#39;image&#39; alt=&#39;Main picture&#39; src=&#39;/images/2017/04/sixnines.jpg&#39;/&gt;&lt;/figure&gt;

&lt;p&gt;All you need to do is log in using your
&lt;a href=&quot;https://www.github.com&quot;&gt;GitHub&lt;/a&gt; account and register
your URI, which &lt;a href=&quot;http://www.sixnines.io&quot;&gt;SixNines&lt;/a&gt; will
validate. This operation will cost you
$4.95 (processed by &lt;a href=&quot;https://www.stripe.com&quot;&gt;Stripe&lt;/a&gt;).
It&amp;#39;s a once-in-a-lifetime fee
(if you don&amp;#39;t have any money, &lt;a href=&quot;mailto:free@sixnines.io&quot;&gt;email&lt;/a&gt; us and we&amp;#39;ll figure something out).
As soon as your URI is in the system, we will monitor it
&lt;a href=&quot;http://www.sixnines.io/terms&quot;&gt;forever&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The key problem with the availability metric is that it takes
&lt;em&gt;a lot&lt;/em&gt; of time in order to really guarantee a figure of &amp;quot;six nines.&amp;quot;
Indeed, look at the ratio: 99.9999 percent means that only one attempt
out of a &lt;em&gt;million&lt;/em&gt; fails (provided we make them regularly with equal intervals).
In order to ping your website at least a million
times, we would have to work for 694 days and ping every minute. This
would take more than two years.&lt;/p&gt;

&lt;p&gt;Only after those two years of 24-7 work would we be able to &lt;em&gt;prove&lt;/em&gt; that
your website is of &amp;quot;high availability&amp;quot; and the value of the metric
really is equal to 99.9999 percent (you would have all kinds of reasons to be proud of it).&lt;/p&gt;

&lt;p&gt;You can see some big websites being checked by
&lt;a href=&quot;http://www.sixnines.io&quot;&gt;SixNines&lt;/a&gt; already:&lt;/p&gt;

&lt;p&gt;Google&lt;br/&gt;
&lt;a href=&quot;http://www.sixnines.io/h/4739&quot;&gt;&lt;img src=&quot;http://www.sixnines.io/b/4739&quot; alt=&quot;Google at SixNines&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Facebook&lt;br/&gt;
&lt;a href=&quot;http://www.sixnines.io/h/e203&quot;&gt;&lt;img src=&quot;http://www.sixnines.io/b/e203&quot; alt=&quot;Facebook at SixNines&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter&lt;br/&gt;
&lt;a href=&quot;http://www.sixnines.io/h/cd52&quot;&gt;&lt;img src=&quot;http://www.sixnines.io/b/cd52&quot; alt=&quot;Twitter at SixNines&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yahoo&lt;br/&gt;
&lt;a href=&quot;http://www.sixnines.io/h/63d1&quot;&gt;&lt;img src=&quot;http://www.sixnines.io/b/63d1&quot; alt=&quot;Yahoo at SixNines&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instagram&lt;br/&gt;
&lt;a href=&quot;http://www.sixnines.io/h/bcba&quot;&gt;&lt;img src=&quot;http://www.sixnines.io/b/bcba&quot; alt=&quot;Instagram at SixNines&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is my blog&amp;#39;s availability (it&amp;#39;s hosted on
&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sixnines.io/h/3ba1652f&quot;&gt;&lt;img src=&quot;http://www.sixnines.io/b/3ba1652f&quot; alt=&quot;Yegor256 at SixNines&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you see, their numbers are far from &amp;quot;six nines&amp;quot; because we just started
to measure them. In two years, we will see what their real availability is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sixnines.io&quot;&gt;SixNines&lt;/a&gt; is written in Ruby and is open source, hosted in
&lt;a href=&quot;https://github.com/yegor256/sixnines&quot;&gt;GitHub&lt;/a&gt;. Don&amp;#39;t hesitate to contribute.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="pets" /><summary type="html">Availability is a metric that demonstrates how often your website
is available to its users. Technically, it&amp;#39;s a ratio between the number of successful
attempts to open the website and the number of failed ones. If one out of a hundred
attempts failed, we can say the availability is 99 percent. High-quality
websites aim for so-called &amp;quot;six nines&amp;quot;
high availability, so named by the
number of 9s in the ratio: 99.9999 percent. We created a service that helps
you measure this metric and demonstrate its value to your users:
SixNines.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.yegor256.com/images/2017/04/sixnines.jpg" /></entry></feed>
