<?xml version="1.0"?> <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"> <channel><title>yegor256.com</title><link>http://www.yegor256.com</link> <description>Yegor Bugayenko About Programming</description> <language>en-us</language> <copyright>Yegor Bugayenko, 2014</copyright> <lastBuildDate>Wed, 24 Sep 2014 00:00:00 +0000</lastBuildDate> <image> <url>/images/icon-128x128.png</url><title>yegor256.com</title><link>http://www.yegor256.com/rss.xml</link> </image> <item><title>Monetary Awards Can Work</title><link>http://www.yegor256.com/2014/09/24/why-monetary-awards-dont-work.html</link> <description>&lt;p&gt;Monetary rewards for employees. Do they work? Should we use them? Can money motivate creative minds? Will a programmer work better if he gets paid only when he reaches his goals and objectives?&lt;/p&gt;&lt;div class="video"&gt; &lt;iframe width="640" height="360" src="//www.youtube.com/embed/XJRHkbrZuO8?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;p&gt;Much research has already been done on this subject, and most of it proves that connecting results with money is a very demotivating approach. For example, Ian Larkin &lt;a href="http://hbswk.hbs.edu/item/7215.html"&gt;says&lt;/a&gt; that the most productive workers &amp;quot;suffered a 6-8% decrease in productivity after the award was instituted&amp;quot;.&lt;/p&gt;&lt;p&gt;I believe this is completely true. Money may become a terrible de-motivator for all modern employees (not just programmers).&lt;/p&gt;&lt;p&gt;My question is &amp;mdash; why is this so?&lt;/p&gt; </description> <pubDate>Wed, 24 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/24/why-monetary-awards-dont-work.html</guid> </item> <item><title>Built-in Fake Objects</title><link>http://www.yegor256.com/2014/09/23/built-in-fake-objects.html</link> <description>&lt;p&gt;While mock objects are perfect instruments for unit testing, mocking through mock frameworks may turn your unit tests into an unmaintainable mess.&lt;/p&gt;&lt;p&gt;The root cause of this complexity is that our objects are too big. They have many methods and these methods return other objects, which also have methods. When we pass a mock version of such an object as a parameter, we should make sure that all of its methods return valid objects.&lt;/p&gt;&lt;p&gt;This leads to inevitable complexity, which turns unit tests to &lt;a href="https://news.ycombinator.com/item?id=7353767"&gt;waste&lt;/a&gt; almost impossible to maintain.&lt;/p&gt; </description> <pubDate>Tue, 23 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/23/built-in-fake-objects.html</guid> </item> <item><title>Remote Programming in Teamed.io</title><link>http://www.yegor256.com/2014/09/22/remote-programming-interview.html</link> <description>&lt;p&gt;Here is an interview taken by Lisette Sutherland from &lt;a href="http://www.collaborationsuperpowers.com"&gt;www.CollaborationSuperpowers.com&lt;/a&gt;, a few hours ago, which I enjoyed to give :)&lt;/p&gt;&lt;iframe width="640" height="360" src="//www.youtube.com/embed/TWBBZK_XRNU?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt; </description> <pubDate>Mon, 22 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/22/remote-programming-interview.html</guid> </item> <item><title>Getters/Setters. Evil. Period.</title><link>http://www.yegor256.com/2014/09/16/getters-and-setters-are-evil.html</link> <description>&lt;p&gt;There is an old debate, started in 2003 by Allen Holub in this &lt;a href="http://www.javaworld.com/article/2073723/core-java/why-getter-and-setter-methods-are-evil.html"&gt;Why getter and setter methods are evil&lt;/a&gt; famous article, about whether getters/setters is an anti-pattern and should be avoided or if it is something we inevitably need in object-oriented programming. I&amp;#39;ll try to add my two cents to this discussion.&lt;/p&gt;&lt;p&gt;The gist of the following text is this: getters and setters is a terrible practice and those who use it can&amp;#39;t be excused. Again, to avoid any misunderstanding, I&amp;#39;m not saying that get/set should be avoided when possible. No. I&amp;#39;m saying that you should &lt;strong&gt;never&lt;/strong&gt; have them near your code.&lt;/p&gt; </description> <pubDate>Tue, 16 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/16/getters-and-setters-are-evil.html</guid> </item> <item><title>Deploying to Heroku, in One Click</title><link>http://www.yegor256.com/2014/09/13/deploying-to-heroku.html</link> <description>&lt;p&gt;There were a few articles already about our usage of Rultor for automating continuous delivery cycles of Java and Ruby projects, including &lt;a href="http://www.yegor256.com/2014/08/26/publish-to-rubygems.html"&gt;Rubygems&lt;/a&gt;, &lt;a href="http://www.yegor256.com/2014/08/25/deploy-to-cloudbees.html"&gt;CloudBees&lt;/a&gt; and &lt;a href="http://www.yegor256.com/2014/08/19/how-to-release-to-maven-central.html"&gt;MavenCentral&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;This one describes how Heroku deployment can be automated. When I need to deploy a new version of an Aintshy web application, all I do is create one message in a Github ticket. I just say &lt;code&gt;@rultor release 0.1.4&lt;/code&gt; and version 0.1.4 gets deployed to Heroku. See Github ticket &lt;a href="https://github.com/aintshy/hub/issues/5"&gt;#5&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;You can do the same, with the help of &lt;a href="http://www.rultor.com"&gt;Rultor.com&lt;/a&gt;, a free hosted DevOps assistant.&lt;/p&gt; </description> <pubDate>Sat, 13 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/13/deploying-to-heroku.html</guid> </item> <item><title>Deployment Script vs. Rultor</title><link>http://www.yegor256.com/2014/09/11/deployment-script-vs-rultor.html</link> <description>&lt;figure class='badge'&gt;&lt;a href='http://www.rultor.com'&gt;&lt;img src='http://img.rultor.com/logo.svg' style='width:100px;' alt='badge'/&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;When I explain how &lt;a href="http://www.rultor.com"&gt;Rultor&lt;/a&gt; automates deployment/release processes, very often I hear something like:&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;But I already have a script that deploys everything automatically.&lt;/p&gt; &lt;/blockquote&gt;&lt;p&gt;This response is very common, so I decided to summarize my three main arguments for automated Rultor deployment/release processes in one article: 1) isolated docker containers, 2) visibility of logs and 3) security of credentials.&lt;/p&gt;&lt;p&gt;Read about them and see what Rultor gives you on top of &lt;strong&gt;your existing&lt;/strong&gt; deployment script(s).&lt;/p&gt; </description> <pubDate>Thu, 11 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/11/deployment-script-vs-rultor.html</guid> </item> <item><title>Anti-Patterns in OOP</title><link>http://www.yegor256.com/2014/09/10/anti-patterns-in-oop.html</link> <description>&lt;p&gt;Here they come:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;p&gt;&lt;a href="/2014/05/13/why-null-is-bad.html"&gt;NULL References&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href="/2014/05/05/oop-alternative-to-utility-classes.html"&gt;Utility Classes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href="/2014/06/09/objects-should-be-immutable.html"&gt;Mutable Objects&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href="/2014/09/16/getters-and-setters-are-evil.html"&gt;Getters and Setters&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Singletons&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Controllers, Managers, Validators&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Public Static Methods&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Avoid them at all cost.&lt;/p&gt; </description> <pubDate>Wed, 10 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/10/anti-patterns-in-oop.html</guid> </item> <item><title>RESTful API and a Web Site in the Same URL</title><link>http://www.yegor256.com/2014/09/09/restful-web-sites.html</link> <description>&lt;p&gt;Look at Github RESTful API, for example. To get information about a repository you should make a GET request to &lt;a href="https://api.github.com/repos/yegor256/rultor"&gt;api.github.com/repos/yegor256/rultor&lt;/a&gt;. In response, you will get a JSON document with all the details of the &lt;code&gt;yegor256/rultor&lt;/code&gt; repository. Try it, the URL doesn&amp;#39;t require any authentication.&lt;/p&gt;&lt;p&gt;To open the same repository in a nice HTML+CSS page, you should use a different URL: &lt;a href="https://github.com/yegor256/rultor"&gt;github.com/yegor256/rultor&lt;/a&gt;. The URL is different, the server-side is definitely different, but the nature of the data is exactly the same. The only thing that changes is a representation layer.&lt;/p&gt;&lt;p&gt;In the first case, we get JSON; in the second &amp;mdash; HTML.&lt;/p&gt;&lt;p&gt;How about combining them? How about using the same URL and the same server-side processing mechanism for both of them? How about shifting the whole rendering task to the client-side (the browser) and letting the server work solely with the data?&lt;/p&gt; </description> <pubDate>Tue, 09 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/09/restful-web-sites.html</guid> </item> <item><title>Simple Java SSH Client</title><link>http://www.yegor256.com/2014/09/02/java-ssh-client.html</link> <description>&lt;p&gt;An execution of a shell command via SSH can be done in Java, in just a few lines, using &lt;a href="http://ssh.jcabi.com"&gt;jcabi-ssh&lt;/a&gt;:&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="java"&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Plain&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;SSH&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ssh.example.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yegor&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-----BEGIN RSA PRIVATE KEY-----...&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;exec&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;echo &amp;#39;Hello, world!&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="http://ssh.jcabi.com"&gt;jcabi-ssh&lt;/a&gt; is a convenient wrapper of &lt;a href="http://www.jcraft.com/jsch/"&gt;JSch&lt;/a&gt;, a well-known pure Java implementation of SSH2.&lt;/p&gt; </description> <pubDate>Tue, 02 Sep 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/09/02/java-ssh-client.html</guid> </item> <item><title>How We Run as a Non-Root Inside Docker Container</title><link>http://www.yegor256.com/2014/08/29/docker-non-root.html</link> <description>&lt;p&gt;Docker starts a process inside its container as a &amp;quot;root&amp;quot; user. In some cases, this is not convenient though. For example, &lt;code&gt;initdb&lt;/code&gt; from PostgreSQL doesn&amp;#39;t like to be started as root and will fail. In &lt;a href="http://www.rultor.com"&gt;rultor.com&lt;/a&gt;, a DevOps team assistant, &lt;a href="/2014/07/29/docker-in-rultor.html"&gt;we&amp;#39;re using Docker&lt;/a&gt; as a virtualization technology for every build we run.&lt;/p&gt;&lt;p&gt;Here is how we change the user inside a running container, right after it is started.&lt;/p&gt; </description> <pubDate>Fri, 29 Aug 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/08/29/docker-non-root.html</guid> </item> <item><title>How to Publish to Rubygems, in One Click</title><link>http://www.yegor256.com/2014/08/26/publish-to-rubygems.html</link> <description>&lt;p&gt;When I release a new version of &lt;a href="https://github.com/yegor256/jekyll-github-deploy"&gt;jgd&lt;/a&gt;, a Ruby gem, to Rubygems.org, it takes 30 seconds of my time. Here is how I released a bug fix for version 1.5.1, in &lt;a href="https://github.com/yegor256/jekyll-github-deploy/issues/6"&gt;Github issue #6&lt;/a&gt;:&lt;/p&gt;&lt;figure&gt;&lt;img src='/images/2014/08/github-ticket-6.png' style='width:600px;' alt='figure'/&gt;&lt;/figure&gt;&lt;p&gt;As you see, I gave a command to &lt;a href="http://www.rultor.com"&gt;Rultor&lt;/a&gt;, and it released a new version to Rubygems. I didn&amp;#39;t do anything else.&lt;/p&gt;&lt;p&gt;Now let&amp;#39;s see how you can do the same. How you can configure your project so that the release of its new version to Rubygems.org takes just a few seconds of your time.&lt;/p&gt; </description> <pubDate>Tue, 26 Aug 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/08/26/publish-to-rubygems.html</guid> </item> <item><title>How to Deploy to CloudBees, in One Click</title><link>http://www.yegor256.com/2014/08/25/deploy-to-cloudbees.html</link> <description>&lt;p&gt;When I deploy a new version of &lt;a href="http://www.stateful.co"&gt;stateful.co&lt;/a&gt;, a Java web application, to CloudBees, it takes 30 seconds of my time. Maybe even less. Recently, I deployed version 1.6.5. You can see how it all happened, in &lt;a href="https://github.com/sttc/stateful/issues/6"&gt;Github issue #6&lt;/a&gt;:&lt;/p&gt;&lt;figure&gt;&lt;img src='/images/2014/08/github-sttc-issue-6.png' style='width:600px;' alt='figure'/&gt;&lt;/figure&gt;&lt;p&gt;As you see, I gave a command to &lt;a href="http://www.rultor.com"&gt;Rultor&lt;/a&gt;, and it packaged, tested and deployed a new version to CloudBees. I didn&amp;#39;t do anything else.&lt;/p&gt;&lt;p&gt;Now let&amp;#39;s see how you can do the same. How you can configure your project so that the deployment of its new version to CloudBees takes just a few seconds of your time.&lt;/p&gt; </description> <pubDate>Mon, 25 Aug 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/08/25/deploy-to-cloudbees.html</guid> </item> <item><title>The Art of Software Testing by Glenford Myers</title><link>http://www.yegor256.com/2014/08/22/art-of-software-testing.html</link> <description>&lt;figure class='badge'&gt;&lt;a href='http://www.amazon.com/gp/product/1118031962/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1118031962&amp;amp;linkCode=as2&amp;amp;tag=yegor256com-20&amp;amp;linkId=RFPKLHVYE6E27XYO'&gt;&lt;img src='/images/2014/08/art-of-software-testing.png' style='width:96px;' alt='badge'/&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/1118031962/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1118031962&amp;amp;linkCode=as2&amp;amp;tag=yegor256com-20&amp;amp;linkId=RFPKLHVYE6E27XYO"&gt;&amp;quot;The Art of Software Testing&amp;quot;&lt;/a&gt; by Glenford J. Myers, Tom Badgett and Corey Sandler is one of my favorite books concerning testing and software engineering in general. In this article, I will provide an overview of the book, as well as highlight the ideas and quotes that I found to be the most interesting.&lt;/p&gt; </description> <pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/08/22/art-of-software-testing.html</guid> </item> <item><title>How to Release to Maven Central, in One Click</title><link>http://www.yegor256.com/2014/08/19/how-to-release-to-maven-central.html</link> <description>&lt;p&gt;When I release a new version of &lt;a href="http://aspects.jcabi.com"&gt;jcabi-aspects&lt;/a&gt;, a Java open source library, to Maven Central, it takes 30 seconds of my time. Maybe even less. Recently, I released version 0.17.2. You can see how it all happened, in &lt;a href="https://github.com/jcabi/jcabi-aspects/issues/80"&gt;Github issue #80&lt;/a&gt;:&lt;/p&gt;&lt;figure&gt;&lt;img src='/images/2014/08/github-ticket-80.png' style='width:600px;' alt='figure'/&gt;&lt;/figure&gt;&lt;p&gt;As you see, I gave a command to &lt;a href="http://www.rultor.com"&gt;Rultor&lt;/a&gt;, and it released a new version to Maven central. I didn&amp;#39;t do anything else.&lt;/p&gt;&lt;p&gt;Now let&amp;#39;s see how you can do the same. How you can configure your project so that the release of its new version to Maven Central takes just a few seconds of your time.&lt;/p&gt; </description> <pubDate>Tue, 19 Aug 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/08/19/how-to-release-to-maven-central.html</guid> </item> <item><title>Fluent JDBC Decorator</title><link>http://www.yegor256.com/2014/08/18/fluent-jdbc-decorator.html</link> <description>&lt;figure class='badge'&gt;&lt;a href='http://aspects.jcabi.com'&gt;&lt;img src='http://img.jcabi.com/logo-square.svg' style='width:64px;' alt='badge'/&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;This is how you fetch text from a SQL table with &lt;a href="http://jdbc.jcabi.com"&gt;jcabi-jdbc&lt;/a&gt;:&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="java"&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JdbcSession&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SELECT name FROM employee WHERE id = ?&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1234&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SingleOutcome&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Simple and straight forward, isn&amp;#39;t it? The library simplifies interaction with relational databases via JDBC, avoiding the need to use ORMs.&lt;/p&gt; </description> <pubDate>Mon, 18 Aug 2014 00:00:00 +0000</pubDate> <guid>http://www.yegor256.com/2014/08/18/fluent-jdbc-decorator.html</guid> </item> <generator>Jekyll</generator> </channel> </rss>